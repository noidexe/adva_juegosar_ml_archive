{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ"},{"name":"CREATE"},{"name":"READ_DATA"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"READ"},{"name":"UPDATE"},{"name":"CREATE"},{"name":"DELETE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":73871954,"authorName":"Nicolás Vinacur","from":"=?iso-8859-1?Q?Nicol=E1s_Vinacur?= &lt;nvinacur@...&gt;","replyTo":"LIST","senderId":"NSDY0v6iKZfCv8zfMsR-QQ5Hhtw4igxg28BIXLvP93vF-Ts7ZZfJnxElYb7Hoisrk506CBRnyw6-sAUyug7V7Xj1NEt156fS9Hye6HOFPoUhC2CDEoE6DCbIk6H6iGrjGHuNdQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Fw: The evolution of a programmer","postDate":"1102646753","msgId":12095,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMTQwMWM0ZGU2MiQ1ZGQ0OTI3MCRmYWU0N2VjOEBmZW5peD4="},"prevInTopic":0,"nextInTopic":0,"prevInTime":12094,"nextInTime":12096,"topicId":12095,"numMessagesInTopic":1,"msgSnippet":"... From:  Nicolás José Vinacur   To:","rawEmail":"Return-Path: &lt;nvinacur@...&gt;\r\nX-Sender: nvinacur@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (qmail 71759 invoked from network); 10 Dec 2004 02:47:38 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m20.grp.scd.yahoo.com with QMQP; 10 Dec 2004 02:47:38 -0000\r\nReceived: from unknown (HELO avas-mr06.fibertel.com.ar) (24.232.0.219)\n  by mta3.grp.scd.yahoo.com with SMTP; 10 Dec 2004 02:47:37 -0000\r\nReceived: from 250-228-126-200.fibertel.com.ar ([200.126.228.250]:5638 &quot;EHLO\n\tfenix&quot; smtp-auth: &quot;nvinacur&quot;) by avas-mr06.fibertel.com.ar with ESMTP\n\tid S294956AbULJCp7; Thu, 9 Dec 2004 23:45:59 -0300\r\nX-Comment: RFC 2476 MSA function at avas-mr06.fibertel.com.ar logged sender identity as: nvinacur\r\nMessage-ID: &lt;001401c4de62$5dd49270$fae47ec8@fenix&gt;\r\nTo: &lt;JuegosAR@...&gt;\r\nDate:\tThu, 9 Dec 2004 23:45:53 -0300\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tformat=flowed;\n\tcharset=&quot;iso-8859-1&quot;;\n\treply-type=response\r\nContent-Transfer-Encoding: 8bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2900.2180\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2180\r\nX-Fib-Al-Info: Al\r\nX-Fib-Al-MRId: d3efab334ecbecab5e86a7ba7456202a\r\nX-Fib-Al-From: nvinacur@...\r\nX-eGroups-Remote-IP: 24.232.0.219\r\nFrom: =?iso-8859-1?Q?Nicol=E1s_Vinacur?= &lt;nvinacur@...&gt;\r\nSubject: Fw: The evolution of a programmer\r\nX-Yahoo-Group-Post: member; u=73871954\r\n\r\n\n----- Original Message ----- \nFrom: &quot; &quot;Nicol�s Jos� Vinacur &lt;gringoar@...&gt;&quot; \n&lt;=?ISO-8859-1?Q?=20=22Nicol=E1s?= =?ISO-8859-1?Q?=20Jos=E9?= Vinacur \n&lt;gringoar@...&gt;&gt;\nTo: &lt;nvinacur@...&gt;\nSent: Thursday, December 09, 2004 11:43 PM\nSubject: FW: The evolution of a programmer\n\n\n&gt;\n&gt;\n&gt;&gt;From: &quot;Matias Ernesto Eissler&quot; &lt;meissler@...&gt;\n&gt;&gt;Reply-To: &quot;Matias Ernesto Eissler&quot; &lt;meissler@...&gt;\n&gt;&gt;To: &lt;gringoar@...&gt;\n&gt;&gt;Subject: The evolution of a programmer\n&gt;&gt;Date: Thu, 9 Dec 2004 11:25:31 -0300\n&gt;&gt;\n&gt;&gt;Espero que les guste :)\n&gt;&gt;\n&gt;&gt;High School/Jr.High\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;             10 PRINT &quot;HELLO WORLD&quot;\n&gt;&gt;             20 END\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;First year in College\n&gt;&gt;\n&gt;&gt;             program Hello(input, output)\n&gt;&gt;               begin\n&gt;&gt;                 writeln(&#39;Hello World&#39;)\n&gt;&gt;               end.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Senior year in College\n&gt;&gt;\n&gt;&gt;             (defun hello\n&gt;&gt;               (print\n&gt;&gt;                 (cons &#39;Hello (list &#39;World))))\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;New professional\n&gt;&gt;\n&gt;&gt;             #include &lt;stdio.h&gt;\n&gt;&gt;             void main(void)\n&gt;&gt;             {\n&gt;&gt;               char *message[] = {&quot;Hello &quot;, &quot;World&quot;};\n&gt;&gt;               int i;\n&gt;&gt;\n&gt;&gt;               for(i = 0; i &lt; 2; ++i)\n&gt;&gt;                 printf(&quot;%s&quot;, message[i]);\n&gt;&gt;               printf(&quot;&#92;n&quot;);\n&gt;&gt;             }\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Seasoned professional\n&gt;&gt;\n&gt;&gt;             #include &lt;iostream.h&gt;\n&gt;&gt;             #include &lt;string.h&gt;\n&gt;&gt;\n&gt;&gt;             class string\n&gt;&gt;             {\n&gt;&gt;            private:\n&gt;&gt;              int size;\n&gt;&gt;               char *ptr;\n&gt;&gt;\n&gt;&gt;             public:\n&gt;&gt;               string() : size(0), ptr(new char(&#39;&#92;0&#39;)) {}\n&gt;&gt;\n&gt;&gt;               string(const string &s) : size(s.size)\n&gt;&gt;               {\n&gt;&gt;                 ptr = new char[size + 1];\n&gt;&gt;                 strcpy(ptr, s.ptr);\n&gt;&gt;               }\n&gt;&gt;\n&gt;&gt;               ~string()\n&gt;&gt;               {\n&gt;&gt;                 delete [] ptr;\n&gt;&gt;               }\n&gt;&gt;\n&gt;&gt;               friend ostream &operator &lt;&lt;(ostream &, const string &);\n&gt;&gt;               string &operator=(const char *);\n&gt;&gt;             };\n&gt;&gt;\n&gt;&gt;             ostream &operator&lt;&lt;(ostream &stream, const string &s)\n&gt;&gt;             {\n&gt;&gt;               return(stream &lt;&lt; s.ptr);\n&gt;&gt;             }\n&gt;&gt;\n&gt;&gt;             string &string::operator=(const char *chrs)\n&gt;&gt;             {\n&gt;&gt;               if (this != &chrs)\n&gt;&gt;               {\n&gt;&gt;                 delete [] ptr;\n&gt;&gt;                size = strlen(chrs);\n&gt;&gt;                 ptr = new char[size + 1];\n&gt;&gt;                 strcpy(ptr, chrs);\n&gt;&gt;               }\n&gt;&gt;               return(*this);\n&gt;&gt;             }\n&gt;&gt;\n&gt;&gt;             int main()\n&gt;&gt;             {\n&gt;&gt;               string str;\n&gt;&gt;\n&gt;&gt;               str = &quot;Hello World&quot;;\n&gt;&gt;               cout &lt;&lt; str &lt;&lt; endl;\n&gt;&gt;\n&gt;&gt;               return(0);\n&gt;&gt;             }\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Master Programmer\n&gt;&gt;\n&gt;&gt;             [\n&gt;&gt;             uuid(2573F8F4-CFEE-101A-9A9F-00AA00342820)\n&gt;&gt;             ]\n&gt;&gt;             library LHello\n&gt;&gt;             {\n&gt;&gt;                 // bring in the master library\n&gt;&gt;                 importlib(&quot;actimp.tlb&quot;);\n&gt;&gt;                 importlib(&quot;actexp.tlb&quot;);\n&gt;&gt;\n&gt;&gt;                 // bring in my interfaces\n&gt;&gt;                 #include &quot;pshlo.idl&quot;\n&gt;&gt;\n&gt;&gt;                 [\n&gt;&gt;                 uuid(2573F8F5-CFEE-101A-9A9F-00AA00342820)\n&gt;&gt;                 ]\n&gt;&gt;                 cotype THello\n&gt;&gt;              {\n&gt;&gt;              interface IHello;\n&gt;&gt;              interface IPersistFile;\n&gt;&gt;              };\n&gt;&gt;             };\n&gt;&gt;\n&gt;&gt;             [\n&gt;&gt;             exe,\n&gt;&gt;             uuid(2573F890-CFEE-101A-9A9F-00AA00342820)\n&gt;&gt;             ]\n&gt;&gt;             module CHelloLib\n&gt;&gt;             {\n&gt;&gt;\n&gt;&gt;                 // some code related header files\n&gt;&gt;                 importheader(&lt;windows.h&gt;);\n&gt;&gt;                 importheader(&lt;ole2.h&gt;);\n&gt;&gt;                 importheader(&lt;except.hxx&gt;);\n&gt;&gt;                 importheader(&quot;pshlo.h&quot;);\n&gt;&gt;                 importheader(&quot;shlo.hxx&quot;);\n&gt;&gt;                 importheader(&quot;mycls.hxx&quot;);\n&gt;&gt;\n&gt;&gt;                 // needed typelibs\n&gt;&gt;                 importlib(&quot;actimp.tlb&quot;);\n&gt;&gt;                 importlib(&quot;actexp.tlb&quot;);\n&gt;&gt;                 importlib(&quot;thlo.tlb&quot;);\n&gt;&gt;\n&gt;&gt;                 [\n&gt;&gt;                 uuid(2573F891-CFEE-101A-9A9F-00AA00342820),\n&gt;&gt;                 aggregatable\n&gt;&gt;                 ]\n&gt;&gt;                 coclass CHello\n&gt;&gt;              {\n&gt;&gt;              cotype THello;\n&gt;&gt;              };\n&gt;&gt;             };\n&gt;&gt;\n&gt;&gt;             #include &quot;ipfix.hxx&quot;\n&gt;&gt;\n&gt;&gt;             extern HANDLE hEvent;\n&gt;&gt;\n&gt;&gt;             class CHello : public CHelloBase\n&gt;&gt;             {\n&gt;&gt;             public:\n&gt;&gt;                 IPFIX(CLSID_CHello);\n&gt;&gt;\n&gt;&gt;                 CHello(IUnknown *pUnk);\n&gt;&gt;                 ~CHello();\n&gt;&gt;\n&gt;&gt;                 HRESULT  __stdcall PrintSz(LPWSTR pwszString);\n&gt;&gt;\n&gt;&gt;             private:\n&gt;&gt;                 static int cObjRef;\n&gt;&gt;             };\n&gt;&gt;\n&gt;&gt;             #include &lt;windows.h&gt;\n&gt;&gt;             #include &lt;ole2.h&gt;\n&gt;&gt;             #include &lt;stdio.h&gt;\n&gt;&gt;             #include &lt;stdlib.h&gt;\n&gt;&gt;             #include &quot;thlo.h&quot;\n&gt;&gt;             #include &quot;pshlo.h&quot;\n&gt;&gt;             #include &quot;shlo.hxx&quot;\n&gt;&gt;             #include &quot;mycls.hxx&quot;\n&gt;&gt;\n&gt;&gt;             int CHello::cObjRef = 0;\n&gt;&gt;\n&gt;&gt;             CHello::CHello(IUnknown *pUnk) : CHelloBase(pUnk)\n&gt;&gt;             {\n&gt;&gt;                 cObjRef++;\n&gt;&gt;                 return;\n&gt;&gt;             }\n&gt;&gt;\n&gt;&gt;             HRESULT  __stdcall  CHello::PrintSz(LPWSTR pwszString)\n&gt;&gt;             {\n&gt;&gt;                 printf(&quot;%ws&#92;n&quot;, pwszString);\n&gt;&gt;                 return(ResultFromScode(S_OK));\n&gt;&gt;             }\n&gt;&gt;\n&gt;&gt;             CHello::~CHello(void)\n&gt;&gt;             {\n&gt;&gt;\n&gt;&gt;             // when the object count goes to zero, stop the server\n&gt;&gt;             cObjRef--;\n&gt;&gt;             if( cObjRef == 0 )\n&gt;&gt;                 PulseEvent(hEvent);\n&gt;&gt;\n&gt;&gt;             return;\n&gt;&gt;             }\n&gt;&gt;\n&gt;&gt;             #include &lt;windows.h&gt;\n&gt;&gt;             #include &lt;ole2.h&gt;\n&gt;&gt;             #include &quot;pshlo.h&quot;\n&gt;&gt;             #include &quot;shlo.hxx&quot;\n&gt;&gt;             #include &quot;mycls.hxx&quot;\n&gt;&gt;\n&gt;&gt;             HANDLE hEvent;\n&gt;&gt;\n&gt;&gt;              int _cdecl main(\n&gt;&gt;             int argc,\n&gt;&gt;             char * argv[]\n&gt;&gt;             ) {\n&gt;&gt;             ULONG ulRef;\n&gt;&gt;             DWORD dwRegistration;\n&gt;&gt;             CHelloCF *pCF = new CHelloCF();\n&gt;&gt;\n&gt;&gt;             hEvent = CreateEvent(NULL, FALSE, FALSE, NULL);\n&gt;&gt;\n&gt;&gt;             // Initialize the OLE libraries\n&gt;&gt;             CoInitializeEx(NULL, COINIT_MULTITHREADED);\n&gt;&gt;\n&gt;&gt;             CoRegisterClassObject(CLSID_CHello, pCF, CLSCTX_LOCAL_SERVER,\n&gt;&gt;                 REGCLS_MULTIPLEUSE, &dwRegistration);\n&gt;&gt;\n&gt;&gt;             // wait on an event to stop\n&gt;&gt;             WaitForSingleObject(hEvent, INFINITE);\n&gt;&gt;\n&gt;&gt;             // revoke and release the class object\n&gt;&gt;             CoRevokeClassObject(dwRegistration);\n&gt;&gt;             ulRef = pCF-&gt;Release();\n&gt;&gt;\n&gt;&gt;             // Tell OLE we are going away.\n&gt;&gt;             CoUninitialize();\n&gt;&gt;\n&gt;&gt;             return(0);\n&gt;&gt;             }\n&gt;&gt;\n&gt;&gt;             extern CLSID CLSID_CHello;\n&gt;&gt;             extern UUID LIBID_CHelloLib;\n&gt;&gt;\n&gt;&gt;             CLSID CLSID_CHello = { /* \n&gt;&gt; 2573F891-CFEE-101A-9A9F-00AA00342820*/\n&gt;&gt;                 0x2573F891,\n&gt;&gt;                 0xCFEE,\n&gt;&gt;                 0x101A,\n&gt;&gt;                 { 0x9A, 0x9F, 0x00, 0xAA, 0x00, 0x34, 0x28, 0x20 }\n&gt;&gt;             };\n&gt;&gt;\n&gt;&gt;             UUID LIBID_CHelloLib = { \n&gt;&gt; /*2573F890-CFEE-101A-9A9F-00AA00342820\n&gt;&gt;*/\n&gt;&gt;                 0x2573F890,\n&gt;&gt;                 0xCFEE,\n&gt;&gt;                 0x101A,\n&gt;&gt;                 { 0x9A, 0x9F, 0x00, 0xAA, 0x00, 0x34, 0x28, 0x20 }\n&gt;&gt;             };\n&gt;&gt;\n&gt;&gt;             #include &lt;windows.h&gt;\n&gt;&gt;             #include &lt;ole2.h&gt;\n&gt;&gt;             #include &lt;stdlib.h&gt;\n&gt;&gt;             #include &lt;string.h&gt;\n&gt;&gt;             #include &lt;stdio.h&gt;\n&gt;&gt;             #include &quot;pshlo.h&quot;\n&gt;&gt;             #include &quot;shlo.hxx&quot;\n&gt;&gt;             #include &quot;clsid.h&quot;\n&gt;&gt;\n&gt;&gt;             int _cdecl main(\n&gt;&gt;             int argc,\n&gt;&gt;             char * argv[]\n&gt;&gt;             ) {\n&gt;&gt;             HRESULT  hRslt;\n&gt;&gt;             IHello        *pHello;\n&gt;&gt;             ULONG  ulCnt;\n&gt;&gt;             IMoniker * pmk;\n&gt;&gt;             WCHAR  wcsT[_MAX_PATH];\n&gt;&gt;             WCHAR  wcsPath[2 * _MAX_PATH];\n&gt;&gt;\n&gt;&gt;             // get object path\n&gt;&gt;             wcsPath[0] = &#39;&#92;0&#39;;\n&gt;&gt;             wcsT[0] = &#39;&#92;0&#39;;\n&gt;&gt;             if( argc &gt; 1) {\n&gt;&gt;                 mbstowcs(wcsPath, argv[1], strlen(argv[1]) + 1);\n&gt;&gt;                 wcsupr(wcsPath);\n&gt;&gt;                 }\n&gt;&gt;             else {\n&gt;&gt;                 fprintf(stderr, &quot;Object path must be specified&#92;n&quot;);\n&gt;&gt;                 return(1);\n&gt;&gt;                 }\n&gt;&gt;\n&gt;&gt;             // get print string\n&gt;&gt;             if(argc &gt; 2)\n&gt;&gt;                 mbstowcs(wcsT, argv[2], strlen(argv[2]) + 1);\n&gt;&gt;             else\n&gt;&gt;                 wcscpy(wcsT, L&quot;Hello World&quot;);\n&gt;&gt;\n&gt;&gt;             printf(&quot;Linking to object %ws&#92;n&quot;, wcsPath);\n&gt;&gt;             printf(&quot;Text String %ws&#92;n&quot;, wcsT);\n&gt;&gt;\n&gt;&gt;             // Initialize the OLE libraries\n&gt;&gt;             hRslt = CoInitializeEx(NULL, COINIT_MULTITHREADED);\n&gt;&gt;\n&gt;&gt;             if(SUCCEEDED(hRslt)) {\n&gt;&gt;\n&gt;&gt;                 hRslt = CreateFileMoniker(wcsPath, &pmk);\n&gt;&gt;                 if(SUCCEEDED(hRslt))\n&gt;&gt;              hRslt = BindMoniker(pmk, 0, IID_IHello, (void **)&pHello);\n&gt;&gt;\n&gt;&gt;                 if(SUCCEEDED(hRslt)) {\n&gt;&gt;\n&gt;&gt;              // print a string out\n&gt;&gt;              pHello-&gt;PrintSz(wcsT);\n&gt;&gt;\n&gt;&gt;              Sleep(2000);\n&gt;&gt;              ulCnt = pHello-&gt;Release();\n&gt;&gt;              }\n&gt;&gt;                 else\n&gt;&gt;              printf(&quot;Failure to connect, status: %lx&quot;, hRslt);\n&gt;&gt;\n&gt;&gt;                 // Tell OLE we are going away.\n&gt;&gt;                 CoUninitialize();\n&gt;&gt;                 }\n&gt;&gt;\n&gt;&gt;             return(0);\n&gt;&gt;             }\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Apprentice Hacker\n&gt;&gt;\n&gt;&gt;             #!/usr/local/bin/perl\n&gt;&gt;             $msg=&quot;Hello, world.&#92;n&quot;;\n&gt;&gt;             if ($#ARGV &gt;= 0) {\n&gt;&gt;               while(defined($arg=shift(@ARGV))) {\n&gt;&gt;                 $outfilename = $arg;\n&gt;&gt;                 open(FILE, &quot;&gt;&quot; . $outfilename) || die &quot;Can&#39;t write\n&gt;&gt;$arg:$!&#92;n&quot;;\n&gt;&gt;                 print (FILE $msg);\n&gt;&gt;                 close(FILE) || die &quot;Can&#39;t close $arg: $!&#92;n&quot;;\n&gt;&gt;               }\n&gt;&gt;             } else {\n&gt;&gt;               print ($msg);\n&gt;&gt;             }\n&gt;&gt;             1;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Experienced Hacker\n&gt;&gt;\n&gt;&gt;             #include &lt;stdio.h&gt;\n&gt;&gt;             #define S &quot;Hello, World&#92;n&quot;\n&gt;&gt;             main(){exit(printf(S) == strlen(S) ? 0 : 1);}\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Seasoned Hacker\n&gt;&gt;\n&gt;&gt;             % cc -o a.out ~/src/misc/hw/hw.c\n&gt;&gt;             % a.out\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Guru Hacker\n&gt;&gt;\n&gt;&gt;             % cat\n&gt;&gt;             Hello, world.\n&gt;&gt;             ^D\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;New Manager\n&gt;&gt;\n&gt;&gt;             10 PRINT &quot;HELLO WORLD&quot;\n&gt;&gt;             20 END\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Middle Manager\n&gt;&gt;\n&gt;&gt;             mail -s &quot;Hello, world.&quot; bob@b12\n&gt;&gt;             Bob, could you please write me a program that prints &quot;Hello,\n&gt;&gt;world.&quot;?\n&gt;&gt;             I need it by tomorrow.\n&gt;&gt;             ^D\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Senior Manager\n&gt;&gt;\n&gt;&gt;             % zmail jim\n&gt;&gt;             I need a &quot;Hello, world.&quot; program by this afternoon.\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;\n&gt;&gt;Chief Executive\n&gt;&gt;\n&gt;&gt;             % letter\n&gt;&gt;             letter: Command not found.\n&gt;&gt;             % mail\n&gt;&gt;             To: ^X ^F ^C\n&gt;&gt;             % help mail\n&gt;&gt;             help: Command not found.\n&gt;&gt;             % damn!\n&gt;&gt;             !: Event unrecognized\n&gt;&gt;             % logout\n&gt;\n&gt; _________________________________________________________________\n&gt; Express yourself instantly with MSN Messenger! Download today it&#39;s FREE! \n&gt; http://messenger.msn.click-url.com/go/onm00200471ave/direct/01/\n&gt;\n&gt; \n\n\n\n"}}