{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ"},{"name":"READ_DATA"},{"name":"CREATE"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"READ"},{"name":"CREATE"},{"name":"DELETE"},{"name":"UPDATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":206591224,"authorName":"anarkimedes_graham","from":"&quot;anarkimedes_graham&quot; &lt;anarkimedes@...&gt;","profile":"anarkimedes_graham","replyTo":"LIST","senderId":"OmIof99V2cbhl8IJ3Zo56dWTHzbL37Qdiu05_pOAI8Xu4iGQ5KB93oZnDt9YyVXagZ41pqJruasQ8fBeGm6z2YqbGhc904aYXwkNEAvi_QdHzfm7QQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: Ayuda sobre Bitmap Fonts !","postDate":"1112026132","msgId":12557,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGQyOWE2aytzc3RrQGVHcm91cHMuY29tPg==","inReplyToHeader":"PDQyNDc2OUFELjMwODA5MDBAZ21haWwuY29tPg=="},"prevInTopic":12544,"nextInTopic":0,"prevInTime":12556,"nextInTime":12558,"topicId":12494,"numMessagesInTopic":8,"msgSnippet":"CDX (www.cdxlib.com) tiene un add-on que es CDXBitmapFont que si mal no recuerdo justamente guarda la tabla de caracteres en 256 px de ancho (no estoy 100%","rawEmail":"Return-Path: &lt;anarkimedes@...&gt;\r\nX-Sender: anarkimedes@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (qmail 5952 invoked from network); 28 Mar 2005 16:08:54 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m21.grp.scd.yahoo.com with QMQP; 28 Mar 2005 16:08:54 -0000\r\nReceived: from unknown (HELO n8a.bulk.scd.yahoo.com) (66.94.237.42)\n  by mta1.grp.scd.yahoo.com with SMTP; 28 Mar 2005 16:08:54 -0000\r\nDomainKey-Signature: \r\nReceived: from [66.218.66.58] by n8.bulk.scd.yahoo.com with NNFMP; 28 Mar 2005 16:08:53 -0000\r\nReceived: from [66.218.66.64] by mailer7.bulk.scd.yahoo.com with NNFMP; 28 Mar 2005 16:08:53 -0000\r\nDate: Mon, 28 Mar 2005 16:08:52 -0000\r\nTo: JuegosAR@...\r\nMessage-ID: &lt;d29a6k+sstk@...&gt;\r\nIn-Reply-To: &lt;424769AD.3080900@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Length: 3129\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: &quot;anarkimedes_graham&quot; &lt;anarkimedes@...&gt;\r\nSubject: Re: Ayuda sobre Bitmap Fonts !\r\nX-Yahoo-Group-Post: member; u=206591224\r\nX-Yahoo-Profile: anarkimedes_graham\r\n\r\n\nCDX (www.cdxlib.com) tiene un add-on que es CDXBitmapFont que si mal \nno r=\r\necuerdo justamente guarda la tabla de caracteres en 256 px de \nancho (no es=\r\ntoy 100% seguro de esto, pero de todas maneras, en caso \nde que no sea as=\r\n=ED, es muy sencillo de modificar).\n\nEl uso de la libreria es muy f=E1cil, =\r\nes de esas que viene todo ya \nordenadito y listo para compilar y correr, in=\r\ncluso hay un framework \ndonde solo ten=E9s que llenar GameInit(), GameMain(=\r\n) y GameShutDown()\n\nCada CDXSurface tiene un m=E9todo que es SaveBMP y CDXB=\r\nitmapFont guarda \nla imagen con la tabla de los caracteres en una CDXSurfac=\r\ne y a los \ncharwidths los guarda en un arreglo de 128 enteros, as=ED que co=\r\nn menos \nde 10 l=EDneas de c=F3digo deber=EDas estar:\n\n#include &quot;CDXBitmapF=\r\nont.h&quot;\n\nvoid GuardarBitmapFont(CDXScreen* pScreen, char* FontName,int \nFont=\r\nHeight,COLORREF fontcolor,COLORREF bkcolor)\n{\nCDXBitmapFont* bmf=3Dnew CDXB=\r\nitmapFont();\nbmf-&gt;Create(pScreen,FontName,FontHeight,fontcolor,bkcolor, FW_=\r\nNORMAL);\nbmf-&gt;TexSurface-&gt;SaveBMP(&quot;fonts.bmp&quot;); //modificar: TexSurface es =\r\n\nprivado\nFILE* fp=3Dfopen(&quot;charwidths.int&quot;,&quot;wb&quot;);\nfwrite(bmf-&gt;CharWidths,12=\r\n8,sizeof(int),fp); //modificar: Charwidths \nes privado\nfclose(fp);\ndelete b=\r\nmf;\n}\n\nCDXBitmapFont por default viene solo para los primeros 128 \ncaracter=\r\nes, si quer=E9s usar la =F1, los s=EDmbolos =BF, =A1, etc. ten=E9s que \nree=\r\nmplazar las partes del c=F3digo donde usa (char) por (unsigned char) \ny cam=\r\nbiar el tama=F1o de todos los arreglos de 128 a 256 (obvio, \nescribo esto d=\r\ne denso nom=E1s). El otro punto es cambiar en CDXSurface-\n&gt;ChangeFont() el =\r\nflag DEFAULT_CHARSET por ANSI_CHARSET.\n\nSi quer=E9s un antialiasing muy ped=\r\norro, pod=E9s hacer un barrido por el \nbuffer del bmp e interpolar los colo=\r\nres de los p=EDxeles contiguos que \nsean distintos, esto es:\n\n[asumo que es=\r\nt=E1 en 24 bits para hacerla simple, obviamente lo ideal \nes despu=E9s tene=\r\nr la tabla de fonts en un PNG con X colors.]\n\n(en el foro poste=E9 un wrapp=\r\ner para libpng)\n\ntypedef _RGB{\nBYTE r,g,b;\n}RGB;\n\nBYTE* buf=3D(BYTE*)bitmap=\r\n.bmBits;\nint bmPitch=3Dbitmap.bmWidth*3+bitmap.bmOffBytes;\n\nfor(int iy=3D1;=\r\niy&lt;bitmap.bmHeight-1,iy++)\n{\n       for(int ix=3D1;ix&lt;bitmap.bmWidth-1,ix++=\r\n)\n       {\n          //horizontal\n         RGB p0=3D((RGB*)buf)[0];\n       =\r\n  RGB p1=3D((RGB*)buf)[1];\n         RGB p2=3D((RGB*)buf)[2];         \n     =\r\n    p1.r=3D(p0.r+p2.r)&gt;&gt;1;\n         p1.g=3D(p0.g+p2.g)&gt;&gt;1;\n         p1.b=3D=\r\n(p0.b+p2.b)&gt;&gt;1;\n\n         //vertical\n         p0=3D((RGB*)buf)[-bmPitch +1]=\r\n;\n         p1=3D((RGB*)buf)[1];\n         p2=3D((RGB*)buf)[bmPitch +1];     =\r\n    \n         p1.r=3D(p0.r+p2.r)&gt;&gt;1;\n         p1.g=3D(p0.g+p2.g)&gt;&gt;1;\n      =\r\n   p1.b=3D(p0.b+p2.b)&gt;&gt;1;\n\n         buf+=3D3;        \n       }\n\n     buf+=\r\n=3Dbitmap.bmOffBytes;\n}\n\nLa forma m=E1s correcta de hacerlo de todas manera=\r\ns ser=EDa con matrices. \nEn internet dice por todos lados como hacer eso. S=\r\ni quer=E9s ahorrarte \nla b=FAsqueda, en el Special Coding Digest de la HUGI=\r\n hay varios \nart=EDculos (Poor Man=B4s Bilinear y Filters Explained, entre =\r\notros).\n\n\nBueno, eso de arriba lo escrib=ED al tunt=FAn, pero creo que yo l=\r\no hab=EDa \nhecho m=E1s o menos as=ED y anduvo.\n\nSuerte!\n\n\n\n\n\n\n\n"}}