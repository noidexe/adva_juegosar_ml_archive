{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"CREATE"},{"name":"READ"},{"name":"READ_DATA"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PIN","capabilities":[{"name":"CREATE"},{"name":"DELETE"},{"name":"READ"},{"name":"UPDATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":63432839,"authorName":"Juan Linietsky","from":"Juan Linietsky &lt;coding@...&gt;","replyTo":"LIST","senderId":"jZSCQtWtDhG0kZ5C3nbq_WD3RQHxPIYb5KxSOr_wdvE2PNgufpilBFkMfTjlFlnMcam2eMOA2NrqU4YOQTldBLvJUgLQ0zQ8u3kO","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [JuegosAr] Experiencias como programador.. (compartan!)","postDate":"1116082718","msgId":13276,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQyODYxMjFFLjMwNzA1MDNAcmVkdXouY29tLmFyPg==","inReplyToHeader":"PDIwMDUwNTEzMTkzMjA2Ljg0NDM0LnFtYWlsQHdlYjYxMjIzLm1haWwueWFob28uY29tPg==","referencesHeader":"PDIwMDUwNTEzMTkzMjA2Ljg0NDM0LnFtYWlsQHdlYjYxMjIzLm1haWwueWFob28uY29tPg=="},"prevInTopic":13274,"nextInTopic":13277,"prevInTime":13275,"nextInTime":13277,"topicId":13272,"numMessagesInTopic":4,"msgSnippet":"Algunas consideraciones ... Personalmente estoy en contra de assertear por asseterar. Aun despues de lanzado un producto, puede llegar a tener un bug que otro","rawEmail":"Return-Path: &lt;coding@...&gt;\r\nX-Sender: coding@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (qmail 53204 invoked from network); 14 May 2005 14:58:17 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m24.grp.scd.yahoo.com with QMQP; 14 May 2005 14:58:17 -0000\r\nReceived: from unknown (HELO john.anime.com.ar) (64.113.36.218)\n  by mta3.grp.scd.yahoo.com with SMTP; 14 May 2005 14:58:17 -0000\r\nReceived: from [192.168.0.2] (OL93-140.fibertel.com.ar [24.232.140.93])\n\t(authenticated)\n\tby cobalt-eth1.anime.com.ar (8.10.2/8.10.2) with ESMTP id j4HLWnF14407\n\tfor &lt;JuegosAR@...&gt;; Tue, 17 May 2005 17:32:50 -0400\r\nMessage-ID: &lt;4286121E.3070503@...&gt;\r\nDate: Sat, 14 May 2005 11:58:38 -0300\r\nUser-Agent: Debian Thunderbird 1.0 (X11/20050116)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: JuegosAR@...\r\nReferences: &lt;20050513193206.84434.qmail@...&gt;\r\nIn-Reply-To: &lt;20050513193206.84434.qmail@...&gt;\r\nContent-Type: text/plain; charset=windows-1252; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: Juan Linietsky &lt;coding@...&gt;\r\nSubject: Re: [JuegosAr] Experiencias como programador.. (compartan!)\r\nX-Yahoo-Group-Post: member; u=63432839\r\n\r\nAlgunas consideraciones\n\n\n&gt; Por m�s b�sico que pueda sonar, el c�digo no debe asumir nada. El \n&gt; lenguaje C tiene una brillante funci�n est�ndar llamada �assert�, la \n&gt; cual fue dise�ada para atrapar errores. Cada vez que a tu c�digo se le \n&gt; de datos del exterior, ten el habito de asegurarte de que el dato es \n&gt; lo que tu esperabas que sea. Si no lo es, assert AND imprim� un \n&gt; mensaje que explique exactamente que esta mal y por que el programa \n&gt; asserteo (N. del T. assert en ingles significa afirmar). \n\nPersonalmente estoy en contra de assertear por asseterar. Aun despues de \nlanzado un producto, puede llegar a tener un bug que otro luego de eso \npor razones muy triviales, pero que aun asi harian crashear al programa.\nYo prefiero, ademas de asertear, handlear el error de manera que no se \nvaya a la mierda todo y que siga\nfuncionando, siempre. Solo en casos donde realmente es imposible \ncontinuar luego de ese error forzaria\na la aplicacion a salir. Si, es mas laburo, pero si uno se acostumbra a \nhandlear todos los posibles errores,\nel codigo se vuelve super estable por naturaleza.\n\n&gt; La t�cnica es simple, cuando sea que uses un par�ntesis, pon un \n&gt; comentario que diga que esta haciendo la l�nea. Solo escr�belo como si \n&gt; estuvieras leyendo la l�nea en voz alta.\n\nCreo que esto esta lejos de lo ideal. Si el codigo esta bien ordenado y \nlas interfaces/encapsulacion reflejan\nfacilmente el modo de uso de un objeto, y ademas las responsabilidades \ndel objeto estan perfectamente definidas... entonces no se necesita \ntanta documentacion. Programadores mas avanzados, con mucha experiencia \nde trabajo en equipo, tienen la asombrosa habilidad de leer y entender \ncodigo y entenderlo con facilidad.. para gente asi, los comentarios \npueden hasta llegar a ser hasta molestos porque hacen leer el codigo mas \ndificil :) Esto es porque simplemente primero adivinanan como la \nfuncion/algoritmo funciona y luego ven como la implementacion hace lo \nque piensan que hace. En la gran mayoria de los casos es asi, pero en \nlos casos donde realmnte se documenta es cuando el algoritmo ya es algo \nmucho mas complicado y se necesita entender el concepto primero.\n\n&gt; Sin embargo siempre hay m�s que aprender. Si algunos tienen un enfoque \n&gt; diferente a algo que t� has escrito, no lo tomes como algo personal y \n&gt; no lo descartes o te enojes con ellos. Habla con ellos y una o dos \n&gt; cosas resultaran.\n\nQuiero resaltar sobre esto que la razon mas grande por la que no puedo \ndiscutir sobre disenio con otros\nprogramadores, es porque la mayoria son demasiado puristas a nivel \nteorico, y buscan soluciones\nteoricamente acertadas, limpias, flexibles, etc.\nMi punto de vista al desarrollar, el que siempre me funciono y me \npermitio desarrollar aplicaciones a enorme escala es:\n\n*Hacer interfaces de codigo que sean faciles de usar por mi o por otro \nprogramador, no el end-of-all-flexibility\n*Hacer que sean faciles de entender.. aun si tengo que meter un par de \nhacks en la parte de adentro de la encapsulacion (pero que no se vean en \nla interface del objeto) lo considero valido para lograr que la \ninterface sea mas sencilla/facil/intuitiva de usar.\n*Evitar objetos supermonoliticos que hacen de todo. En general siempre \ntrato de separar todo en dos tipos de objeto: Objetos que contienen \ndatos y Objetos que procesan esos datos. Raramente hago objetos que \nhacen las dos cosas. Esto me sirve para reusar/encapsular todo con mas \nfacilidad, para poder realizar cambios de disenio mas adelate sin tener \nmucho problema.\n*Considero que la flexibilidad del codigo (la posibilidad de que \ncontemple varias situaciones) me es util mas que nada cuando no se \nexactamente como es lo que quiero hacer, y por mas que lo piense y \ndisenie, no se realmente como es la forma mas acertada.. entonces \nempiezo por un disenio flexible que se adapte todo, y luego lo voy \nrigidizando para hacerlo mas facil de usar.\n\nEste tipo de puntos de vista lograron que muchos teoricos y gente de \nciencias me odien :)\nPero la verdad es que me da muy buenos resultados, siendo que en general \ne promedio de lineas\nde codigo de los proyectos en los que trabajo es de 150.000 a 200.000 , \nme permite que las\ncosas no se vuelvan una pesadilla.\n\nBueno, solo eso me interesaba compartir como experiencia, me encantaria\nleer las experiencias de otros en estos temas tambien.\n\nSaludos!\n\nJuan\n\n\n"}}