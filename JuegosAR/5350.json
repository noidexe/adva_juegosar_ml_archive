{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ_DATA"},{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"DELETE"},{"name":"READ"},{"name":"UPDATE"},{"name":"CREATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":112566267,"authorName":"Nahuel Greco","from":"Nahuel Greco &lt;nahu@...&gt;","replyTo":"LIST","senderId":"_l8XRgs6BY56yJXcew-1j6Abk_gfJJMCpX0wcm0bWQyrjU26p0KpSm76tHmE3pkHyAUAd6lhcsQY2tenXp141LfaYopKDE4","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [ADVA] RE: interfases adaptables din\u0010","postDate":"1030370081","msgId":5350,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwODI2MTA1NDQxLjY4OTBkOTU0Lm5haHVAc29mdGhvbWUubmV0Pg==","inReplyToHeader":"PDAwMjIwMWMyNGQwMyQzNWY4NDk2MCQ0MjYzYThjMEBzYWJhcmFzYS5raz4=","referencesHeader":"PDIwMDIwODE3MDIzOTExLjYyNzMucW1haWxAd2ViMTQ0MTAubWFpbC55YWhvby5jb20+CTxPRTUzQzRvbjBZa0tsTUpyMG5TMDAwMDU3MWNAaG90bWFpbC5jb20+CTwyMDAyMDgyMTAyMDIxMy40NmEzMjUwZC5uYWh1QHNvZnRob21lLm5ldD4JPDAwMWEwMWMyNGNiZCQzOTRlZjE0MCQ2OTEwMjljOEBNSUNST1NPRlQ+CTwyMDAyMDgyNjAyMzg0Ny4zOTk3NDNmZS5uYWh1QHNvZnRob21lLm5ldD4JPDAwMjIwMWMyNGQwMyQzNWY4NDk2MCQ0MjYzYThjMEBzYWJhcmFzYS5raz4="},"prevInTopic":5349,"nextInTopic":5351,"prevInTime":5349,"nextInTime":5351,"topicId":5347,"numMessagesInTopic":8,"msgSnippet":"On Mon, 26 Aug 2002 10:19:23 -0300 ... 4 ... Igualmente no se utiliza tanto en Python el evaluar codigo de esta manera, pocas veces lo precisas hacer. Aunque","rawEmail":"Return-Path: &lt;nahu@...&gt;\r\nX-Sender: nahu@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (EGP: mail-8_1_0_1); 26 Aug 2002 13:54:47 -0000\r\nReceived: (qmail 91874 invoked from network); 26 Aug 2002 13:54:46 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m10.grp.scd.yahoo.com with QMQP; 26 Aug 2002 13:54:46 -0000\r\nReceived: from unknown (HELO www.codelarvs.com.ar) (200.63.161.31)\n  by mta2.grp.scd.yahoo.com with SMTP; 26 Aug 2002 13:54:45 -0000\r\nReceived: from darwin (darwin [192.168.1.1])\n\tby www.codelarvs.com.ar (Postfix) with SMTP id 3B4E61C5822\n\tfor &lt;JuegosAR@...&gt;; Mon, 26 Aug 2002 10:54:42 -0300 (ART)\r\nDate: Mon, 26 Aug 2002 10:54:41 -0300\r\nTo: JuegosAR@...\r\nSubject: Re: [ADVA] RE: interfases adaptables din\u0010\r\nMessage-Id: &lt;20020826105441.6890d954.nahu@...&gt;\r\nIn-Reply-To: &lt;002201c24d03$35f84960$4263a8c0@...&gt;\r\nReferences: &lt;20020817023911.6273.qmail@...&gt;\n\t&lt;OE53C4on0YkKlMJr0nS0000571c@...&gt;\n\t&lt;20020821020213.46a3250d.nahu@...&gt;\n\t&lt;001a01c24cbd$394ef140$691029c8@MICROSOFT&gt;\n\t&lt;20020826023847.399743fe.nahu@...&gt;\n\t&lt;002201c24d03$35f84960$4263a8c0@...&gt;\r\nOrganization: Codenix\r\nX-Mailer: Sylpheed version 0.8.1 (GTK+ 1.2.10; i386-debian-linux-gnu)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 8bit\r\nFrom: Nahuel Greco &lt;nahu@...&gt;\r\nX-Yahoo-Group-Post: member; u=112566267\r\n\r\nOn Mon, 26 Aug 2002 10:19:23 -0300\n&quot;Javier F. Otaegui&quot; &lt;javier@...&gt; wrote:\n\n&gt; muy interesante....... sin lugar a dudas el binding din�mico es muy\n&gt; poderoso, como as� tambi�n lo ser�a poder hacer el codigo reentrante (no se\n&gt; el termino exacto) en el sentido de poder llamar a una funci�n que reciba un\n&gt; string y corra eso (programaci�n din�mica?)\n&gt; \n&gt; Soporta el Python esto? Porque si lo soporta es entonces MUY poderoso y me\n&gt; voy a tener que callar la boca y darte la raz�n.....\n&gt; \n\nNo se si entiendo bien tu pregunta, pero creo que te referis a esto:\n\n\t&gt;&gt;&gt; a = 3 \n\t&gt;&gt;&gt; cmd = &quot;print 1+a&quot;\n\t&gt;&gt;&gt; exec cmd        \n\t4\n\t&gt;&gt;&gt; \n\nIgualmente no se utiliza tanto en Python el evaluar codigo de esta manera,\npocas veces lo precisas hacer. Aunque esto no le da taaanto poder, y no le\nllega a los talones de Lisp para hacerlo. \n\n&gt; Por supuesto que siempre est� el tema de cuanta performance se pierde al\n&gt; interpretar codigo (y encima din�mico). Me sorprendi� leer el art�culo de\n&gt; Unreal y ver que cosas que se llaman todo el tiempo intensivamente est�n\n&gt; scripteadas.\n&gt; \n\nMira, depende de la implementacion, hay muchisimas tecnicas para hacer que\nun lenguaje dinamico corra rapido, algunas todavia estan en papers\nacademicos y nunca fueron probadas comercialmente / opensource. Por ejemplo,\nhay tecnicas que analizan tu programa mientras corre, y lo va optimizando\na tiempo de ejecucion segun cual es el mensaje mas probable que reciba\nun objeto. En Python por ejemplo, no estas interpretando directamente el\ncodigo sino los bytecodes a los que compila, pero lo que lo hace lento es\nque por ej, en cada llamada a funcion tenes un lookup si o si en un hash.\n\n\n&gt; Una �ltima pregunta: Python vs Lua? Cual es la diferencia? ventajas de una\n&gt; sobre otra o no?\n&gt; \n\nPython: \n\tPRO: Extensa y standard libreria, el sistema de objetos es unico\n\t    (esto ultimo en algunos casos podria ser una contra).\n\n\tCONTRA: M�s lento que Lua, un poco mas complicado de interfasear \n\t\tcon C y bastante m�s con C++.\n\nLua:\n\tPRO: Mas rapido que Py, m�s facil de interfasear con C/C++ (su\n\t     proposito original no era correr standalone), mejor\n\t     soporte de sandboxes.\n\n\tCONTRA: Librerias pedorras, pocos modulos disponibles, hay\n\t        que crearse el propio sistema de objetos (aunque el\n\t        lenguaje da todas las herramientas para hacerlo, y\n\t        esto tambien podria verse como un pro)\n\nNota, no estudie el sistema de metaclases de Python as� que no se que\ntan flexible es si queres hacer tu propio sistema de objetos, pero\nigualmente no es una practica com�n. Lua te obliga a hacerlo, pero\nte proporciona herramientas sintacticas para que quede bonito (no\nes como hacer un sistema OO en C, Lua ya viene pensado para OO solo\nque no trae un sistema OO standard). \n\n\n\n- Nahuel Greco            Web Development - Open Source - \n- http://www.codenix.com  Game Programming - Research   -\n- Coding / sysadmin       Networking. The answer is 42. -\n\n"}}