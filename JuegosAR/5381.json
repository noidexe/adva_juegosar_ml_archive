{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ_DATA"},{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"DELETE"},{"name":"READ"},{"name":"UPDATE"},{"name":"CREATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":107596284,"authorName":"lgmdpl","from":"&quot;lgmdpl&quot; &lt;lgmdpl@...&gt;","profile":"lgm_ar","replyTo":"LIST","senderId":"1xfg9-4DNM4AjE4VtiJc1cPUA1ss0MyQo8Uvoo_5SnpV2ZNqXlcLY-IS-EvaNNi68XP7623rpSDpis_Kjqo8tqJebu0","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: interfases adaptables din","postDate":"1030500698","msgId":5381,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMDYwMWMyNGUzOCRjYjZjNDI0MCQ2Y2ViNDZjOEBwY3dpbmRvd3M+","referencesHeader":"PDEwMzA0MTk4MTYuNTQ1LjcxMzc4Lm0xMkBncnVwb3N5YWhvby5jb20uYXI+"},"prevInTopic":0,"nextInTopic":5387,"prevInTime":5380,"nextInTime":5382,"topicId":5381,"numMessagesInTopic":3,"msgSnippet":"Interesante exhortación a favor de los lenguajes dinámicos... Yo no voy a hacer una a favor de los estáticos, pero sí algunos comentarios: De: Nahuel Greco","rawEmail":"Return-Path: &lt;lgmdpl@...&gt;\r\nX-Sender: lgmdpl@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (EGP: mail-8_1_0_1); 28 Aug 2002 02:05:57 -0000\r\nReceived: (qmail 81725 invoked from network); 28 Aug 2002 02:05:57 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m13.grp.scd.yahoo.com with QMQP; 28 Aug 2002 02:05:57 -0000\r\nReceived: from unknown (HELO frontend02.cg.ifxnetworks.com) (200.62.58.50)\n  by mta3.grp.scd.yahoo.com with SMTP; 28 Aug 2002 02:05:57 -0000\r\nReceived: from [200.70.235.108] (account lgmdpl@... HELO pcwindows)\n  by frontend02.cg.ifxnetworks.com (CommuniGate Pro SMTP 3.5.9)\n  with ESMTP id 90160760 for JuegosAR@...; Tue, 27 Aug 2002 22:05:54 -0400\r\nMessage-ID: &lt;000601c24e38$cb6c4240$6ceb46c8@pcwindows&gt;\r\nTo: &lt;JuegosAR@...&gt;\r\nReferences: &lt;1030419816.545.71378.m12@...&gt;\r\nSubject: RE: interfases adaptables din\r\nDate: Tue, 27 Aug 2002 23:11:38 -0300\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 8bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.00.2615.200\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200\r\nFrom: &quot;lgmdpl&quot; &lt;lgmdpl@...&gt;\r\nX-Yahoo-Group-Post: member; u=107596284\r\nX-Yahoo-Profile: lgm_ar\r\n\r\nInteresante exhortaci�n a favor de los lenguajes din�micos... Yo no voy a\nhacer una a favor de los est�ticos, pero s� algunos comentarios:\n\n\n     De: Nahuel Greco &lt;nahu@...&gt;\n Asunto: Re: RE: interfases adaptables din\u0010\n\n\n&gt; A la vez termin� de leer Code complete y mi gran\n&gt; duda es si todo esto ( adaptadores entre componentes, proxies, delegacion,\n&gt; jerarquias din�micas ) se aplica a los juegos hoy dia.\n\n- Mi gran duda es si los programadores de juegos de hoy d�a han leido Code\nComplete :)\n\n&gt; Con respecto a tu gran duda, justamente, IMHO uno de los problemas para la\n&gt; aplicaci�n de esas t�cnicas en games, es que los games se suelen hacer en\nC++,\n&gt; y C++ es a pain in the ass en la mayor�a de los casos (flames a mi!). Por\n&gt; ejemplo, no es lo mismo hacer un Proxy asi:\n&gt; (...)\n&gt; Obviamente, cuando codeemos C++, no porque sea m�s dif�cil/trabajoso vamos\na\n&gt; dejar de &#39;aplicar&#39;, conscientemente o no, los design patterns. Design\npatterns\n&gt; que originalmente fueron pensados en Smalltalk para formalizar y dar un\n&gt; vocabulario a cosas que ya se ven�an haciendo.\n\n- Design Patterns de Gamma, el primero, est� en C++. Fue escrito para\ndocumentar buenas soluciones de dise�o que se reinventaban una y otra vez\nprogramando con orientaci�n a objetos. Sobre Smalltalk, no estoy seguro que\n&quot;design patterns&quot; sea una palabra tan fuerte... en una conferencia\norganizada por www.smalltalking.net, ante la pregunta sobre el dise�o de una\naplicaci�n, reconocieron (no sin disimulado orgullo): no hay dise�o, uno\ntiene una idea general, y entra a mandar objetos y a relacionarlos... al\nfinal, alg�n dise�o queda :) Cont� que despu�s pod�a ejecutar una\nherramienta que generaba autom�ticamente la documentaci�n a partir del\nc�digo terminado.\n- Justo elegiste el patr�n Proxy para mostrar las dificultades de C++... Con\ncasi cualquier otro patr�n no ibas a encontrar dificultades. Igual no son\ntantas:\nPrimero que el proxy en su versi�n adapter se usa para acceder a objetos que\nno cambian a trav�s de las versiones, por lo que no hay tal costo de\nmantenimiento... Y si su uso es otro, entonces est� incluido dentro del\ndise�o, y puede crearse una superclase gen�rica (para una clase particular),\nde modo de tener que actualizar una �nica clase aunque hayamos definido 100\nclases proxy (como en su modalidad decorator). Y si te resulta muy tedioso\nescribir todas las funciones, existen generadores autom�ticos de c�digo:\ndada la definici�n de una clase en IDL se generan directamente las clases.\nS� de algunas empresas que utilizan un lenguaje propio (XML) para generar\neste tipo de clases. Y por supuesto, tanto IDL como XML pueden ser generados\na partir de c�digo fuente.\n\n&gt; es natural de pensar que uno puede crear un objeto que simplemente le tira\ntodos\n&gt; los mensajes que le mandan a �l a otro objeto\n\n- Es natural pensar as� en un lenguaje din�mico. Cuando se quiere programar\ncon una m�nima esperanza de correctitud, algo muy usado es programar por\ncontrato, y eso requiere interfaces claramente definidas, con sus nombres,\nrespectivos tipos y comportamiento. Algo que con binding din�mico es\npr�cticamente imposible. Y pretender usar binding din�mico en lenguajes que\nno son Smalltalk, como Python, hace inviable la construcci�n de aplicaciones\nde medianas a grandes, porque con 5000 objetos y 500 clases, si no hay tipos\ny detecci�n de errores en tiempo de compilaci�n, corregir un bug puede ser\nuna pesadilla.\n\n&gt; En cuanto a la herencia m�ltiple, el problema conceptual t�pico con el que\nte\n&gt; podes encontrar es:\n&gt; As� que para dos formas iguales de herencia, conceptualmente no tenemos\n&gt; una �nica soluci�n para el problema de cuantas instancias de la primera\n&gt; clase debemos guardar, depende del caso.\n&gt; (...)\n&gt; Hasta donde conozco, los lenguajes intentan resolver esto de una de estas\n&gt; formas:\n&gt; 1- Directamente no permitiendo herencia m�ltiple\n&gt; 2- No permitiendo herencia m�ltiple pero proveyendo alg�n tipo de\nmecanismo\n&gt;    para sustituirla\n&gt; 3- Intentando linearizar el grafo de ancestros\n\n- Falt� s�lo la opci�n de permitirla, como hace C++ :) Pero hay un acuerdo\nen la comunidad OO en que no deber�a usarse nunca. En general se considera\nque la herencia m�ltiple es consecuencia de un mal dise�o... lo que no quita\nque cuando haya que extender un mal dise�o... :)\n\nSaludos...\n\n       L.M.\n\n\n"}}