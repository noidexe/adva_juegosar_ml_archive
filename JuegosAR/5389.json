{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ"},{"name":"CREATE"},{"name":"READ_DATA"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"READ"},{"name":"UPDATE"},{"name":"CREATE"},{"name":"DELETE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":120940498,"authorName":"rpgrca@labint.frba.utn.edu.ar","from":"rpgrca@...","profile":"rpgrca","replyTo":"LIST","senderId":"xo-ZexIq4uTjuPqjay7xeqVRYH-R4jXp-z-EKh6Wi75CX2gigAPBNLcmzEwMXLG493mdAC5hZYMXT0Q3TisdKvq-IAQ","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [ADVA] lenguajes interpretados.","postDate":"1030579593","msgId":5389,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwODI5MDAwNy5nN1QwNzhHMDUxMzZAYXJyb2JhLmZyYmEudXRuLmVkdS5hcj4="},"prevInTopic":5378,"nextInTopic":0,"prevInTime":5388,"nextInTime":5390,"topicId":5357,"numMessagesInTopic":11,"msgSnippet":"... Hace tiempo que termine un pequeño programa que simula al core-system de Age of Empire II en lo que a scripting se refiere, pero por ahora estoy","rawEmail":"Return-Path: &lt;rpgrca@...&gt;\r\nX-Sender: rpgrca@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (EGP: mail-8_1_0_1); 29 Aug 2002 00:06:14 -0000\r\nReceived: (qmail 15821 invoked from network); 29 Aug 2002 00:06:14 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m6.grp.scd.yahoo.com with QMQP; 29 Aug 2002 00:06:14 -0000\r\nReceived: from unknown (HELO arroba.frba.utn.edu.ar) (170.210.18.226)\n  by mta3.grp.scd.yahoo.com with SMTP; 29 Aug 2002 00:06:09 -0000\r\nReceived: from labint.frba.utn.edu.ar (gw.nueva.frba.utn.edu.ar [170.210.19.2])\n\tby arroba.frba.utn.edu.ar (8.11.6/8.11.6) with SMTP id g7T078G05136\n\tfor &lt;JuegosAR@...&gt;; Wed, 28 Aug 2002 21:07:11 -0300\r\nMessage-Id: &lt;200208290007.g7T078G05136@...&gt;\r\nDate: Wed, 28 Aug 2002 21:06:33 -0300 (ART)\r\nTo: JuegosAR@...\r\nSubject: Re: [ADVA] lenguajes interpretados.\r\nX-Mailer: Mail FRBA 1.0.1\r\nX-URL: http://www.frba.utn.edu.ar/\r\nX-IP: 200.61.129.223\r\nX-Browser: Mozilla/4.0 (compatible; MSIE 5.0; Windows 95)\r\nFrom: rpgrca@...\r\nX-Yahoo-Group-Post: member; u=120940498\r\nX-Yahoo-Profile: rpgrca\r\n\r\nNahuel Greco wrote:\n&gt; \n&gt; Btw, ser�a interesante que la persona que estaba usando Prolog / algo similar\n&gt; para IA nos cuente un poco al respecto (prolog me es una materia pendiente :),\n&gt; o si alguien investig� por ej, OCaml, etc.\n&gt; \n\nHace tiempo que termine un peque�o programa que simula al core-system de Age of\nEmpire II en lo que a scripting se refiere, pero por ahora estoy corrigiendo\nerrores. Tan pronto como termine los problemas con los timers lo levanto en una\np�gina temporal.\n\nEn cuanto a lo de Prolog, la forma din�mica de registrar patrones es simple: si\nel jugador a hecho algo, s�lo hay que tratar de determinar por qu� lo hizo (lo\ncual es relativamente simple ya que la entrada de datos es acotada: tipo del\npersonaje objetivo, magia, salud, lista de hechizos disponibles, habilidades y\nprofesi�n, ...), y agregarlo a la base (si ya existe se incrementa la cantidad\nde &quot;hits&quot; de esa regla).\n\n    typedef struct mobile_st {\n        int hp, mp, ... ;  /*  informaci�n b�sica del personaje  */\n        spell_t  *spell ;  /*  el hechizo que est� actualmente ejecutando  */\n        skill_t  *skill ;  /*  la habilidad que est� utilizando  */\n        mobile_t *target;  /*  el objetivo del hechizo o habilidad  */\n        ...\n    } mobile_t;\n\n    typedef struct player_st {\n        long      event ;  /*  el evento a procesar  */\n        mobile_t *mobile;  /*  el personaje del jugador  */\n        mobile_t *enemy ;  /*  los enemigos que estan combatiendo contra �l  */\n        mobile_t *ally  ;  /*  los aliados que est�n asistiendo al jugador  */\n        ...\n    } player_t;\n\n\n    ...\n    if (player.event == EVENT_D_CAST_SPELL)\n        player.event = EVENT_D_CASTING_SPELL;\n        player.mobile-&gt;spell = cast_spell(player.mobile);\n\n        /*  si el NPC puede aprender, determino que tipo de hechizo ha  */\n        /*  ejecutado, si es benigno a quien ayud� y si es maligno a    */\n        /*  quien perjudic�. Los 4 bits de menor peso contiene esa      */\n        /*  informaci�n  */\n        if (PLAYER_M_FIND_BY_FLAG(player.enemy, NPC_FLAG_I_CAN_LEARN)) {\n            if (player.mobile-&gt;spell-&gt;flags & SPELL_FLAG_I_HEAL)\n\n                /*  _add_rule_spell, de acuerdo al comportamiento que   */\n                /*  le indiqu� (PATTERN_D_HEALING en este caso) tomar�  */\n                /*  de la estructura los datos que necesite. Aumentar�  */\n                /*  la cantidad de aciertos para esa regla si existe,   */\n                /*  o crear� una nueva en caso contrario.  */\n                _add_rule_spell(PATTERN_D_HEALING, player);\n\n            if (player.mobile-&gt;spell-&gt;flags & SPELL_FLAG_I_HARM)\n                _add_rule_spell(PATTERN_D_HARMING, player);\n\n            if (player.mobile-&gt;spell-&gt;flags & SPELL_FLAG_I_CURE)\n                _add_rule_spell(PATTERN_D_CURING, player);\n\n            ...\n         }\n         ....\n    }\n\nLuego, los enemigos de un nivel superior (en mi caso, los anaries con &quot;nivel&quot;\nmayor a 25) acceden a esa base para anticipar movimientos. Cuando se inicia el\ncombate, realizan un &quot;query&quot; pidiendo las reglas con la mayor cantidad de hits,\nejecutando las acciones correspondientes para prevenir ese efecto (caso t�pico:\nun mago que s�lo entrena sus ataques el�ctricos y se la pasa matando enemigos\ncon LIGHTNING 3/BOLT 3/THUNDER-X/LIGHTNING BALL/etc, dependiendo del juego ;)\nAl determinar que utiliza mucha magia el�ctrica, lo primero que van a hacer los\nanaries del grupo es darse protecci�n contra ataques el�ctricos.\n\nA medida que el combate avanza, pueden ir registrando nuevos patrones que el\njugador est� intentando con el fin de contrarrestar la base de conocimiento de\nlos anaries. Dado que las reglas m�s comunes ya est�n a�adidas a la base (tipo\n&quot;mucho hechizo de este tipo&quot; -&gt; &quot;protecci�n contra ese tipo&quot;, &quot;ataque contra un\nmiembro por vez&quot; -&gt; &quot;dicho miembro pasa a posici�n defensiva&quot;, etc), el combate\nes bastante m�s entretenido (por parte de la IA ;)\n\nEl sistema funciona bastante bien incluso contra combos (caso FF3: ejecutar un\nhechizo WALL contra un personaje de la compa��a del h�roe para repeler magia, y\nluego ejecutar un hechizo contra ese mismo personaje para que, una vez que sea\nrepelido, el ataque &quot;golpee&quot; a un monstruo). En este caso, un anari intentar�\nanular la protecci�n para evitar el efecto posterior (no ha determinado que es\nun combo, solamente intenta prevenir un efecto benigno sobre el personaje).\n\nComo caracter�stica general, los anaries &quot;trabajan&quot; en grupos de 3 magos, y de\nvez en cuando un aprendiz va con ellos. Si fuese en niveles, los anaries ser�an\nniveles 20, 25, 35 y 50. Al pedir informaci�n a la BC, el menor se encarga de\n&quot;probar y anotar&quot; (son los �nicos que poseen NPC_FLAG_I_CAN_LEARN encendido):\nintentan nuevas combinaciones de ataques, y anotan los resultados. El que le\nsigue pide informaci�n sobre defensa (como el jugador puede atacarlos y como\npuede anticiparse); si el equipo se encuentra en �ptimas condiciones, y no se\nnecesita protecci�n, ataca con magias de efectos (veneno, par�lisis, etc). Por\n�ltimo, el o los mayores se encargan del ataque a gran escala (usualmente con\nmagias elementales, tipo fuego, electricidad, etc). Si el combate es &quot;dif�cil&quot;\npueden incluso utilizar magias de nivel VII (el m�ximo), tipo Ultima en FF3,\nLumina en Chrono Trigger o Great Dragon en Breath of Fire II).\n\nLa base de conocimiento (BC) posee una estructura muy simple (por ahora):\n\n    typedef struct kdata_st {\n        long identifier;\n        long flags     ;\n        long hits      ;\n        ...\n        long *condition;\n        long *action   ;\n    } kdata_t;\n\nEn la compilaci�n un script en Perl se encarga de generar reglas b�sicas con el\napoyo de un &quot;script maestro&quot;. Se crea el compilador y se lo utiliza para poder\ncompilar los scripts generados por Perl. El producto se integra en un datafile\nque luego ser� levantado en memoria durante el juego, y actualizado cuando el\njugador graba su partida.\n\nYa que los scripts son muy simples, &quot;compilar&quot; el script significa scannearlo y\nparsearlo. La lista de tokens generada a partir de la condici�n se almacena en\n&#39;condition&#39;, mientras que la lista generada a partir de la acci�n se almacena\nen &#39;action&#39;. Luego, son tratadas como el CPU maneja un programa ejecutable.\n\nCuando un aprendiz intenta algo nuevo (por ejemplo, ejecuta un MUTE para evitar\nque el personaje ejecute magias), registra una &quot;condici�n estricta&quot;. Para ello,\nutiliza una plantila o &quot;template&quot; del tipo:\n\n    char *rule_template = {\n        rule @rule_id@ (\n            (PLAYER.hp == @...@ and\n             PLAYER.mp == @...@ and... [snip]... and\n             PLAYER.flags == @...@)\n            then\n            (cast @spell@ against @target@)\n        )\n    };\n\nLa base copia esta plantilla y reemplaza los datos &quot;en nombre del aprendiz&quot; (en\nel lugar de @rule_id@ coloca el ID de la �ltima regla + 1, etc... la plantilla\nes bastante m�s larga, pero lo acort� con un [snip] ;)\n\nEsta copia con los datos es scanneada y parseada como cualquier otra, y agregada\na la BC como si la hubiese agregado el jugador. Como ven, en verdad los anaries\nagregan informaci�n utilizando la misma interface que utiliza el jugador. �nica\ndiferencia: si se da un error de compilaci�n, la regla se registra en el archivo\nde log, y no se agrega, pero no se muestra ning�n error en pantalla.\n\nSin embargo, esta regla es casi imposible de ejecutar (la condici�n es realmente\nestricta: el personaje del jugador debe tener esa misma energ�a, esa misma magia\ny todo los dem�s datos iguales para que se ejecute). Por eso, se la registra con\nlas banderas de RULE_I_DISABLED (para que no se pierda tiempo en procesarla en\nlas consultas normales) y de RULE_I_LEARNING (para indicar que seguramente ser�\nmejorada). Esto significa que al comienzo del combate un aprendiz puede &quot;crear&quot;\nuna nueva regla o &quot;mejorar&quot; una existente. Todo aprendiz puede intentar mejorar\no no una regla, pero s�lo puede mejorarla una vez por combate, luego pasa al\nmodo &quot;creaci�n&quot;.\n\nComo se elije si se mejora o se crea? Esto depende de varios factores, inclu�do\nel nivel, energ�a y magia del personaje, la posici�n en el mapa, el tiempo\ntranscurrido desde que la computadora se prendi�, la altura sobre el nivel del\nmar de la ciudad en donde el jugador se encuentra, y por supuesto, una llamada\noportuna a rand() ;)\n\nPara mejorar, el aprendiz consulta una regla existente. Luego ejecuta la acci�n\nde esa regla OMITIENDO LA CONDICI�N. Luego genera una nueva regla, la compila y\nfinalmente compara las condiciones. Por ejemplo, supongamos que �sta era la\nregla que exist�a en la BC:\n\n    rule 195 (\n        (PLAYER.hp == 150 and PLAYER.mp == 110 and PLAYER.flags == 0x00000000)\n        then\n        (cast MUTE against PLAYER)\n    )\n\ny �sta es la regla que acaba de crear, pero que A�N NO FUE AGREGADA A LA BC:\n\n    rule 196 (\n        (PLAYER.hp == 120 and PLAYER.mp == 95 and PLAYER.flags == 0x00000000)\n        then\n        (cast MUTE against PLAYER)\n    )\n\nentonces, al comparar las reglas, genera una nueva que posee cotas, haci�ndola\nun poco m�s gen�rica:\n\n    rule 195 (\n        ((PLAYER.hp &gt;= 120 && PLAYER.hp &lt;= 150) and\n         (PLAYER.mp &gt;=  95 && PLAYER.mp &lt;= 110) and\n         (PLAYER.flags == 0x00000000))\n        then\n        (cast MUTE against PLAYER)\n    )\n\nSe supone que si cuando el estado del jugador era 0 (sin bits encendidos), y\nten�a 150 puntos de energ�a se pudo ejecutar el hechizo, y si con el mismo\nestado se pudo cuando ten�a 120 puntos, entonces se podr� en cualquier valor\nintermedio.\n\nLas cotas se ir�n actualizando hasta que se llegue a un m�ximo que depende del\nvalor (por ejemplo, se guarda la cota de energ�a hasta que se llegue a una\n&quot;amplitud&quot; del 50% de la energ�a total del personaje, la de magia hasta una\namplitud del 85%, etc. Tarde o temprano, todas las variables que poseen cotas\ndesaparecer�n o quedar�n ajustadas al m�nimo y m�ximo posible. Por defecto,\npara que una regla en creaci�n se transforme en una entrada de la tabla debe\nser usada al menos 15 veces.\n\nPara las variables que no pueden calcularse utilizando cotas (PLAYER.flags, por\nejemplo), se cambia el == por el &#39;&&#39;. Si el personaje pose�a protecci�n contra\nmagias (WALL, tipo FF3), el hechizo fallar�. En ese caso, la condici�n pasa de\nser &quot;PLAYER.flags == 0x00000000&quot; a ser &quot;PLAYER.flags != 0x00001000&quot;, donde ese\nbit indica que el jugador ten�a protecci�n contra magias. A�n no encontr� una\nforma �ptima para hacerlo si son varios los bits que han cambiado :(\n\nEn fin...\n\nA medida que se trabaja en nuevas formas de encarar un dise�o, surgen nuevas y\ntal vez interesantes dudas.\n\nLo dif�cil es saber &quot;cuanta&quot; informaci�n obtienen los anaries, para no pasar al\notro lado (cheating). Por ejemplo, si el personaje est� utilizando una armadura\nque es fuerte contra el fuego pero d�bil contra el hielo, deben los anaries ya\nconocer esa informaci�n? Seg�n la l�nea argumental del juego, son sabios, pero\nno s� si tanto. Adem�s, deben los anaries (hablo �nicamente de esa raza porque\nes la �nica que utiliza la base de conocimiento) &quot;saber&quot; cuanto da�o ha recibido\nun personaje al atacarlo de cierta manera? El jugador se da cuenta (ya sea por\nel n�mero de da�o recibido, la barra de energ�a disminuyendo, etc), pero, y los\npersonajes del juego?\n\nDemasiado para una noche, no? ;)\n\n\n--\nRoberto Alfonso (rpgrca@... &lt;&gt; rpgrca@...)\nRhynox, the Noble Rockfriend, Wild Battlerager of the Neidar Clan and\nProficient Blacksmith, rising hero, male dwarf (Genesis is the key)\nICQ: 44361979\n\n\n"}}