{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"CREATE"},{"name":"READ"},{"name":"READ_DATA"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PIN","capabilities":[{"name":"CREATE"},{"name":"DELETE"},{"name":"READ"},{"name":"UPDATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":63432839,"authorName":"Juan Linietsky","from":"Juan Linietsky &lt;coding@...&gt;","replyTo":"LIST","senderId":"E9imBZsoNGPdzjDyDUqAfHwKlMMBYvDNfyd6eeEr00n3wIFElZJgAAQKT2avzVaz-8zStqxTFmsIhctrJBsQhOrHmHwxQbevlNrV","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [ADVA]  MultiThreading en Juegos","postDate":"1031629869","msgId":5455,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIwOTEwMDA1MTA5LjBlMGIwNjMzLmNvZGluZ0ByZWR1ei5jb20uYXI+","inReplyToHeader":"PDAwMDMwMWMyNTg3NSQxYmE0ZDM4MCQzY2QxNDRjOEBwY3dpbmRvd3M+","referencesHeader":"PDEwMzEzOTk5NzIuMjc3LjExNjE5Lm0xMkBncnVwb3N5YWhvby5jb20uYXI+CTwwMDAzMDFjMjU4NzUkMWJhNGQzODAkM2NkMTQ0YzhAcGN3aW5kb3dzPg=="},"prevInTopic":5454,"nextInTopic":5456,"prevInTime":5454,"nextInTime":5456,"topicId":5453,"numMessagesInTopic":6,"msgSnippet":"On Mon, 9 Sep 2002 23:41:18 -0300 ... En un mundo ideal, donde el multithreading y el cpu scheduling son perfectos, esta solucion seria muy sencilla de","rawEmail":"Return-Path: &lt;coding@...&gt;\r\nX-Sender: coding@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (EGP: mail-8_1_0_1); 10 Sep 2002 03:56:18 -0000\r\nReceived: (qmail 61607 invoked from network); 10 Sep 2002 03:56:18 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m11.grp.scd.yahoo.com with QMQP; 10 Sep 2002 03:56:18 -0000\r\nReceived: from unknown (HELO john.anime.com.ar) (64.113.39.216)\n  by mta2.grp.scd.yahoo.com with SMTP; 10 Sep 2002 03:56:17 -0000\r\nReceived: from server (OL110-150.fibertel.com.ar [24.232.150.110])\n\tby john.anime.com.ar (8.9.3/8.9.3) with SMTP id XAA03921\n\tfor &lt;JuegosAR@...&gt;; Mon, 9 Sep 2002 23:56:10 -0400\r\nDate: Tue, 10 Sep 2002 00:51:09 -0300\r\nTo: JuegosAR@...\r\nSubject: Re: [ADVA]  MultiThreading en Juegos\r\nMessage-Id: &lt;20020910005109.0e0b0633.coding@...&gt;\r\nIn-Reply-To: &lt;000301c25875$1ba4d380$3cd144c8@pcwindows&gt;\r\nReferences: &lt;1031399972.277.11619.m12@...&gt;\n\t&lt;000301c25875$1ba4d380$3cd144c8@pcwindows&gt;\r\nOrganization: Codenix\r\nX-Mailer: Sylpheed version 0.7.6 (GTK+ 1.2.10; i386-debian-linux-gnu)\r\nMime-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1\r\nContent-Transfer-Encoding: 8bit\r\nFrom: Juan Linietsky &lt;coding@...&gt;\r\nX-Yahoo-Group-Post: member; u=63432839\r\n\r\nOn Mon, 9 Sep 2002 23:41:18 -0300\n&quot;Leonardo Moreno&quot; &lt;lgmdp@...&gt; wrote:\n\n&gt; Fernando, le� tu mensaje pero no logro entender cu�l es el problema\n&gt; que surge en el escenario que describ�s...\n&gt; Si estamos usando los threads para la IA, no importa que los m�s\n&gt; pensantes consuman sus 20 ms, si es lo que realmente precisan... Es\n&gt; m�s, para eso usamos multithreading, para que puedan pensar durante\n&gt; varios frames hasta decidir algo...\n&gt; Me interesa este punto, porque dentro de poco voy a empezar con un\n&gt; engine y pensaba arrancar un Thread por actor inteligente... yo\n&gt; utilic� ese esquema en juegos relativamente peque�os y visualmente\n&gt; no not� nada anormal, as� que pensaba repetirlo ahora en un proyecto\n&gt; ambicioso. Te agradecer�a que me pudieras ampliar un poco d�nde est�\n&gt; el problema. Muchas gracias.\n&gt; \n&gt;       Leo\n&gt; \n\nEn un mundo ideal, donde el multithreading y el cpu scheduling son\nperfectos,\nesta solucion seria muy sencilla de implementar, pero como son las\ncosas en la\nvida real, es bastante dificil..\n\nPorque? por lo siguiente. Como bien sabemos, el multitasking en tu\nsistema\noperativo funciona dandole cpu slices de tiempo a los procesos, por\ntiempo\nX o hasta que entren a un kernel trap a traves de un syscall. El\nSistema\nOperativo no espera que los procesos se coman el 100% del cpu,sino que\nentren a un &quot;IDLE&quot; state\nde vez en cuando. Los procesos de baja prioridad corren la mayor parte\nde su tiempo (en general el 80 o 90%) en el idle time de los de mas\nalta prioridad. Esto es un problema que hay que tener _muy_ en cuenta\ncuando se programa aplicaciones multimedia multithreaded, porque\ninternamente para el sistema operativo,\nun thread es otro proceso mas, donde la unica difrencia es que no hace\ncontext switching.\n\nAhora.. tenes que pensar bien como manejas la prioridad del thread\n&quot;actor&quot;.\nTenes tres opciones...\n\n1-Mas arriba que el game thread\n2-Igual que el game thread\n3-Mas abajo que el game thread\n\n1-El actor va a hacer preemption al game thread, o sea, cuando este\npensando, el framerate\ny el cpu del juego va a bajar mucho, y va a tardar mas en volver del\nidle process (si es que usas eso).\n2-Va a estar parejo entre los dos, en sintesis, cuantos mas actores\n,menos cpu vas a tener, pero va a ser\n&quot;parejo&quot;.\n3-El actor va a procesar la IA en el idle time del main thread (ahora,\nsi sos uno de esos programadores que creen que el main thread _nunca_\ntiene que estar idle, entonces tu IA va a ser la cosa mas lenta del\nmundo.\n\n\nTeniendo en cuenta estos puntos, te diria.. creo que lo mejor es la\ntercera opcion, sin duda necesitas\ndarle idle time a tu proceso, (algo un poco jodido en windows y\narquitecturas x86 porque el minimo que podes darle al system clock son\nfracciones de 10 milisegundos. Esto lo vas a tener que manejar bien.\nLo otro, es que podes hacer que tu sistema detecte la velocidad de cpu\ny de acuerdo a eso procese mas o menos IA. \n\nUn camino alternativo podria ser usar todos los actores a igual\nprioridad que el main thread, y usar\nun &quot;feature&quot; que windows tiene que se llama &quot;thread suspending&quot;, y\nsuspender a los actores cuando\nel main thread va a la parte mas pesada y critica del procesamiento.\nLo jodido de usar esto\nes que este &quot;feature&quot; en realidad es mas una negrada que otra cosa,\nporque es incompatible\ncon elementos de sincronizacion como mutexes (&quot;critical sections&quot; en\nwindows), y siempre\nterminas metiendo a los dos threads en un deadlock. De ultima algo que\nmuchos hacen\nes a travez de algun sistema basico de lock-free IPC (nonblocking\nfifos o unix sockets en unixes, mensajes en windows?) asignar las\ntareas a los subthreads y ahi si suspenderlos o tirarle flags para que\ndejen de procesar mientras el main thread este en la seccion critica.\n\nBueno, supongo que tenes mucho para investigar, saludos!\n\n\nreduz\n\n\n\n\n\n"}}