{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"CREATE"},{"name":"READ"},{"name":"READ_DATA"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PIN","capabilities":[{"name":"CREATE"},{"name":"DELETE"},{"name":"READ"},{"name":"UPDATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":82702149,"authorName":"royconejo","from":"&quot;royconejo&quot; &lt;s_o_c_o_t_r_o_c_o@...&gt;","profile":"s_o_c_o_t_r_o_c_o","replyTo":"LIST","senderId":"QLgM2tuxY5rAGnoaLUwLzxdPmCRqPnlyGT4XqYYl8Ha4f2AguTgEze0hY-IVodckf8fbJVJDhbid43wec5ay_VGqiDtBQxyCS6vrKBB5n4vhh00","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [ADVA] STL =(","postDate":"1038280372","msgId":6578,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENJRUlLUE1DQUdOR0VQTEFKUEFESUVJR0NKQUEuc19vX2Nfb190X3Jfb19jX29AeWFob28uY29tLmFyPg==","inReplyToHeader":"PDAwMGYwMWMyOTRkMSQwMDUyZmU3MCQxMGI0ZTgxOEBSSVZFTkRFTD4="},"prevInTopic":6577,"nextInTopic":6582,"prevInTime":6577,"nextInTime":6579,"topicId":6564,"numMessagesInTopic":34,"msgSnippet":"Uso la del VC++ Net.. la de SGI tiene hash pero es una extension especifica de SGI y no esta en la implementacion de VC++ net.. y no me funciona por eso..","rawEmail":"Return-Path: &lt;s_o_c_o_t_r_o_c_o@...&gt;\r\nX-Sender: s_o_c_o_t_r_o_c_o@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (EGP: mail-8_2_3_0); 26 Nov 2002 02:59:53 -0000\r\nReceived: (qmail 36558 invoked from network); 26 Nov 2002 02:59:52 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m3.grp.scd.yahoo.com with QMQP; 26 Nov 2002 02:59:52 -0000\r\nReceived: from unknown (HELO smtp3.arnet.com.ar) (200.45.191.14)\n  by mta3.grp.scd.yahoo.com with SMTP; 26 Nov 2002 02:59:52 -0000\r\nReceived: (qmail 7487 invoked from network); 26 Nov 2002 02:57:04 -0000\r\nReceived: from unknown (HELO rcw2k) (200.43.124.34)\n  by smtp3.arnet.com.ar with SMTP; 26 Nov 2002 02:57:01 -0000\r\nTo: &lt;JuegosAR@...&gt;\r\nSubject: RE: [ADVA] STL =(\r\nDate: Tue, 26 Nov 2002 00:12:52 -0300\r\nMessage-ID: &lt;CIEIKPMCAGNGEPLAJPADIEIGCJAA.s_o_c_o_t_r_o_c_o@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_0002_01C294E0.8F7EC430&quot;\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\r\nX-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nImportance: Normal\r\nIn-Reply-To: &lt;000f01c294d1$0052fe70$10b4e818@RIVENDEL&gt;\r\nFrom: &quot;royconejo&quot; &lt;s_o_c_o_t_r_o_c_o@...&gt;\r\nX-Yahoo-Group-Post: member; u=82702149\r\nX-Yahoo-Profile: s_o_c_o_t_r_o_c_o\r\n\r\n\r\n------=_NextPart_000_0002_01C294E0.8F7EC430\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 8bit\r\n\r\nUso la del VC++ Net.. la de SGI tiene &quot;hash&quot; pero es una extension\nespecifica de SGI y no esta en la implementacion de VC++ net.. y no me\nfunciona por eso.. deberia usar la de SGI =_|\n\n(nota: la estaba usando hasta que cambie a VC++ net y me di cuenta que tiene\nmejor soporte de STL que el VC++ 6)\n\n\n_&gt; Royconejo.\n\n  -----Mensaje original-----\n  De: Maximo Balestrini [mailto:maximo@...]\n  Enviado el: Lunes, 25 de Noviembre de 2002 07:21 p.m.\n  Para: JuegosAR@...\n  Asunto: RE: [ADVA] STL =(\n\n\n  Que STL usas? Yo no tengo ning�n xhash....\n\n  Yo tengo la de SGI. En esa, el size_t operator() (cont ...... no esta\ndefinido como un operador de la clase sobre la cual estas haciendo el hash,\nsino que es el operador de una clase generica hash que creo que utilizada\ncomo funci�n en realidad (por eso define operator()):\n\n\n\n  template &lt;class _Key&gt; struct hash { };\n\n\n\n  y que despu�s va definiendo para cada tipo de datos soportados, junto con\nel operador ():\n\n\n\n  __STL_TEMPLATE_NULL struct hash&lt;char*&gt;\n\n  {\n\n    size_t operator()(const char* __s) const { return\n__stl_hash_string(__s); }\n\n  };\n\n\n\n  __STL_TEMPLATE_NULL struct hash&lt;short&gt; {\n\n    size_t operator()(short __x) const { return __x; }\n\n  };\n\n\n\n  __STL_TEMPLATE_NULL struct hash&lt;char&gt; {\n\n    size_t operator()(char __x) const { return __x; }\n\n  };\n\n\n\n\n\n  Por eso te dec�a en el mail anterior que lo que ten�s que hacer (o por lo\nmenos en la STL de SGI) es definir esta clase hash para la clase que\nnecesites. Yo lo que hice con string fue ver que hacia para char * y\nadaptarlo.\n\n\n\n  Maximo\n\n\n\n\n\n  -----Original Message-----\n  From: royconejo [mailto:s_o_c_o_t_r_o_c_o@...]\n  Sent: Lunes, 25 de Noviembre de 2002 07:02 p.m.\n  To: JuegosAR@...\n  Subject: RE: [ADVA] STL =(\n\n\n\n  Si.. o sea que el casteo a (size_t) del tipo de dato es lo que usa para\n  hashiarlo y siendo una clase o una estructura deberia implementar este\n  operador?\n\n  otra implementacion de la misma funcion esta comentada en xhash:\n\n        size_t operator()(const _Kty& _Keyval) const\n              {      // hash _Keyval to size_t value\n              return ((size_t)_Keyval);\n              }\n\n  //      size_t operator()(const _Kty& _Keyval) const\n  //            {      // hash _Keyval to size_t value by pseudorandomizing\ntransform\n  //            ldiv_t _Qrem = ldiv((size_t)_Keyval, 127773);\n  //            _Qrem.rem = 16807 * _Qrem.rem - 2836 * _Qrem.quot;\n  //            if (_Qrem.rem &lt; 0)\n  //                  _Qrem.rem += 2147483647;\n  //            return ((size_t)_Qrem.rem); }\n\n  supongo que debe ser para no complicar tanto por el tema del\n  (size_t)_Keyval.. alguien sabe porque esto es asi? se podria llegar a usar\n  esta otra funcion que no requiere castiar keyval a (size_t) directamente?\n\n\n  _&gt; Royconejo.\n\n\n\n\n\n  ADVA - Asociaci�n de Desarrolladores de Videojuegos Argentina.\n\n  www.adva.com.ar\n  -------------------------------------------------------.\n\n\n\n  Tu uso de Yahoo! Grupos est� sujeto a las Condiciones del servicio de\nYahoo!.\n\n\r\n------=_NextPart_000_0002_01C294E0.8F7EC430\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 6.00.2712.300&quot; name=3DGENERATOR&gt;\n&lt;STYLE&gt;@font-fa=\r\nce {\n\tfont-family: Tahoma;\n}\n@font-face {\n\tfont-family: Verdana;\n}\n@page Se=\r\nction1 {size: 612.0pt 792.0pt; margin: 72.0pt 90.0pt 72.0pt 90.0pt; }\nP.Mso=\r\nNormal {\n\tFONT-SIZE: 12pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: &quot;Times New Rom=\r\nan&quot;\n}\nLI.MsoNormal {\n\tFONT-SIZE: 12pt; MARGIN: 0cm 0cm 0pt; FONT-FAMILY: &quot;T=\r\nimes New Roman&quot;\n}\nDIV.MsoNormal {\n\tFONT-SIZE: 12pt; MARGIN: 0cm 0cm 0pt; FO=\r\nNT-FAMILY: &quot;Times New Roman&quot;\n}\nA:link {\n\tCOLOR: blue; TEXT-DECORATION: unde=\r\nrline\n}\nSPAN.MsoHyperlink {\n\tCOLOR: blue; TEXT-DECORATION: underline\n}\nA:vi=\r\nsited {\n\tCOLOR: blue; TEXT-DECORATION: underline\n}\nSPAN.MsoHyperlinkFollowe=\r\nd {\n\tCOLOR: blue; TEXT-DECORATION: underline\n}\nTT {\n\tFONT-FAMILY: &quot;Courier =\r\nNew&quot;\n}\nSPAN.EmailStyle18 {\n\tFONT-WEIGHT: normal; COLOR: blue; FONT-STYLE: n=\r\normal; FONT-FAMILY: Verdana; TEXT-DECORATION: none\n}\nDIV.Section1 {\n\tpage: =\r\nSection1\n}\n&lt;/STYLE&gt;\n&lt;/HEAD&gt;\n&lt;BODY lang=3DEN-US vLink=3Dblue link=3Dblue&gt;\n&lt;D=\r\nIV&gt;&lt;SPAN class=3D817410703-26112002&gt;&lt;FONT face=3DVerdana size=3D2&gt;Uso la de=\r\nl VC++ \nNet.. la de SGI tiene &quot;hash&quot; pero es una extension especifica de SG=\r\nI y no esta \nen la implementacion de VC++ net..&nbsp;y&lt;/FONT&gt;&lt;/SPAN&gt;&lt;SPAN \n=\r\nclass=3D817410703-26112002&gt;&lt;FONT face=3DVerdana size=3D2&gt; no me funciona po=\r\nr eso.. \ndeberia usar la de SGI =3D_| &lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=\r\n=3D817410703-26112002&gt;&lt;FONT face=3DVerdana \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/=\r\nDIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D817410703-26112002&gt;&lt;FONT face=3DVerdana size=3D2&gt;(n=\r\nota: la estaba \nusando hasta que cambie a VC++ net y me di cuenta que tiene=\r\n mejor soporte de STL \nque el VC++ 6)&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=\r\n=3D817410703-26112002&gt;&lt;FONT face=3DVerdana \nsize=3D2&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/=\r\nDIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D817410703-26112002&gt;&lt;FONT face=3DVerdana \nsize=3D2&gt;&lt;=\r\n/FONT&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=3D817410703-26112002&gt;&lt;FONT face=\r\n=3DVerdana size=3D2&gt;_&gt; \nRoyconejo.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;SPAN class=\r\n=3D817410703-26112002&gt;&lt;FONT face=3DVerdana color=3D#0000ff \nsize=3D2&gt;&lt;/FONT=\r\n&gt;&lt;/SPAN&gt;&nbsp;&lt;/DIV&gt;\n&lt;BLOCKQUOTE \nstyle=3D&quot;PADDING-LEFT: 5px; MARGIN-LEFT: =\r\n5px; BORDER-LEFT: #0000ff 2px solid&quot;&gt;\n  &lt;DIV class=3DOutlookMessageHeader d=\r\nir=3Dltr align=3Dleft&gt;&lt;FONT face=3DTahoma \n  size=3D2&gt;-----Mensaje original=\r\n-----&lt;BR&gt;&lt;B&gt;De:&lt;/B&gt; Maximo Balestrini \n  [mailto:maximo@...]&lt;=\r\nBR&gt;&lt;B&gt;Enviado el:&lt;/B&gt; Lunes, 25 de Noviembre \n  de 2002 07:21 p.m.&lt;BR&gt;&lt;B&gt;Pa=\r\nra:&lt;/B&gt; \n  JuegosAR@...&lt;BR&gt;&lt;B&gt;Asunto:&lt;/B&gt; RE: [ADVA] STL \n  =\r\n=3D(&lt;BR&gt;&lt;BR&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV class=3DSection1&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;=\r\nFONT face=3DVerdana size=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt=\r\n; FONT-FAMILY: Verdana&quot;&gt;Que STL usas? Yo no tengo ning=FAn \n  xhash....&lt;/SP=\r\nAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3DVerdana size=3D2&gt;&lt;SPAN l=\r\nang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Verdana&quot;&gt;Yo tengo la =\r\nde SGI. En esa, el \n  &lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SP=\r\nAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;si=\r\nze_t operator() \n  (cont&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face=3DVerdana size=3D2&gt;&lt;SPAN l=\r\nang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Verdana&quot;&gt; ...... no e=\r\nsta definido como un \n  operador de la clase sobre la cual estas haciendo e=\r\nl hash, sino que es el \n  operador de una clase gene&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT fac=\r\ne=3DVerdana size=3D2&gt;&lt;SPAN \n  lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FON=\r\nT-FAMILY: Verdana&quot;&gt;rica&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT \n  face=3DVerdana size=3D2&gt;&lt;SPAN=\r\n lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Verdana&quot;&gt; &lt;B&gt;&lt;SPAN =\r\n\n  style=3D&quot;FONT-WEIGHT: bold&quot;&gt;hash&lt;/SPAN&gt;&lt;/B&gt; que creo que utilizada como =\r\nfunci=F3n \n  en realidad (por eso define &lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face=3D&quot;Courie=\r\nr New&quot; \n  size=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAM=\r\nILY: &#39;Courier New&#39;&quot;&gt;operator()&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT \n  face=3DVerdana size=3D=\r\n2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Verdana&quot;&gt;):&lt;=\r\n/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D=\r\n2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New=\r\n&#39;&quot;&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier Ne=\r\nw&quot; size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;=\r\ntemplate &lt;class \n  _Key&gt; struct hash { };&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P clas=\r\ns=3DMsoNormal&gt;&lt;FONT face=3DVerdana size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10=\r\npt; FONT-FAMILY: Verdana&quot;&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;=\r\nFONT face=3DVerdana size=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt=\r\n; FONT-FAMILY: Verdana&quot;&gt;y que despu=E9s va definiendo para \n  cada tipo de =\r\ndatos soportados, junto con el operador ():&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3D=\r\nMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=\r\n=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;\n =\r\n &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN \n  style=3D=\r\n&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;__STL_TEMPLATE_NULL struct \n =\r\n hash&lt;char*&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;C=\r\nourier New&quot; size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Couri=\r\ner New&#39;&quot;&gt;{&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier N=\r\new&quot; size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;=\r\n&gt;&nbsp; size_t \n  operator()(const char* __s) const { return __stl_hash_str=\r\ning(__s); \n  }&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Couri=\r\ner New&quot; size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier N=\r\new&#39;&quot;&gt;};&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot;=\r\n size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;&lt;/=\r\nSPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; si=\r\nze=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;__STL=\r\n_TEMPLATE_NULL struct \n  hash&lt;short&gt; {&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=\r\n=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZ=\r\nE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;&nbsp; size_t \n  operator()(short __x)=\r\n const { return __x; }&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=\r\n=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; F=\r\nONT-FAMILY: &#39;Courier New&#39;&quot;&gt;};&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FON=\r\nT face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 1=\r\n0pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=3DMsoN=\r\normal&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt=\r\n; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;__STL_TEMPLATE_NULL struct \n  hash&lt;char&gt=\r\n; {&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; siz=\r\ne=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;&nbsp;=\r\n size_t \n  operator()(char __x) const { return __x; }&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;=\r\nP class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN lang=3DES-AR =\r\n\n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;};&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/=\r\nP&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN lang=3D=\r\nES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;&lt;/SPAN&gt;&lt;/FON=\r\nT&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SP=\r\nAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;&lt;/=\r\nSPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3DVerdana size=3D2=\r\n&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Verdana&quot;&gt;Por =\r\neso te dec=EDa en el mail \n  anterior que lo que ten=E9s que hacer (o por l=\r\no menos en la STL de SGI) es \n  definir esta clase hash para la clase que n=\r\necesites. Yo lo que hice con string \n  fue ver que hacia para char * y adap=\r\ntarlo.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3DVerdana size=\r\n=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Verdana&quot;&gt;=\r\n&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3DVerdana size=\r\n=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Verdana&quot;&gt;=\r\nMaximo&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3D&quot;Courier New&quot; =\r\nsize=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Cour=\r\nier New&#39;&quot;&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=3DMsoNormal&gt;&lt;FONT face=3DVerd=\r\nana color=3Dblue size=3D2&gt;&lt;SPAN lang=3DES-AR \n  style=3D&quot;FONT-SIZE: 10pt; C=\r\nOLOR: blue; FONT-FAMILY: Verdana&quot;&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=3DMso=\r\nNormal style=3D&quot;MARGIN-LEFT: 36pt&quot;&gt;&lt;FONT face=3DTahoma size=3D2&gt;&lt;SPAN \n  st=\r\nyle=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Tahoma&quot;&gt;-----Original \n  Message-----&lt;=\r\nBR&gt;&lt;B&gt;&lt;SPAN style=3D&quot;FONT-WEIGHT: bold&quot;&gt;From:&lt;/SPAN&gt;&lt;/B&gt; royconejo \n  [mail=\r\nto:s_o_c_o_t_r_o_c_o@...] &lt;BR&gt;&lt;B&gt;&lt;SPAN \n  style=3D&quot;FONT-WEIGHT: bo=\r\nld&quot;&gt;Sent:&lt;/SPAN&gt;&lt;/B&gt; Lunes, 25 de Noviembre de 2002 \n  07:02 p.m.&lt;BR&gt;&lt;B&gt;&lt;SP=\r\nAN style=3D&quot;FONT-WEIGHT: bold&quot;&gt;To:&lt;/SPAN&gt;&lt;/B&gt; \n  &lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT face=\r\n=3DTahoma size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Tahoma&quot;&gt;=\r\nJuegosAR@...&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT \n  face=3DTahoma size=3D2&gt;&lt;S=\r\nPAN \n  style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: Tahoma&quot;&gt;&lt;BR&gt;&lt;B&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-WEIGHT: bold&quot;&gt;Subject:&lt;/SPAN&gt;&lt;/B&gt; RE: [ADVA] STL \n  =3D(&lt;/SPAN&gt;&lt;/F=\r\nONT&gt;&lt;/P&gt;\n  &lt;P class=3DMsoNormal style=3D&quot;MARGIN-LEFT: 36pt&quot;&gt;&lt;FONT face=3D&quot;T=\r\nimes New Roman&quot; \n  size=3D3&gt;&lt;SPAN style=3D&quot;FONT-SIZE: 12pt&quot;&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&=\r\nnbsp;&lt;/P&gt;\n  &lt;P class=3DMsoNormal style=3D&quot;MARGIN-LEFT: 36pt&quot;&gt;&lt;TT&gt;&lt;FONT face=\r\n=3D&quot;Courier New&quot; \n  size=3D2&gt;&lt;SPAN style=3D&quot;FONT-SIZE: 10pt&quot;&gt;Si.. o sea que=\r\n el casteo a (size_t) \n  &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/TT&gt;&lt;TT&gt;&lt;FONT face=3D&quot;Courier New&quot; =\r\nsize=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt&quot;&gt;del&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/TT&gt;&lt;TT&gt;&lt;FONT=\r\n face=3D&quot;Courier New&quot; \n  size=3D2&gt;&lt;SPAN style=3D&quot;FONT-SIZE: 10pt&quot;&gt; tipo de =\r\ndato es lo que \n  &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/TT&gt;&lt;TT&gt;&lt;FONT face=3D&quot;Courier New&quot; size=3D=\r\n2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZE: 10pt&quot;&gt;usa&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/TT&gt;&lt;TT&gt;&lt;FONT face=\r\n=3D&quot;Courier New&quot; \n  size=3D2&gt;&lt;SPAN style=3D&quot;FONT-SIZE: 10pt&quot;&gt; para&lt;/SPAN&gt;&lt;/=\r\nFONT&gt;&lt;/TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN \n  style=3D&quot;FONT-SIZ=\r\nE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;=\r\nhashiarlo y siendo una clase o una estructura deberia \n  implementar este&lt;/=\r\nFONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;operador?&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;B=\r\nR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;otra implementacion de la misma funcion=\r\n esta comentada en \n  xhash:&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courie=\r\nr New&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; size_t operator()(const \n  _Kty&amp; =\r\n_Keyval) const&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp; \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp; // hash _Keyval \n  to size_t value&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  f=\r\nace=3D&quot;Courier New&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  &nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp; return \n  ((size_t)_Keyval);&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;=\r\nCourier New&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np; }&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;//&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp; size_t operator()(const \n  _Kty&amp; _Keyval) const&lt;/FONT&gt;&lt;=\r\n/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =\r\n\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // hash _=\r\nKeyval \n  to size_t value by pseudorandomizing transform&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT=\r\n&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  &nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp; ldiv_t _Qrem =3D ldiv((size_t)_Keyval, \n  127773);&lt;/=\r\nFONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;//&nbsp;&nbsp;&nbsp;&nbsp;&=\r\nnbsp; \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _Qrem.rem =3D 16807 * _Qrem.rem - 2=\r\n836 * \n  _Qrem.quot;&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;//&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (_Qrem.rem=\r\n &lt; 0)&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;//&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp; \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&=\r\nnbsp; _Qrem.rem +=3D \n  2147483647;&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Cou=\r\nrier New&quot;&gt;//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n; return ((size_t)_Qrem.rem); \n  }&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT face=3D&quot;Cou=\r\nrier New&quot;&gt;supongo que debe ser para no \n  complicar tanto por el tema &lt;/FON=\r\nT&gt;&lt;/TT&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;TT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot; size=3D2&gt;&lt;SPAN \n  st=\r\nyle=3D&quot;FONT-SIZE: 10pt&quot;&gt;del&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/TT&gt;&lt;FONT face=3D&quot;Courier New&quot; \n =\r\n size=3D2&gt;&lt;SPAN style=3D&quot;FONT-SIZE: 10pt; FONT-FAMILY: &#39;Courier New&#39;&quot;&gt;&lt;BR&gt;&lt;=\r\nTT&gt;&lt;FONT \n  face=3D&quot;Courier New&quot;&gt;(size_t)_Keyval.. alguien sabe porque esto=\r\n es asi? se \n  podria llegar a usar&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT face=3D&quot;Courie=\r\nr New&quot;&gt;esta otra \n  funcion que no requiere castiar keyval a (size_t) \n  di=\r\nrectamente?&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;&lt;FONT face=3D&quot;Courier New&quot;&gt;_&gt; \n  =\r\nRoyconejo.&lt;/FONT&gt;&lt;/TT&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&nbsp;&lt;/P&gt;&lt;BR&gt;&lt;/DIV&gt;&lt;BR&gt;&lt;TT&gt;ADVA - =\r\n\n  Asociaci=F3n de Desarrolladores de Videojuegos \n  Argentina.&lt;BR&gt;&lt;BR&gt;www.=\r\nadva.com.ar&lt;BR&gt;-------------------------------------------------------.&lt;BR&gt;=\r\n&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;Tu \n  uso de Yahoo! Grupos est=E1 sujeto a las &lt;A \n  h=\r\nref=3D&quot;http://ar.docs.yahoo.com/info/utos.html&quot;&gt;Condiciones del servicio de=\r\n \n  Yahoo!&lt;/A&gt;.&lt;/TT&gt; &lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_0002_01C294E0.8F7EC430--\r\n\n"}}