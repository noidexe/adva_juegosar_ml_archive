{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ_DATA"},{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"DELETE"},{"name":"READ"},{"name":"UPDATE"},{"name":"CREATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":105128512,"authorName":"Ignacio Liverotti","from":"&quot;Ignacio Liverotti&quot; &lt;iliverotti@...&gt;","replyTo":"LIST","senderId":"RX_UL2ZgbTx0j-FCD7CLg3y196qSZ6US_HL_6KFSAkxum6jZwanZN-8IM3EBhHM_wzJ1wwAVa-KCPb8EY4fMDSXMp2_DGBo0_JmPo_O9nsdUIPI","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [ADVA] Assembly en Visual C++","postDate":"1039056295","msgId":6651,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PE9FNTY0eXA4QVJmM3NsbE5ZMzAwMDAwM2QzNkBob3RtYWlsLmNvbT4=","referencesHeader":"PDIwMDIxMjAxMDEyOTMwLjEzMTc3LnFtYWlsQHdlYjEzMDA4Lm1haWwueWFob28uY29tPiA8T0UzOXMzV2NwNGFYQ0lUNW5TZjAwMDBiNTM5QGhvdG1haWwuY29tPiA8M0RFQkFGNkUuMzE5MTY4NzdAaXRvY2h1LmNvbS5hcj4gPDAwNzEwMWMyOWFiMyRmNDMxNzJhMCQ3NzEwMjljOEBNSUNST1NPRlQ+IDxPRTQyYURGdVhDcFU2cTVpamIxMDAwMDg3NmJAaG90bWFpbC5jb20+IDwzREVFMEZEQy43OTZGNTEyOUBpdG9jaHUuY29tLmFyPg=="},"prevInTopic":6650,"nextInTopic":6652,"prevInTime":6650,"nextInTime":6652,"topicId":6600,"numMessagesInTopic":27,"msgSnippet":"Sebastián, excelente tu explicación, no tenía idea que VC tenía algo así incorporado. Es decir, sabía que existían los profilers pero pensaba que eran","rawEmail":"Return-Path: &lt;iliverotti@...&gt;\r\nX-Sender: iliverotti@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (EGP: mail-8_2_3_0); 5 Dec 2002 17:59:08 -0000\r\nReceived: (qmail 70401 invoked from network); 5 Dec 2002 17:59:06 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m10.grp.scd.yahoo.com with QMQP; 5 Dec 2002 17:59:06 -0000\r\nReceived: from unknown (HELO hotmail.com) (64.4.16.191)\n  by mta1.grp.scd.yahoo.com with SMTP; 5 Dec 2002 17:59:06 -0000\r\nReceived: from mail pickup service by hotmail.com with Microsoft SMTPSVC;\n\t Thu, 5 Dec 2002 09:59:06 -0800\r\nTo: &lt;JuegosAR@...&gt;\r\nReferences: &lt;20021201012930.13177.qmail@...&gt; &lt;OE39s3Wcp4aXCIT5nSf0000b539@...&gt; &lt;3DEBAF6E.31916877@...&gt; &lt;007101c29ab3$f43172a0$771029c8@MICROSOFT&gt; &lt;OE42aDFuXCpU6q5ijb10000876b@...&gt; &lt;3DEE0FDC.796F5129@...&gt;\r\nSubject: Re: [ADVA] Assembly en Visual C++\r\nDate: Wed, 4 Dec 2002 23:44:55 -0300\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_008C_01C29BEF.25AED8E0&quot;\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.50.4133.2400\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400\r\nMessage-ID: &lt;OE564yp8ARf3sllNY3000003d36@...&gt;\r\nX-OriginalArrivalTime: 05 Dec 2002 17:59:06.0774 (UTC) FILETIME=[0119AB60:01C29C88]\r\nFrom: &quot;Ignacio Liverotti&quot; &lt;iliverotti@...&gt;\r\nX-Yahoo-Group-Post: member; u=105128512\r\n\r\n\r\n------=_NextPart_000_008C_01C29BEF.25AED8E0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nSebasti=E1n, excelente tu explicaci=F3n, no ten=EDa idea que VC ten=EDa alg=\r\no as=ED incorporado. Es decir, sab=EDa que exist=EDan los profilers pero pe=\r\nnsaba que eran third-party y ten=EDas que comprarlos para agreg=E1rselos a =\r\nVC.  El =FAnico tema es que lo busqu=E9 en el men=FA de ayuda y s=F3lo est=\r\n=E1 incluido en las versiones Profesional y Empresarial (yo tengo la introd=\r\nuctoria) pero cuando haga el upgrade (que supongo que ser=E1 pronto) no voy=\r\n a dejar de usarlo ya que me pareci=F3 espectacular. Pregunta: =BFQu=E9 son=\r\n los total hits y el overhead calculated?\n\nTe mando un saludo,\n--Ignacio Li=\r\nverotti\niliverotti@...\n  ----- Original Message ----- \n  From: Seba=\r\nstian Uribe \n  To: JuegosAR@... \n  Sent: Wednesday, December=\r\n 04, 2002 11:23 AM\n  Subject: Re: [ADVA] Assembly en Visual C++\n\n\n    \n  Ig=\r\nnacio, \n      El VTune, si no me equivoco, es un programa pensado para ayud=\r\narte a optimizar c=F3digo para procesadores Intel (es de Intel). Lo que nec=\r\nesit=E1s es un simple profiler que te muestre el tiempo de ejecuci=F3n de c=\r\nada funci=F3n. \n\n      Como te dije antes, el VC te permite hacer profiling=\r\n. Ten=E9s que cambiar una opci=F3n de compilaci=F3n (Enable profiling) en l=\r\nos settings del proyecto, recompilarlo, y despu=E9s elegir &quot;Profile...&quot; den=\r\ntro del men=FA Build. Va a correr m=E1s lento, pero cuando termine te tira =\r\nla lista de funciones. \n\n   Te doy un ejemplo del output para un programa m=\r\n=EDo: \n    \n\n  Profile: Function timing, sorted by time \n  Date:    Wed Dec=\r\n 04 10:54:37 2002 \n    \n\n  Program Statistics \n  ------------------ \n      =\r\nCommand line at 2002 Dec 04 10:54: &quot;C:&#92;prg&#92;tanqueGL&#92;Release&#92;tanqueGL&quot; \n    =\r\n  Total time: 6964.175 millisecond \n      Time outside of functions: 72.312=\r\n millisecond \n      Call depth: 16 \n      Total functions: 1183 \n      Tota=\r\nl hits: 180888 \n      Function coverage: 56.3% \n      Overhead Calculated 8=\r\n \n      Overhead Average 8 \n\n  Module Statistics for tanquegl.exe \n  ------=\r\n---------------------------- \n      Time in module: 6891.863 millisecond \n =\r\n     Percent of time in module: 100.0% \n      Functions in module: 1183 \n  =\r\n    Hits in module: 180888 \n      Module function coverage: 56.3% \n\n       =\r\n   Func          Func+Child           Hit \n          Time   %         Time =\r\n     %      Count  Function \n  --------------------------------------------=\r\n------------- \n      4138.054  60.0     6327.975  91.8      389 doRender(vo=\r\nid) (game.obj) \n      1760.836  25.5     2143.155  31.1      389 GLContext:=\r\n:preRender(void) (glcontext.obj) \n       379.140   5.5      379.140   5.5  =\r\n     69 Camera::extractFrustum(void) (camera.obj) \n       141.508   2.1    =\r\n  148.780   2.2        1 GLContext::init(char *,int,int,int,int,long (*)(st=\r\nruct HWND__ *,unsigned int,unsigned int,long)) (glcontext.obj) \n        93.=\r\n459   1.4     6594.183  95.7        1 mainLoop(void) (game.obj) \n        86=\r\n.222   1.3       94.560   1.4     1216 WndProc(struct HWND__ *,unsigned int=\r\n,unsigned int,long) (main.obj) \n        63.438   0.9       63.702   0.9    =\r\n    1 GLContext::quit(void) (glcontext.obj) \n        44.294   0.6       44.=\r\n294   0.6       13 std::__Fiopen(char const *,int) (fiopen.obj) \n        19=\r\n.813   0.3       36.635   0.5     3890 Unit::render(void) (unit.obj) \n     =\r\n   19.062   0.3       25.766   0.4        1 GLContext::show(int) (glcontext=\r\n.obj) \n        16.892   0.2       16.892   0.2    21006 Building::render(vo=\r\nid) (building.obj) \n        16.892   0.2       16.892   0.2    21006 Object=\r\n::render(void) (building.obj) \n        16.037   0.2       16.037   0.2     =\r\n   1 GLContext::setCamera(class Camera &) (glcontext.obj) \n        14.159  =\r\n 0.2       19.225   0.3        1 _$E17 (building.obj) \n         7.860   0.1=\r\n        7.860   0.1     6700 Unit::estimatedPosition(long) (unit.obj) \n    =\r\n     5.974   0.1        5.974   0.1     5602 std::basic_filebuf&lt;char,struct=\r\n std::char_traits&lt;char&gt; &gt;::uflow(void) (game.obj) \n\n      ... a partir de a=\r\nc=E1 hay cientos de funciones que comen una porci=F3n insignificante del ti=\r\nempo. \n\n  *    La funci=F3n que m=E1s tiempo come es la que llama a otras p=\r\nara que hagan el rendering: \n\n  void doRender(void) { \n      GL.preRender()=\r\n; \n\n      GL.render(&objectRenderList); \n      GL.render(&unitRenderList); =\r\n\n\n      GL.Disable(GL_DEPTH_TEST); \n          selector.render(); \n      GL.=\r\nEnable(GL_DEPTH_TEST); \n\n      GL.postRender(); \n  } \n\n      GLrender es mu=\r\ny simple: \n\n  void GLContext::render(UnitPtrList *renderList) { \n      for =\r\n(UnitPtrList::iterator i =3D renderList-&gt;begin() ; i !=3D renderList-&gt;end()=\r\n ; i++) { \n          glPushMatrix(); \n              (*i)-&gt;render(); \n      =\r\n    glPopMatrix(); \n      } \n  } \n\n      Y eso es lo que hace que tarde muc=\r\nho: No estoy ordenando por ningun criterio (textura), ni probando si los ob=\r\njetos se ven o no (Frustum Culling) ni nada. Tampoco estoy usando ningun ti=\r\npo de modelos con complejidad adaptiva. Mejorando esas cosas, seguro que el=\r\n tiempo se reduce a la mitad. Es una funci=F3n que hace lo que se espera de=\r\n ella, y nada m=E1s. \n\n  *    La funci=F3n GLContext::preRender hace la ope=\r\nraci=F3n que se come m=E1s tiempo del programa: limpiar el buffer de OpenGL=\r\n (glClear). Por mucho assembler que uses, nunca vas a poder optimizar eso (=\r\nes solo una llamada al driver y, creeme, los drivers tienen mucho m=E1s opt=\r\nimizado el clear de lo que alguien externo a la compa=F1=EDa que hace la pl=\r\naca pueda hacerlo jam=E1s). Come m=E1s de un 20% del tiempo del programa ha=\r\nciendo renders a un poco menos de 640x480, 50fps. \n    \n\n      Cada program=\r\na es un caso particular para hacer profiling, y ten=E9s que tener alguna id=\r\nea del dominio del problema para poder optimizar. Peor que no optimizar es =\r\noptimizar el lugar equivocado, porque te consume tiempo y probablemente hac=\r\ne que tu c=F3digo sea peor. \n\n      Espero que esto te de una m=EDnima idea=\r\n del proceso de profiling... \n\n  Ignacio Liverotti wrote: \n\n     =BFTen=E9s=\r\n alguno para recomendar que sea gratuito? VTune es el =FAnico que conozco y=\r\n creo que es pago.\n  -- \n  Sebasti=E1n Uribe \n  ITOCHU Argentina S.A. \n  su=\r\nribe@... \n    \n  ADVA - Asociaci=F3n de Desarrolladores de Videoj=\r\nuegos Argentina.\n\n  www.adva.com.ar\n  -------------------------------------=\r\n------------------.\n\n\n\n  Tu uso de Yahoo! Grupos est=E1 sujeto a las Condic=\r\niones del servicio de Yahoo!. \n\n\n\r\n------=_NextPart_000_008C_01C29BEF.25AED8E0\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 5.50.4134.600&quot; name=3DGENERATOR&gt;\n&lt;STYLE&gt;&lt;/STYLE&gt;=\r\n\n&lt;/HEAD&gt;\n&lt;BODY bgColor=3D#ffffff&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Sebasti=\r\n=E1n, excelente tu explicaci=F3n, no ten=EDa idea \nque VC ten=EDa algo as=\r\n=ED incorporado. Es decir, sab=EDa que exist=EDan los profilers \npero pensa=\r\nba que eran third-party y ten=EDas que&nbsp;comprarlos para agreg=E1rselos =\r\n\na VC.&nbsp; El =FAnico tema es que lo busqu=E9 en el men=FA de ayuda y s=\r\n=F3lo est=E1 \nincluido en las versiones Profesional y Empresarial (yo tengo=\r\n la introductoria) \npero cuando haga el upgrade (que supongo que ser=E1 pro=\r\nnto) no voy a dejar de \nusarlo ya que me pareci=F3 espectacular. Pregunta: =\r\n=BFQu=E9 son los total hits y el \noverhead calculated?&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;F=\r\nONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;Te mando un saludo,&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;--Ig=\r\nnacio Liverotti&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;A \nhref=3D&quot;m=\r\nailto:iliverotti@...&quot;&gt;iliverotti@...&lt;/A&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;BLOC=\r\nKQUOTE dir=3Dltr \nstyle=3D&quot;PADDING-RIGHT: 0px; PADDING-LEFT: 5px; MARGIN-LE=\r\nFT: 5px; BORDER-LEFT: #000000 2px solid; MARGIN-RIGHT: 0px&quot;&gt;\n  &lt;DIV style=\r\n=3D&quot;FONT: 10pt arial&quot;&gt;----- Original Message ----- &lt;/DIV&gt;\n  &lt;DIV \n  style=\r\n=3D&quot;BACKGROUND: #e4e4e4; FONT: 10pt arial; font-color: black&quot;&gt;&lt;B&gt;From:&lt;/B&gt; =\r\n\n  &lt;A title=3Dsuribe@... href=3D&quot;mailto:suribe@...&quot;&gt;Seb=\r\nastian \n  Uribe&lt;/A&gt; &lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;To:&lt;/B&gt; &lt;A =\r\ntitle=3DJuegosAR@... \n  href=3D&quot;mailto:JuegosAR@gruposyahoo.=\r\ncom.ar&quot;&gt;JuegosAR@...&lt;/A&gt; \n  &lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10p=\r\nt arial&quot;&gt;&lt;B&gt;Sent:&lt;/B&gt; Wednesday, December 04, 2002 11:23 \n  AM&lt;/DIV&gt;\n  &lt;DIV=\r\n style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Subject:&lt;/B&gt; Re: [ADVA] Assembly en Visual \n=\r\n  C++&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;BR&gt;&lt;/DIV&gt;&nbsp; &lt;BR&gt;Ignacio, \n  &lt;P&gt;&nbsp;&nbsp;&nbsp; E=\r\nl VTune, si no me equivoco, es un programa pensado para \n  ayudarte a optim=\r\nizar c=F3digo para procesadores Intel (es de Intel). Lo que \n  necesit=E1s =\r\nes un simple profiler que te muestre el tiempo de ejecuci=F3n de cada \n  fu=\r\nnci=F3n. \n  &lt;P&gt;&nbsp;&nbsp;&nbsp; Como te dije antes, el VC te permite hace=\r\nr profiling. \n  Ten=E9s que cambiar una opci=F3n de compilaci=F3n (Enable p=\r\nrofiling) en los settings \n  del proyecto, recompilarlo, y despu=E9s elegir=\r\n &quot;Profile...&quot; dentro del men=FA \n  Build. Va a correr m=E1s lento, pero cua=\r\nndo termine te tira la lista de \n  funciones. \n  &lt;P&gt;&nbsp;Te doy un ejemplo=\r\n del output para un programa m=EDo: &lt;BR&gt;&nbsp; \n  &lt;P&gt;Profile: Function timi=\r\nng, sorted by time &lt;BR&gt;Date:&nbsp;&nbsp;&nbsp; Wed \n  Dec 04 10:54:37 2002 =\r\n&lt;BR&gt;&nbsp; \n  &lt;P&gt;Program Statistics &lt;BR&gt;------------------ &lt;BR&gt;&nbsp;&nbsp;=\r\n&nbsp; Command \n  line at 2002 Dec 04 10:54: &quot;C:&#92;prg&#92;tanqueGL&#92;Release&#92;tanqu=\r\neGL&quot; \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp; Total time: 6964.175 millisecond &lt;BR&gt;&nbsp;&=\r\nnbsp;&nbsp; \n  Time outside of functions: 72.312 millisecond &lt;BR&gt;&nbsp;&nbs=\r\np;&nbsp; Call \n  depth: 16 &lt;BR&gt;&nbsp;&nbsp;&nbsp; Total functions: 1183 &lt;BR=\r\n&gt;&nbsp;&nbsp;&nbsp; \n  Total hits: 180888 &lt;BR&gt;&nbsp;&nbsp;&nbsp; Function c=\r\noverage: 56.3% \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp; Overhead Calculated 8 &lt;BR&gt;&nbsp;&n=\r\nbsp;&nbsp; Overhead \n  Average 8 \n  &lt;P&gt;Module Statistics for tanquegl.exe &lt;=\r\nBR&gt;---------------------------------- \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp; Time in mod=\r\nule: 6891.863 millisecond \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp; Percent of time in modu=\r\nle: 100.0% \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp; Functions in module: 1183 &lt;BR&gt;&nbsp;&n=\r\nbsp;&nbsp; Hits \n  in module: 180888 &lt;BR&gt;&nbsp;&nbsp;&nbsp; Module function=\r\n coverage: 56.3% \n  &lt;P&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  Func&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  Func+Child&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Hit \n  &lt;BR&gt;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Time&nbsp;&nbsp; \n  %&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp; \n  Time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; %&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp; Count&nbsp; \n  Function &lt;BR&gt;--------------------------=\r\n------------------------------- \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp; 4138.054&nbsp; 60=\r\n.0&nbsp;&nbsp;&nbsp;&nbsp; \n  6327.975&nbsp; 91.8&nbsp;&nbsp;&nbsp;&nbsp;&n=\r\nbsp; 389 doRender(void) \n  (game.obj) &lt;BR&gt;&nbsp;&nbsp;&nbsp; 1760.836&nbsp;=\r\n 25.5&nbsp;&nbsp;&nbsp;&nbsp; \n  2143.155&nbsp; 31.1&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp; 389 \n  GLContext::preRender(void) (glcontext.obj) &lt;BR&gt;&nbsp;&nbsp;&=\r\nnbsp;&nbsp; \n  379.140&nbsp;&nbsp; 5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 379.14=\r\n0&nbsp;&nbsp; \n  5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 69 Camera::extract=\r\nFrustum(void) \n  (camera.obj) &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp; 141.508&nbsp;&nb=\r\nsp; \n  2.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 148.780&nbsp;&nbsp; \n  2.2&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 GLContext::init(char \n  *,int,int,int,=\r\nint,long (*)(struct HWND__ *,unsigned int,unsigned int,long)) \n  (glcontext=\r\n.obj) &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 93.459&nbsp;&nbsp; \n  1.4&nbsp;&nb=\r\nsp;&nbsp;&nbsp; 6594.183&nbsp; \n  95.7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=\r\nnbsp; 1 mainLoop(void) (game.obj) \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 86.=\r\n222&nbsp;&nbsp; \n  1.3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 94.560&nbsp;&nbs=\r\np; \n  1.4&nbsp;&nbsp;&nbsp;&nbsp; 1216 WndProc(struct HWND__ *,unsigned int=\r\n,unsigned \n  int,long) (main.obj) &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 63.438=\r\n&nbsp;&nbsp; \n  0.9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 63.702&nbsp;&nbsp; =\r\n\n  0.9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 GLContext::quit(void) \n =\r\n (glcontext.obj) &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 44.294&nbsp;&nbsp; \n  0=\r\n.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 44.294&nbsp;&nbsp; \n  0.6&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp; 13 std::__Fiopen(char const *,int) \n  (fiopen.obj=\r\n) &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 19.813&nbsp;&nbsp; \n  0.3&nbsp;&nbsp;&=\r\nnbsp;&nbsp;&nbsp;&nbsp; 36.635&nbsp;&nbsp; \n  0.5&nbsp;&nbsp;&nbsp;&nbsp; 3=\r\n890 Unit::render(void) (unit.obj) \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 19.=\r\n062&nbsp;&nbsp; \n  0.3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 25.766&nbsp;&nbs=\r\np; \n  0.4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 GLContext::show(int) =\r\n\n  (glcontext.obj) &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16.892&nbsp;&nbsp; \n =\r\n 0.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16.892&nbsp;&nbsp; \n  0.2&nbsp;&nb=\r\nsp;&nbsp; 21006 Building::render(void) (building.obj) \n  &lt;BR&gt;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp; 16.892&nbsp;&nbsp; \n  0.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp; 16.892&nbsp;&nbsp; \n  0.2&nbsp;&nbsp;&nbsp; 21006 Object::render(void) =\r\n(building.obj) \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16.037&nbsp;&nbsp; \n  =\r\n0.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16.037&nbsp;&nbsp; \n  0.2&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 GLContext::setCamera(class \n  Camera &am=\r\np;) (glcontext.obj) &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  14.159&nbsp;&nbsp=\r\n; 0.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 19.225&nbsp;&nbsp; \n  0.3&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 _$E17 (building.obj) \n  &lt;BR&gt;&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp; 7.860&nbsp;&nbsp; \n  0.1&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp; 7.860&nbsp;&nbsp; \n  0.1&nbsp;&nbsp;&nbsp;&nbsp; 6700 Un=\r\nit::estimatedPosition(long) (unit.obj) \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp; 5.974&nbsp;&nbsp; \n  0.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =\r\n5.974&nbsp;&nbsp; \n  0.1&nbsp;&nbsp;&nbsp;&nbsp; 5602 std::basic_filebuf&lt=\r\n;char,struct \n  std::char_traits&lt;char&gt; &gt;::uflow(void) (game.obj) \n=\r\n  &lt;P&gt;&nbsp;&nbsp;&nbsp; ... a partir de ac=E1 hay cientos de funciones que =\r\ncomen \n  una porci=F3n insignificante del tiempo. \n  &lt;P&gt;*&nbsp;&nbsp;&nbsp;=\r\n La funci=F3n que m=E1s tiempo come es la que llama a otras \n  para que hag=\r\nan el rendering: \n  &lt;P&gt;void doRender(void) { &lt;BR&gt;&nbsp;&nbsp;&nbsp; GL.preR=\r\nender(); \n  &lt;P&gt;&nbsp;&nbsp;&nbsp; GL.render(&amp;objectRenderList); &lt;BR&gt;&nb=\r\nsp;&nbsp;&nbsp; \n  GL.render(&amp;unitRenderList); \n  &lt;P&gt;&nbsp;&nbsp;&nbsp;=\r\n GL.Disable(GL_DEPTH_TEST); \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np; selector.render(); \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp; GL.Enable(GL_DEPTH_TEST); \n=\r\n  &lt;P&gt;&nbsp;&nbsp;&nbsp; GL.postRender(); &lt;BR&gt;} \n  &lt;P&gt;&nbsp;&nbsp;&nbsp; GLr=\r\nender es muy simple: \n  &lt;P&gt;void GLContext::render(UnitPtrList *renderList) =\r\n{ &lt;BR&gt;&nbsp;&nbsp;&nbsp; \n  for (UnitPtrList::iterator i =3D renderList-&gt=\r\n;begin() ; i !=3D \n  renderList-&gt;end() ; i++) { &lt;BR&gt;&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp; \n  glPushMatrix(); \n  &lt;BR&gt;&nbsp;&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  (*i)-&gt;render(); &lt;BR&gt;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  glPopMatrix(); &lt;BR&gt;&nbsp;&nbsp;&nbsp;=\r\n } &lt;BR&gt;} \n  &lt;P&gt;&nbsp;&nbsp;&nbsp; Y eso es lo que hace que tarde mucho: No =\r\nestoy ordenando \n  por ningun criterio (textura), ni probando si los objeto=\r\ns se ven o no (Frustum \n  Culling) ni nada. Tampoco estoy usando ningun tip=\r\no de modelos con complejidad \n  adaptiva. Mejorando esas cosas, seguro que =\r\nel tiempo se reduce a la mitad. Es \n  una funci=F3n que hace lo que se espe=\r\nra de ella, y nada m=E1s. \n  &lt;P&gt;*&nbsp;&nbsp;&nbsp; La funci=F3n GLContext:=\r\n:preRender hace la operaci=F3n que \n  se come m=E1s tiempo del programa: li=\r\nmpiar el buffer de OpenGL (glClear). Por \n  mucho assembler que uses, nunca=\r\n vas a poder optimizar eso (es solo una llamada \n  al driver y, creeme, los=\r\n drivers tienen mucho m=E1s optimizado el clear de lo \n  que alguien extern=\r\no a la compa=F1=EDa que hace la placa pueda hacerlo jam=E1s). Come \n  m=E1s=\r\n de un 20% del tiempo del programa haciendo renders a un poco menos de \n  6=\r\n40x480, 50fps. &lt;BR&gt;&nbsp; \n  &lt;P&gt;&nbsp;&nbsp;&nbsp; Cada programa es un caso=\r\n particular para hacer \n  profiling, y ten=E9s que tener alguna idea del do=\r\nminio del problema para poder \n  optimizar. Peor que no optimizar es optimi=\r\nzar el lugar equivocado, porque te \n  consume tiempo y probablemente hace q=\r\nue tu c=F3digo sea peor. \n  &lt;P&gt;&nbsp;&nbsp;&nbsp; Espero que esto te de una=\r\n m=EDnima idea del proceso de \n  profiling... \n  &lt;P&gt;Ignacio Liverotti wrote=\r\n: \n  &lt;BLOCKQUOTE TYPE=3D&quot;CITE&quot;&gt;&nbsp;&lt;FONT face=3DArial&gt;&lt;FONT size=3D-1&gt;=BF=\r\nTen=E9s alguno \n    para recomendar que sea gratuito? VTune es el =FAnico q=\r\nue conozco y creo que \n    es pago.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/BLOCKQUOTE&gt;\n  &lt;P&gt;-- &lt;BR&gt;=\r\nSebasti=E1n Uribe &lt;BR&gt;ITOCHU Argentina S.A. &lt;BR&gt;suribe@... \n  &lt;BR=\r\n&gt;&nbsp; &lt;BR&gt;&lt;TT&gt;ADVA - Asociaci=F3n de Desarrolladores de Videojuegos \n  Ar=\r\ngentina.&lt;BR&gt;&lt;BR&gt;www.adva.com.ar&lt;BR&gt;----------------------------------------=\r\n---------------.&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;Tu \n  uso de Yahoo! Grupos est=E1 =\r\nsujeto a las &lt;A \n  href=3D&quot;http://ar.docs.yahoo.com/info/utos.html&quot;&gt;Condici=\r\nones del servicio de \n  Yahoo!&lt;/A&gt;.&lt;/TT&gt; &lt;BR&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;/BODY&gt;&lt;/HTML=\r\n&gt;\n\r\n------=_NextPart_000_008C_01C29BEF.25AED8E0--\r\n\n"}}