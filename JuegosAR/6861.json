{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ_DATA"},{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"DELETE"},{"name":"READ"},{"name":"UPDATE"},{"name":"CREATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":66118492,"authorName":"Diego G. Ruiz","from":"&quot;Diego G. Ruiz&quot; &lt;diego.ruiz@...&gt;","profile":"diegogabrielruiz","replyTo":"LIST","senderId":"J8mH7Y_bnDvTXsVPKhFgVlF8qscvm3kmYSKCiQK-b9_8cgCPMhtuCT7x7WEluK-K7R3fa2-HLtv6Hxh4PO4YZD80uTUDG6Jkrpd_iSAN","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [ADVA] Embebiendo Python en Librerías C++","postDate":"1041344897","msgId":6861,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDIxMjMxMTYzMi5nQlZHV21qMDI1NDlAaG9zdDkuaG9zdGluZy1hci5jb20+","inReplyToHeader":"PGF1cWhtcStjZW9pQGVHcm91cHMuY29tPg=="},"prevInTopic":6860,"nextInTopic":0,"prevInTime":6860,"nextInTime":6862,"topicId":5783,"numMessagesInTopic":53,"msgSnippet":" En realidad el método que utilizo yo es el mismo que","rawEmail":"Return-Path: &lt;diego.ruiz@...&gt;\r\nX-Sender: diego.ruiz@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (EGP: mail-8_2_3_0); 31 Dec 2002 14:28:52 -0000\r\nReceived: (qmail 76579 invoked from network); 31 Dec 2002 14:28:52 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m12.grp.scd.yahoo.com with QMQP; 31 Dec 2002 14:28:52 -0000\r\nReceived: from unknown (HELO host9.hosting-ar.com) (207.218.238.11)\n  by mta2.grp.scd.yahoo.com with SMTP; 31 Dec 2002 14:28:52 -0000\r\nReceived: from dedalus (lineaAG128.velocom.com.ar [200.59.38.128])\n\tby host9.hosting-ar.com (8.10.2/8.10.2) with SMTP id gBVGWmj02549\n\tfor &lt;JuegosAR@...&gt;; Tue, 31 Dec 2002 10:32:49 -0600\r\nMessage-Id: &lt;200212311632.gBVGWmj02549@...-ar.com&gt;\r\nTo: &lt;JuegosAR@...&gt;\r\nX-Mailer: PocoMail 2.63 (1077) - Licensed Version\r\nDate: Tue, 31 Dec 2002 11:28:17 -0300\r\nIn-Reply-To: &lt;auqhmq+ceoi@...&gt;\r\nSubject: Re: [ADVA] Embebiendo Python en Librer�as C++\r\nMime-Version: 1.0\r\nContent-Type: text/html; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nFrom: &quot;Diego G. Ruiz&quot; &lt;diego.ruiz@...&gt;\r\nX-Yahoo-Group-Post: member; u=66118492\r\nX-Yahoo-Profile: diegogabrielruiz\r\n\r\n&lt;HTML&gt;&lt;HEAD&gt;\n&lt;/HEAD&gt;\n&lt;BODY&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3 COLOR=3D&quot;#0=\r\n04080&quot;&gt; &lt;&lt;perdes que tus objectos ya no son instancias de clases, con=\r\n toda la abstraccion que representan.&gt;&gt;&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&nbsp;&lt;/div=\r\n&gt;\n&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; &lt;/FONT&gt;&lt;div&gt;&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D=\r\n3&gt; En realidad el m=E9todo que utilizo yo es el mismo que utilizan los &quo=\r\nt;accesors functions&quot; de Swig. No se pierde la posiblidad de instancia=\r\nr objetos ya que la referencia pasada se usa solamente si el script requier=\r\ne acceder a la misma instancia que lo llam=F3. Pero siempre se pueden crear=\r\n objetos del siguiente modo:&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&nbsp;&lt;/div&gt;\n&lt;FONT FACE=3D&quot;T=\r\nahoma&quot; SIZE=3D3&gt; &lt;/FONT&gt;&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; &lt;code&=\r\ngt;&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; import lista&lt;/FO=\r\nNT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; def loquesea:&lt;/FONT&gt;&lt;/d=\r\niv&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; &nbsp;&nbsp;&nbsp;&nbsp;obj =\r\n=3D lista.new()&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; &nbs=\r\np;&nbsp;&nbsp;&nbsp;lista.agregar(obj, 1)&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&nbsp;&lt;/div&gt;\n&lt;F=\r\nONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; &lt;/FONT&gt;&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; S=\r\nIZE=3D2&gt; &nbsp;&nbsp;&nbsp;&nbsp;obj2 =3D lista.new()&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FO=\r\nNT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; &nbsp;&nbsp;&nbsp;&nbsp;lista.agregar(obj=\r\n2, 8)&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; &nbsp;&nbsp;&n=\r\nbsp;&nbsp;...&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; &lt;/c=\r\node&gt;&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&nbsp;&lt;/div&gt;\n&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; &lt;/FO=\r\nNT&gt;&lt;div&gt;&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; Del mismo modo que Swig. Lo que suc=\r\nede es que Swig cuenta tambi=E9n con los &quot;Python wrappers&quot; que so=\r\nn las shadow classes, por lo que pod=E9s pedir que te cree una clase en Pyt=\r\nhon por cada clase en C++ de modo de poder utilizar los objetos C++ de mane=\r\nra mucho mas natural, como por ejemplo:&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&nbsp;&lt;/div&gt;\n&lt;FON=\r\nT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; &lt;/FONT&gt;&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2=\r\n&gt; &lt;code&gt;&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; impor=\r\nt lista&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; def loquesea=\r\n:&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; &nbsp;&nbsp;&nbsp;=\r\n&nbsp;obj =3D lista.new()&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=3D&quot;Courier New&quot; SIZE=\r\n=3D2&gt; &nbsp;&nbsp;&nbsp;&nbsp;obj.agregar(1)&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;FONT FACE=\r\n=3D&quot;Courier New&quot; SIZE=3D2&gt; &nbsp;&nbsp;&nbsp;&nbsp;...&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&lt;F=\r\nONT FACE=3D&quot;Courier New&quot; SIZE=3D2&gt; &lt;/code&gt;&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&nbsp;&lt;/=\r\ndiv&gt;\n&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; &lt;/FONT&gt;&lt;div&gt;&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=\r\n=3D3&gt; Sin contar que pod=E9s hacer uso de la mayor parte de las facilidades=\r\n de C++ como herencia, operadores sobrecargados, templates, etc.&lt;/FONT&gt;&lt;/di=\r\nv&gt;\n&lt;div&gt;&nbsp;&lt;/div&gt;\n&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; &lt;/FONT&gt;&lt;div&gt;&lt;FONT FACE=\r\n=3D&quot;Tahoma&quot; SIZE=3D3&gt; Sin embargo es probable que muchas de las funcionalid=\r\nades que te permite utilizar Swig de C++ por medio de Python no sean realme=\r\nnte necesarias y quiz=E1s pagues un precio en performance. En un principio =\r\nme hab=EDa planteado la duda si deb=EDa crearme un peque=F1o lenguaje de sc=\r\nript por las m=EDas (mucho mucho mas acotado y recontra simplista), luego p=\r\nudiendo utilizar Python de manera sencilla realmente se abri=F3 un mundo, n=\r\no creo necesitar el uso de templates desde Python.&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&nbsp;=\r\n&lt;/div&gt;\n&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; &lt;/FONT&gt;&lt;div&gt;&lt;FONT FACE=3D&quot;Tahoma&quot; SI=\r\nZE=3D3&gt; Sinceramente, lo que est=E1 haciendo vos, de utilizar el python con=\r\n m=F3dulos C++ me parece muy interesante. Como le=ED en alg=FAn lugar, pod=\r\n=E9s hacer si quer=E9s todos los m=F3dulos en Python y luego pasar a C++ s=\r\n=F3lo los que lo requieran (y sin cambiar nada del resto de los m=F3dulos q=\r\nue lo utilicen). Lo mejor de los dos mundos.&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&nbsp;&lt;/div&gt;=\r\n\n&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; &lt;/FONT&gt;&lt;div&gt;&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3=\r\n&gt; Saludos.&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;&nbsp;&lt;/div&gt;\n&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; &lt;=\r\n/FONT&gt;&lt;div&gt;&lt;FONT FACE=3D&quot;Tahoma&quot; SIZE=3D3&gt; Diego G. Ruiz&lt;/FONT&gt;&lt;/div&gt;\n&lt;div&gt;=\r\n&nbsp;&lt;/div&gt;\n&lt;/body&gt;&lt;/html&gt;\n\n\n"}}