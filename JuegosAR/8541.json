{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ_DATA"},{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"DELETE"},{"name":"READ"},{"name":"UPDATE"},{"name":"CREATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":117011744,"authorName":"Leonardo M. Falaschini","from":"&quot;Leonardo M. Falaschini&quot; &lt;leof@...&gt;","profile":"ltkidra","replyTo":"LIST","senderId":"hpvviJRSTgS1SZ_qg_C8FXS9oLRvNsmh_YWkvy4nn8oG16UQ5jx8gxzQkNZtngPaYgH4iY4_bFv99BHpMAWpohp__zs9nitjCGrBsC-MtNg6gvlNshc","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Voxels","postDate":"1066625806","msgId":8541,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMjkwMWMzOTZjNyQ2M2YyN2MwMCRmZWRhZmVhOUBkZWZhdWx0Pg==","referencesHeader":"PDIwMDMxMDE4MjM1NS40ODYwOS5jb2RpbmdAcmVkdXouY29tLmFyPiA8MDAxOTAxYzM5NWY2JDcwMjU2YzIwJGM3MjJmZWE5QGRlZmF1bHQ+IDwyMDAzMTAxOTAyMzYuMDUxMzcuY29kaW5nQHJlZHV6LmNvbS5hcj4="},"prevInTopic":0,"nextInTopic":0,"prevInTime":8540,"nextInTime":8542,"topicId":8541,"numMessagesInTopic":1,"msgSnippet":"A ver si entendí: Esto permite un aprovechamiento mucho mejor de recursos de procesamiento, y a la larga una plasticidad mayor de modelado 3D, cuando la ","rawEmail":"Return-Path: &lt;leof@...&gt;\r\nX-Sender: leof@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (qmail 37694 invoked from network); 20 Oct 2003 04:58:23 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m18.grp.scd.yahoo.com with QMQP; 20 Oct 2003 04:58:23 -0000\r\nReceived: from unknown (HELO server776.dnslive.net) (66.78.26.17)\n  by mta2.grp.scd.yahoo.com with SMTP; 20 Oct 2003 04:58:22 -0000\r\nReceived: from host029126.arnet.net.ar ([200.45.29.126] helo=default)\n\tby server776.dnslive.net with smtp (Exim 4.24)\n\tid 1ABS7Q-000148-Hn\n\tfor JuegosAR@...; Mon, 20 Oct 2003 00:58:14 -0400\r\nMessage-ID: &lt;002901c396c7$63f27c00$fedafea9@default&gt;\r\nTo: &lt;JuegosAR@...&gt;\r\nReferences: &lt;200310182355.48609.coding@...&gt; &lt;001901c395f6$70256c20$c722fea9@default&gt; &lt;200310190236.05137.coding@...&gt;\r\nSubject: Voxels \r\nDate: Mon, 20 Oct 2003 01:56:46 -0300\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 8bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2600.0000\r\nX-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2600.0000\r\nX-AntiAbuse: This header was added to track abuse, please include it with any abuse report\r\nX-AntiAbuse: Primary Hostname - server776.dnslive.net\r\nX-AntiAbuse: Original Domain - gruposyahoo.com.ar\r\nX-AntiAbuse: Originator/Caller UID/GID - [0 0] / [47 12]\r\nX-AntiAbuse: Sender Address Domain - playagrande.com\r\nFrom: &quot;Leonardo M. Falaschini&quot; &lt;leof@...&gt;\r\nX-Yahoo-Group-Post: member; u=117011744\r\nX-Yahoo-Profile: ltkidra\r\n\r\nA ver si entend�: Esto permite un aprovechamiento mucho mejor de recursos de\nprocesamiento, y a la larga una plasticidad mayor de modelado 3D, cuando la\ncantidad de Voxels en procesamiento sea muuucho mayor (los graficos que\nmuestran ahi, espero que sean meramente experimentales, por que resultan\ndecepcionantes, lo digo con onda) y los voxels puedan actual casi como\nmol�culas (ya se, no tanto, las moleculas son billones en un objeto\npeque�o)...\n\nOk, espero que si, aunque me pregunto c�mo ser�n las herramientas de\nmodelado en voxels...\n\nYo hubiese jurado que el futuro del 3D era utilizar curvas (pero curvas\nposta, no interpoladas con rayitas), c�mo hab�a visto en una ilustraci�n\nrenderizada en gigantograf�a de un Mario Bros. por ahi...\n\nShal�,\nLeo.\n\n\n\n----- Original Message -----\nFrom: &quot;Juan Linietsky&quot; &lt;coding@...&gt;\nTo: &lt;JuegosAR@...&gt;\nSent: Sunday, October 19, 2003 2:36 AM\nSubject: Re: [ADVA] Ok, explicacion de como funciona.\n\n\n&gt; On Sunday 19 October 2003 01:05, Leonardo M. Falaschini wrote:\n&gt; &gt; Un poco de castellano para los analfabetos de la programaci�n, por\nfavor...\n&gt; &gt; Por que yo veo unos tipitos con pistolitas colgados de unas sogas... no\nveo\n&gt; &gt; lo reolucionario (el que no sabe es como el que no v�, dicen) ...\n&gt; &gt;\n&gt; &gt; Shal�,\n&gt; &gt; Leo.\n&gt;\n&gt; Ah, bajate el demo (ejecutable si podes).\n&gt; Ok, paso a explicar (nota, intercambie un par de mails con Ken Silverman,\n&gt; el autor, que fue muy gentil en explicarme varias dudas que tenia sobre\ncomo\n&gt; esta implementado)\n&gt;\n&gt; Por suerte o desgracia de ustedes me operaron de un pie la semana pasada\n&gt; y apenas puedo caminar, asi que voy a dedicar un buen rato\n&gt; de esta noche de sabado que paso frente a la computadora a explicar\n&gt; que es exactamente esto y porque es importante. Como quienes me conocen\nsaben\n&gt; que NO soy partidario de hacerme el facho usando terminos muy tecnicos a\n&gt; menos que no quede otra.. Voy a tratar de explicar esto de manera que me\n&gt; entiendan tanto programadores como no programadores.\n&gt;\n&gt; Probablemente entienden la diferencia entre graficos vectoriales y\ngraficos\n&gt; pixelados.  Los vectoriales son aquellos graficos independientes de\n&gt; resolucion, y que se pueden mostrar en cualquier tamanio sin que pierdan\n&gt; detalle (Ejemplo, FLASH, o Painter). Los graficos pixelados son aquellos\n&gt; compuestos por una cantidad finita de elementos o pixeles, onda el\nphotoshop,\n&gt; y los formatos de imagen mas comunes. (gif, png, jpg, tga,etc) (Obviamente\n&gt; que una vez procesados todos se transforman en pixeles, pero estamos\nhalando\n&gt; de como es la &quot;materia prima&quot;). Las placas aceleradoras 3D, y por lo tanto\nlos\n&gt; juegos funcionan todos con primtiivas vectoriales llamadas &quot;poligonos&quot;\ndonde\n&gt; todo es representado por figuras geometricas ubicadas arbitrariamente en\nel\n&gt; espacio.\n&gt;\n&gt; Lo que esta nueva tecnologia que acabo de postear ahi arriba representa es\nuna\n&gt; tecnica para lograr crear mundos pixelados en 3D, donde los pixeles pasan\na\n&gt; ser &quot;cubos&quot;. Esto evidentemente no se puede hacer tan facilmente como 2D\npor\n&gt; la simple razon de que no dan los recursos. Imaginense si una imagen de\n&gt; 1024x1024, donde un pixel son 2 bytes (16bits) ocupa: 1024^2*2=1MB\n&gt; lo mismo en 3D ocupa 1024^3*2=1GB. Llejos de lo que puede procesar\n&gt; una maquina de hoy en dia.\n&gt;\n&gt; Obviamente cabe tambien destacar las ventajas de esta tecnica, porque\n&gt; sino no se estaria investigando. Ya que no existe el &quot;reuso&quot; de texturas,\n&gt; y un voxel es de hecho una &quot;molecula&quot;, podemos decir que el realismo\n&gt; de una escena es directamente proporcional al tamanio de un voxel.\n&gt; Con esto se pueden lograr escenas (al menos estaticas/pregeneradas\n&gt; por ahora) que simulen con mucho realismo a sus contrapartes\n&gt; reales, y ademas facilitando tenicas como caustics/shadows/photon mapping,\n&gt; etc.\n&gt;\n&gt; Evidentemente existen limitaciones de CPU. El renderizado de los &quot;voxels&quot;\nse\n&gt; realiza de la siguiente manera. Se define una distancia\n&gt; arbitraria desde el ojo del observador hasta la pantalla (esto se llama\n&gt; &quot;znear&quot;). Ahora, recorriendo cada pixel de la pantalla, trazamos una\n&gt; linea desde el ojo del observador pasando por ese pixel, suiguendo\n&gt; en esa direccion recorremos el &quot;bitmap en 3D&quot; HASTA que nos topamos\n&gt; con un voxel. Si nos topamos con uno, ponemos el color del respectivo\n&gt; en el pixel correspondiente y seguimos con el proximo.\n&gt; Bueno, obviamente como se dan cuenta, esto implica muchisimo CPU\n&gt; tambien.\n&gt;\n&gt;\n&gt; Pero Ken Silverman le encontro la vuelta, y paso a explicar como:\n&gt; (reitero, no me estoy mandando cualquiera, parte de este proceso me lo\nexplico\n&gt; el).\n&gt;\n&gt; -Podemos decir que es imposible ver a traves de los materiales solidos,\n&gt; por lo tanto, aun si fueran huecos con un milimetro de espesor, no\nnotariamos\n&gt; la diferencia. Entonces, si dijeramos que nuestras escenas y objetos son\nasi,\n&gt; habria muchisimo espacio libre. Este espacio libre se puede comprimir\nusando\n&gt; una tecnica que se llama &quot;RLE&quot; (run length encoding o algo asi), que dice\n&gt; &quot;ok, aca hay 20 voxels libres, 1 ocupado con estos datos, y otros 20\nlibres&quot;.\n&gt; Esto es mucho mas corto que decir &quot;libre, libre, libre, libre, libre,\nlibre\n&gt; (..) libre, ocupado, libre, libre, libre, etc&quot;. De esta manera se ahorra\n&gt; memoria! Al parecer ken desarrollo una tecnica que permite  leer los\n&gt; datos en este formato en tiempo real, lo que le ahorra muchisima memoria.\n&gt; (obviamente no me explico como es, asi que ya tienen un buen topic para\n&gt; research ;)\n&gt;\n&gt; -Aun asi, hacer raytracing en una matriz en 3 dimensiones es horriblemente\n&gt; lento, imaginense que si cada voxel mide 5 centimetros, y queremos ver tan\n&gt; solo cien metros.. vamos a terminar procesando 10mil voxels por cada\n&gt; pixel de la pantalla. Obviamente esto es una brutalidad. Uno podria\n&gt; hablar de tecnicas de oclusion y demas, pero hay una alternativa mas\nfacil:\n&gt; Se puede tener el mundo replicado varias veces, cada vez con la mitad\n&gt; de resolucion. Para quienes estudiaron algoritmos y esas cosas, ya saben\n&gt; que esto significa SOLO casi duplicar la memoria. Los mipmaps de una\n&gt; textura en una placa 3D estan guardados de la misma forma.\n&gt; Entonces, al ir recorriendo el mundo el rayo se va pasando de &quot;resolucion&#39;\n&gt; a medida que se aleja del observador, ahorrando mucho pero mucho cpu :)\n&gt;\n&gt; Bueno, esas vienen a ser las optimizaciones principales, pero aun asi\n&gt; queda una mas..\n&gt;\n&gt; -En tecnicas de raytracing, compresion de imaganes y video (el jpg/mpg\ncreo\n&gt; que usaba algo como esta tecnica? corrijanme si me equivoco) hay algo\n&gt; conocido como &quot;adaptative subsampling&quot;. Como cada pixel se procesa\n&gt; de manera independiente y no necesita saber lo que pasa con los vecinos,\n&gt; primero se procesa una imagen en menos resolucion. Es decir, imaginense\n&gt; que la resolucion de la pantalla es 640x480. Primero vamos a procesar\n&gt; los pixeles cual su ubicacion es multiplo de 4 tanto en eje X como Y, la\n&gt; imagen se veria como algo asi:\n&gt; .  .  .  .  .  .  .  .  .  .\n&gt; .  .  .  .  .  .  .  .  .  .\n&gt; .  .  .  .  .  .  .  .  .  .\n&gt; .  .  .  .  .  .  .  .  .  .\n&gt;\n&gt; Fijense que queda como una grilla con celdas de 4x4 pixeles. Ahora, en\ncada\n&gt; cuadradito de la grilla nos fijamos si en las esquinas el color es muy\npero\n&gt; muy parecido, si es asi, simplemente usamos un &quot;gradiente/rampa de color&quot;\n&gt; para conectar a los cuatro y marcamos ese cuadradito como que no se toca.\n&gt; Ok, ahora volvemos al paso uno, y procesamos los pixeles que son\n&gt; multiplos de 2 tanto en eje X como en Y y repetimos el proceso. (\nObviamente\n&gt; que si el pixel ya lo procesamos antes o esta dentro de un cuadradito que\n&quot;no\n&gt; se toca&quot; no lo volvemos a revisar).\n&gt; Como se imaginaran hay mejoras a esta tecnica que incluyen tambien\nrenderizar\n&gt; el pixel en el medio de cada cuadradito, pero por ahora no la quiero\n&gt; complicar.\n&gt; De esta menra se obtienen imagenes de mucha nitidez con un ahorro muy\n&gt; considerable de CPU.\n&gt;\n&gt; -Como habran visto el en demo, don Silverman pareciera que todavia no\nempezo a\n&gt; trabajar en tecnicas para interpolar los voxels cuando estan muy cerca de\nla\n&gt; camara, asi que se van a encontrar con tamanios cuadradotes, pero\n&gt; definitivamente este es otro aspecto interesante del area.\n&gt;\n&gt; -Tambien quiero aclarar que si esta tecnica es bien usada, se puede\n&gt; llevar lo mas bien con la geometria actual, y mezclar esto con\n&gt; poligonos es solo cuestion de compartir un Zbuffer.\n&gt;\n&gt; Bueno, fue un gusto poder compartir esto con ustedes, y espero que les sea\nde\n&gt; alguna utilidad. En mi opinion esto puede llegar a ser una verdadera\n&gt; revolucion si se logra llegar a correr en el hardware 3D. Saludos a todos!\n&gt;\n&gt; Juan Linietsky - reduz / CODENIX.\n&gt; --=-=\n&gt; http://www.codenix.com\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; ADVA - Asociaci�n de Desarrolladores de Videojuegos Argentina.\n&gt;\n&gt; www.adva.com.ar\n&gt; -------------------------------------------------------.\n&gt;\n&gt;\n&gt;\n&gt; Tu uso de Yahoo! Grupos est� sujeto a las\nhttp://ar.docs.yahoo.com/info/utos.html\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n"}}