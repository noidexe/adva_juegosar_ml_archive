{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"CREATE"},{"name":"READ_DATA"},{"name":"READ"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PIN","capabilities":[{"name":"CREATE"},{"name":"DELETE"},{"name":"UPDATE"},{"name":"READ"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":41248034,"authorName":"Ale Palmero","from":"&quot;Ale Palmero&quot; &lt;apalmero@...&gt;","profile":"listaqueso","replyTo":"LIST","senderId":"VUfr_5XdYox-tmKyyrvHrchMjAsjQmBV0wxb8ytFimgZi8YIxT2Cqpakh5gzRd0auzlbgPDeajzyT8KCG06aBg5OoPHbKL1FrY8BEA","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [ADVA] Voxels","postDate":"1066703272","msgId":8546,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMTEwMWMzOTdjOCRkNjBmODJlMCQwNTAwYThjMEBNQVJUQT4=","referencesHeader":"PDIwMDMxMDE4MjM1NS40ODYwOS5jb2RpbmdAcmVkdXouY29tLmFyPiA8MDAxOTAxYzM5NWY2JDcwMjU2YzIwJGM3MjJmZWE5QGRlZmF1bHQ+IDwyMDAzMTAxOTAyMzYuMDUxMzcuY29kaW5nQHJlZHV6LmNvbS5hcj4gPDAwMjkwMWMzOTZjNyQ2M2YyN2MwMCRmZWRhZmVhOUBkZWZhdWx0PiA8MDAzMjAxYzM5NmM2JGNiNjM5ZDIwJDAzMDAwMDBhQGNlbGVyb24+"},"prevInTopic":8542,"nextInTopic":0,"prevInTime":8545,"nextInTime":8547,"topicId":8542,"numMessagesInTopic":2,"msgSnippet":"si no entendi mal en una lectura rapida las cavernas se generan con un algoritmo fractal ? A lo mejor se puede modelar un escenario parecido a los de quake 3","rawEmail":"Return-Path: &lt;apalmero@...&gt;\r\nX-Sender: apalmero@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (qmail 22725 invoked from network); 21 Oct 2003 11:40:05 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m4.grp.scd.yahoo.com with QMQP; 21 Oct 2003 11:40:05 -0000\r\nReceived: from unknown (HELO smtp2.impsat.net.ar) (200.31.1.16)\n  by mta3.grp.scd.yahoo.com with SMTP; 21 Oct 2003 11:40:05 -0000\r\nReceived: from MARTA (200-41-16-95-rdurafd1.impsat.net.ar [200.41.16.95])\n\tby smtp2.impsat.net.ar (8.9.3/8.9.3) with SMTP id IAA29104\n\tfor &lt;JuegosAR@...&gt;; Tue, 21 Oct 2003 08:39:12 -0300 (ARST)\r\nMessage-ID: &lt;001101c397c8$d60f82e0$0500a8c0@MARTA&gt;\r\nTo: &lt;JuegosAR@...&gt;\r\nReferences: &lt;200310182355.48609.coding@...&gt; &lt;001901c395f6$70256c20$c722fea9@default&gt; &lt;200310190236.05137.coding@...&gt; &lt;002901c396c7$63f27c00$fedafea9@default&gt; &lt;003201c396c6$cb639d20$0300000a@celeron&gt;\r\nSubject: RE: [ADVA] Voxels\r\nDate: Mon, 20 Oct 2003 23:27:52 -0300\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 8bit\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 5.00.2014.211\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.00.2014.211\r\nFrom: &quot;Ale Palmero&quot; &lt;apalmero@...&gt;\r\nX-Yahoo-Group-Post: member; u=41248034\r\nX-Yahoo-Profile: listaqueso\r\n\r\n\nsi no entendi mal en una lectura rapida las cavernas se generan con un\nalgoritmo fractal ?\nA lo mejor se puede modelar un escenario parecido a los de quake 3 con esa\ntecnica (si ellos sacan un editor) pero al ir rompiendo paredes surgiria el\nmismo problema que tenemos ahora con los poligonos, o sea que va a haber\nmucho detalle que procesar (y muchas luces, particulas, efectos...) todo\njunto en pantalla.\n\n----- Original Message -----\nFrom: H. Hern�n Moraldo &lt;hernan@...&gt;\n\n&gt; sus amigos uno modela a los mundos 3d de una manera m�s cercana a como\n&gt; funcionan en el mundo real, s�lo con part�culas; en vez de pretender que\nlos\n&gt; objetos son cosas huecas con una c�scara poligonal (y con suerte, con\n&gt; curvas).\n&gt;\n&gt; M�s o menos, y muy r�pidamente, la idea es �sa :))\n&gt;\n&gt; Saludos,\n&gt;\n&gt; H. Hern�n Moraldo\n&gt; Moraldo Games\n&gt; http://games.moraldo.com.ar/\n&gt;\n&gt;\n&gt; ----- Original Message -----\n&gt; From: &quot;Leonardo M. Falaschini&quot; &lt;leof@...&gt;\n&gt; To: &lt;JuegosAR@...&gt;\n&gt; Sent: Monday, October 20, 2003 1:56 AM\n&gt; Subject: [ADVA] Voxels\n&gt;\n&gt;\n&gt; &gt; A ver si entend�: Esto permite un aprovechamiento mucho mejor de\nrecursos\n&gt; de\n&gt; &gt; procesamiento, y a la larga una plasticidad mayor de modelado 3D, cuando\n&gt; la\n&gt; &gt; cantidad de Voxels en procesamiento sea muuucho mayor (los graficos que\n&gt; &gt; muestran ahi, espero que sean meramente experimentales, por que resultan\n&gt; &gt; decepcionantes, lo digo con onda) y los voxels puedan actual casi como\n&gt; &gt; mol�culas (ya se, no tanto, las moleculas son billones en un objeto\n&gt; &gt; peque�o)...\n&gt; &gt;\n&gt; &gt; Ok, espero que si, aunque me pregunto c�mo ser�n las herramientas de\n&gt; &gt; modelado en voxels...\n&gt; &gt;\n&gt; &gt; Yo hubiese jurado que el futuro del 3D era utilizar curvas (pero curvas\n&gt; &gt; posta, no interpoladas con rayitas), c�mo hab�a visto en una ilustraci�n\n&gt; &gt; renderizada en gigantograf�a de un Mario Bros. por ahi...\n&gt; &gt;\n&gt; &gt; Shal�,\n&gt; &gt; Leo.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ----- Original Message -----\n&gt; &gt; From: &quot;Juan Linietsky&quot; &lt;coding@...&gt;\n&gt; &gt; To: &lt;JuegosAR@...&gt;\n&gt; &gt; Sent: Sunday, October 19, 2003 2:36 AM\n&gt; &gt; Subject: Re: [ADVA] Ok, explicacion de como funciona.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; &gt; On Sunday 19 October 2003 01:05, Leonardo M. Falaschini wrote:\n&gt; &gt; &gt; &gt; Un poco de castellano para los analfabetos de la programaci�n, por\n&gt; &gt; favor...\n&gt; &gt; &gt; &gt; Por que yo veo unos tipitos con pistolitas colgados de unas sogas...\n&gt; no\n&gt; &gt; veo\n&gt; &gt; &gt; &gt; lo reolucionario (el que no sabe es como el que no v�, dicen) ...\n&gt; &gt; &gt; &gt;\n&gt; &gt; &gt; &gt; Shal�,\n&gt; &gt; &gt; &gt; Leo.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Ah, bajate el demo (ejecutable si podes).\n&gt; &gt; &gt; Ok, paso a explicar (nota, intercambie un par de mails con Ken\n&gt; Silverman,\n&gt; &gt; &gt; el autor, que fue muy gentil en explicarme varias dudas que tenia\nsobre\n&gt; &gt; como\n&gt; &gt; &gt; esta implementado)\n&gt; &gt; &gt;\n&gt; &gt; &gt; Por suerte o desgracia de ustedes me operaron de un pie la semana\npasada\n&gt; &gt; &gt; y apenas puedo caminar, asi que voy a dedicar un buen rato\n&gt; &gt; &gt; de esta noche de sabado que paso frente a la computadora a explicar\n&gt; &gt; &gt; que es exactamente esto y porque es importante. Como quienes me\nconocen\n&gt; &gt; saben\n&gt; &gt; &gt; que NO soy partidario de hacerme el facho usando terminos muy tecnicos\na\n&gt; &gt; &gt; menos que no quede otra.. Voy a tratar de explicar esto de manera que\nme\n&gt; &gt; &gt; entiendan tanto programadores como no programadores.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Probablemente entienden la diferencia entre graficos vectoriales y\n&gt; &gt; graficos\n&gt; &gt; &gt; pixelados.  Los vectoriales son aquellos graficos independientes de\n&gt; &gt; &gt; resolucion, y que se pueden mostrar en cualquier tamanio sin que\npierdan\n&gt; &gt; &gt; detalle (Ejemplo, FLASH, o Painter). Los graficos pixelados son\naquellos\n&gt; &gt; &gt; compuestos por una cantidad finita de elementos o pixeles, onda el\n&gt; &gt; photoshop,\n&gt; &gt; &gt; y los formatos de imagen mas comunes. (gif, png, jpg, tga,etc)\n&gt; (Obviamente\n&gt; &gt; &gt; que una vez procesados todos se transforman en pixeles, pero estamos\n&gt; &gt; halando\n&gt; &gt; &gt; de como es la &quot;materia prima&quot;). Las placas aceleradoras 3D, y por lo\n&gt; tanto\n&gt; &gt; los\n&gt; &gt; &gt; juegos funcionan todos con primtiivas vectoriales llamadas &quot;poligonos&quot;\n&gt; &gt; donde\n&gt; &gt; &gt; todo es representado por figuras geometricas ubicadas arbitrariamente\nen\n&gt; &gt; el\n&gt; &gt; &gt; espacio.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Lo que esta nueva tecnologia que acabo de postear ahi arriba\nrepresenta\n&gt; es\n&gt; &gt; una\n&gt; &gt; &gt; tecnica para lograr crear mundos pixelados en 3D, donde los pixeles\n&gt; pasan\n&gt; &gt; a\n&gt; &gt; &gt; ser &quot;cubos&quot;. Esto evidentemente no se puede hacer tan facilmente como\n2D\n&gt; &gt; por\n&gt; &gt; &gt; la simple razon de que no dan los recursos. Imaginense si una imagen\nde\n&gt; &gt; &gt; 1024x1024, donde un pixel son 2 bytes (16bits) ocupa: 1024^2*2=1MB\n&gt; &gt; &gt; lo mismo en 3D ocupa 1024^3*2=1GB. Llejos de lo que puede procesar\n&gt; &gt; &gt; una maquina de hoy en dia.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Obviamente cabe tambien destacar las ventajas de esta tecnica, porque\n&gt; &gt; &gt; sino no se estaria investigando. Ya que no existe el &quot;reuso&quot; de\n&gt; texturas,\n&gt; &gt; &gt; y un voxel es de hecho una &quot;molecula&quot;, podemos decir que el realismo\n&gt; &gt; &gt; de una escena es directamente proporcional al tamanio de un voxel.\n&gt; &gt; &gt; Con esto se pueden lograr escenas (al menos estaticas/pregeneradas\n&gt; &gt; &gt; por ahora) que simulen con mucho realismo a sus contrapartes\n&gt; &gt; &gt; reales, y ademas facilitando tenicas como caustics/shadows/photon\n&gt; mapping,\n&gt; &gt; &gt; etc.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Evidentemente existen limitaciones de CPU. El renderizado de los\n&gt; &quot;voxels&quot;\n&gt; &gt; se\n&gt; &gt; &gt; realiza de la siguiente manera. Se define una distancia\n&gt; &gt; &gt; arbitraria desde el ojo del observador hasta la pantalla (esto se\nllama\n&gt; &gt; &gt; &quot;znear&quot;). Ahora, recorriendo cada pixel de la pantalla, trazamos una\n&gt; &gt; &gt; linea desde el ojo del observador pasando por ese pixel, suiguendo\n&gt; &gt; &gt; en esa direccion recorremos el &quot;bitmap en 3D&quot; HASTA que nos topamos\n&gt; &gt; &gt; con un voxel. Si nos topamos con uno, ponemos el color del respectivo\n&gt; &gt; &gt; en el pixel correspondiente y seguimos con el proximo.\n&gt; &gt; &gt; Bueno, obviamente como se dan cuenta, esto implica muchisimo CPU\n&gt; &gt; &gt; tambien.\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Pero Ken Silverman le encontro la vuelta, y paso a explicar como:\n&gt; &gt; &gt; (reitero, no me estoy mandando cualquiera, parte de este proceso me lo\n&gt; &gt; explico\n&gt; &gt; &gt; el).\n&gt; &gt; &gt;\n&gt; &gt; &gt; -Podemos decir que es imposible ver a traves de los materiales\nsolidos,\n&gt; &gt; &gt; por lo tanto, aun si fueran huecos con un milimetro de espesor, no\n&gt; &gt; notariamos\n&gt; &gt; &gt; la diferencia. Entonces, si dijeramos que nuestras escenas y objetos\nson\n&gt; &gt; asi,\n&gt; &gt; &gt; habria muchisimo espacio libre. Este espacio libre se puede comprimir\n&gt; &gt; usando\n&gt; &gt; &gt; una tecnica que se llama &quot;RLE&quot; (run length encoding o algo asi), que\n&gt; dice\n&gt; &gt; &gt; &quot;ok, aca hay 20 voxels libres, 1 ocupado con estos datos, y otros 20\n&gt; &gt; libres&quot;.\n&gt; &gt; &gt; Esto es mucho mas corto que decir &quot;libre, libre, libre, libre, libre,\n&gt; &gt; libre\n&gt; &gt; &gt; (..) libre, ocupado, libre, libre, libre, etc&quot;. De esta manera se\nahorra\n&gt; &gt; &gt; memoria! Al parecer ken desarrollo una tecnica que permite  leer los\n&gt; &gt; &gt; datos en este formato en tiempo real, lo que le ahorra muchisima\n&gt; memoria.\n&gt; &gt; &gt; (obviamente no me explico como es, asi que ya tienen un buen topic\npara\n&gt; &gt; &gt; research ;)\n&gt; &gt; &gt;\n&gt; &gt; &gt; -Aun asi, hacer raytracing en una matriz en 3 dimensiones es\n&gt; horriblemente\n&gt; &gt; &gt; lento, imaginense que si cada voxel mide 5 centimetros, y queremos ver\n&gt; tan\n&gt; &gt; &gt; solo cien metros.. vamos a terminar procesando 10mil voxels por cada\n&gt; &gt; &gt; pixel de la pantalla. Obviamente esto es una brutalidad. Uno podria\n&gt; &gt; &gt; hablar de tecnicas de oclusion y demas, pero hay una alternativa mas\n&gt; &gt; facil:\n&gt; &gt; &gt; Se puede tener el mundo replicado varias veces, cada vez con la mitad\n&gt; &gt; &gt; de resolucion. Para quienes estudiaron algoritmos y esas cosas, ya\nsaben\n&gt; &gt; &gt; que esto significa SOLO casi duplicar la memoria. Los mipmaps de una\n&gt; &gt; &gt; textura en una placa 3D estan guardados de la misma forma.\n&gt; &gt; &gt; Entonces, al ir recorriendo el mundo el rayo se va pasando de\n&gt; &quot;resolucion&#39;\n&gt; &gt; &gt; a medida que se aleja del observador, ahorrando mucho pero mucho cpu\n:)\n&gt; &gt; &gt;\n&gt; &gt; &gt; Bueno, esas vienen a ser las optimizaciones principales, pero aun asi\n&gt; &gt; &gt; queda una mas..\n&gt; &gt; &gt;\n&gt; &gt; &gt; -En tecnicas de raytracing, compresion de imaganes y video (el jpg/mpg\n&gt; &gt; creo\n&gt; &gt; &gt; que usaba algo como esta tecnica? corrijanme si me equivoco) hay algo\n&gt; &gt; &gt; conocido como &quot;adaptative subsampling&quot;. Como cada pixel se procesa\n&gt; &gt; &gt; de manera independiente y no necesita saber lo que pasa con los\nvecinos,\n&gt; &gt; &gt; primero se procesa una imagen en menos resolucion. Es decir,\nimaginense\n&gt; &gt; &gt; que la resolucion de la pantalla es 640x480. Primero vamos a procesar\n&gt; &gt; &gt; los pixeles cual su ubicacion es multiplo de 4 tanto en eje X como Y,\nla\n&gt; &gt; &gt; imagen se veria como algo asi:\n&gt; &gt; &gt; .  .  .  .  .  .  .  .  .  .\n&gt; &gt; &gt; .  .  .  .  .  .  .  .  .  .\n&gt; &gt; &gt; .  .  .  .  .  .  .  .  .  .\n&gt; &gt; &gt; .  .  .  .  .  .  .  .  .  .\n&gt; &gt; &gt;\n&gt; &gt; &gt; Fijense que queda como una grilla con celdas de 4x4 pixeles. Ahora, en\n&gt; &gt; cada\n&gt; &gt; &gt; cuadradito de la grilla nos fijamos si en las esquinas el color es muy\n&gt; &gt; pero\n&gt; &gt; &gt; muy parecido, si es asi, simplemente usamos un &quot;gradiente/rampa de\n&gt; color&quot;\n&gt; &gt; &gt; para conectar a los cuatro y marcamos ese cuadradito como que no se\n&gt; toca.\n&gt; &gt; &gt; Ok, ahora volvemos al paso uno, y procesamos los pixeles que son\n&gt; &gt; &gt; multiplos de 2 tanto en eje X como en Y y repetimos el proceso. (\n&gt; &gt; Obviamente\n&gt; &gt; &gt; que si el pixel ya lo procesamos antes o esta dentro de un cuadradito\n&gt; que\n&gt; &gt; &quot;no\n&gt; &gt; &gt; se toca&quot; no lo volvemos a revisar).\n&gt; &gt; &gt; Como se imaginaran hay mejoras a esta tecnica que incluyen tambien\n&gt; &gt; renderizar\n&gt; &gt; &gt; el pixel en el medio de cada cuadradito, pero por ahora no la quiero\n&gt; &gt; &gt; complicar.\n&gt; &gt; &gt; De esta menra se obtienen imagenes de mucha nitidez con un ahorro muy\n&gt; &gt; &gt; considerable de CPU.\n&gt; &gt; &gt;\n&gt; &gt; &gt; -Como habran visto el en demo, don Silverman pareciera que todavia no\n&gt; &gt; empezo a\n&gt; &gt; &gt; trabajar en tecnicas para interpolar los voxels cuando estan muy cerca\n&gt; de\n&gt; &gt; la\n&gt; &gt; &gt; camara, asi que se van a encontrar con tamanios cuadradotes, pero\n&gt; &gt; &gt; definitivamente este es otro aspecto interesante del area.\n&gt; &gt; &gt;\n&gt; &gt; &gt; -Tambien quiero aclarar que si esta tecnica es bien usada, se puede\n&gt; &gt; &gt; llevar lo mas bien con la geometria actual, y mezclar esto con\n&gt; &gt; &gt; poligonos es solo cuestion de compartir un Zbuffer.\n&gt; &gt; &gt;\n&gt; &gt; &gt; Bueno, fue un gusto poder compartir esto con ustedes, y espero que les\n&gt; sea\n&gt; &gt; de\n&gt; &gt; &gt; alguna utilidad. En mi opinion esto puede llegar a ser una verdadera\n&gt; &gt; &gt; revolucion si se logra llegar a correr en el hardware 3D. Saludos a\n&gt; todos!\n&gt; &gt; &gt;\n&gt; &gt; &gt; Juan Linietsky - reduz / CODENIX.\n&gt; &gt; &gt; --=-=\n&gt; &gt; &gt; http://www.codenix.com\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; ADVA - Asociaci�n de Desarrolladores de Videojuegos Argentina.\n&gt; &gt; &gt;\n&gt; &gt; &gt; www.adva.com.ar\n&gt; &gt; &gt; -------------------------------------------------------.\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt; Tu uso de Yahoo! Grupos est� sujeto a las\n&gt; &gt; http://ar.docs.yahoo.com/info/utos.html\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ADVA - Asociaci�n de Desarrolladores de Videojuegos Argentina.\n&gt; &gt;\n&gt; &gt; www.adva.com.ar\n&gt; &gt; -------------------------------------------------------.\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Tu uso de Yahoo! Grupos est� sujeto a las\n&gt; http://ar.docs.yahoo.com/info/utos.html\n&gt; &gt;\n&gt; &gt;\n&gt;\n&gt;\n&gt; ADVA - Asociaci�n de Desarrolladores de Videojuegos Argentina.\n&gt;\n&gt; www.adva.com.ar\n&gt; -------------------------------------------------------.\n&gt;\n&gt;\n&gt;\n&gt; Tu uso de Yahoo! Grupos est� sujeto a las\nhttp://ar.docs.yahoo.com/info/utos.html\n&gt;\n\n\n"}}