{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ"},{"name":"CREATE"},{"name":"READ_DATA"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"READ"},{"name":"UPDATE"},{"name":"CREATE"},{"name":"DELETE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":121546690,"authorName":"Noid","from":"&quot;Noid&quot; &lt;lorea85@...&gt;","replyTo":"LIST","senderId":"HHBgZs3QCMMuztEG3DvUGSxvbMNAiVfhh67o6mGEXidKeWGsApUPqUeKj-t3dC3Jdw0stGiXeZqHi-nJPu2JFNtdpjBuRn8","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [ADVA] Ok, explicacion de como funciona.","postDate":"1066794834","msgId":8548,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEtDRU1MTUdPSEtMQU5DRE5BSEZJR0VCSUNCQUEubG9yZWE4NUBmdWxsemVyby5jb20uYXI+","inReplyToHeader":"PDIwMDMxMDE5MTA0MDMzLjMyNDQyOUBkZWRhbHVzPg=="},"prevInTopic":8540,"nextInTopic":8549,"prevInTime":8547,"nextInTime":8549,"topicId":8536,"numMessagesInTopic":10,"msgSnippet":"Outcast usa voxels y polys para los personajes, y algo de sprites. Es uno de los juegos mas divertidos y apasionantes que conozco aunque ya es bastante viejo. ","rawEmail":"Return-Path: &lt;lorea85@...&gt;\r\nX-Sender: lorea85@...\r\nX-Apparently-To: JuegosAR@...\r\nReceived: (qmail 86384 invoked from network); 22 Oct 2003 03:54:06 -0000\r\nReceived: from unknown (66.218.66.216)\n  by m6.grp.scd.yahoo.com with QMQP; 22 Oct 2003 03:54:06 -0000\r\nReceived: from unknown (HELO postinofz1.prima.com.ar) (200.42.0.149)\n  by mta1.grp.scd.yahoo.com with SMTP; 22 Oct 2003 03:54:04 -0000\r\nReceived: (qmail 90239 invoked from network); 22 Oct 2003 03:53:53 -0000\r\nReceived: from unknown (HELO noid) (200.70.146.169)\n  by postinofz1.prima.com.ar with SMTP; 22 Oct 2003 03:53:53 -0000\r\nTo: &lt;JuegosAR@...&gt;\r\nSubject: RE: [ADVA] Ok, explicacion de como funciona.\r\nDate: Wed, 22 Oct 2003 00:53:54 -0300\r\nMessage-ID: &lt;KCEMLMGOHKLANCDNAHFIGEBICBAA.lorea85@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_0000_01C39836.F7981120&quot;\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\r\nImportance: Normal\r\nIn-Reply-To: &lt;20031019104033.324429@dedalus&gt;\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400\r\nFrom: &quot;Noid&quot; &lt;lorea85@...&gt;\r\nX-Yahoo-Group-Post: member; u=121546690\r\n\r\n\r\n------=_NextPart_000_0000_01C39836.F7981120\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 8bit\r\n\r\nOutcast usa voxels y polys para los personajes, y algo de sprites. Es uno de\nlos juegos mas divertidos y apasionantes que conozco aunque ya es bastante\nviejo.\n  -----Mensaje original-----\n  De: Diego G. Ruiz [mailto:diego@...]\n  Enviado el: Domingo, 19 de Octubre de 2003 10:41 a.m.\n  Para: JuegosAR@...\n  Asunto: Re: [ADVA] Ok, explicacion de como funciona.\n\n\n\n\n  Existieron algunos juegos que utilizaron esta t�cnica, entre ellos &quot;Delta\nForce&quot; y &quot;Delta Force 2&quot;. En este �ltimo se mezclaron voxels con objetos\nhechos de pol�gonos aprovechando la aceleraci�n 3d del hardware (que no\nexist�a en la primer versi�n).\n\n\n\n  &quot;According to NovaLogic, the ability to accelerate the game is due to\ntheir Voxel Space 32 engine; Like the original Delta Force, Delta Force 2\nuses NovaLogic&#39;s Voxel Space technology for detailed terrain and extreme\nviewing distances - but it will be the first Voxel Space game to support 3D\nhardware. Novalogic&#39;s Voxel Space games have incorporated polygon-based\nobjects - buildings, vehicles, trees, since the release of Comanche 3 in\n1997, according to the company. But until now, the company hasn&#39;t utilized\n3D acceleration within a game. In Delta Force 2, players will be able to\nutilize 3D graphics and keep the benefits of Voxel technology. According to\nNovaLogic the game will support 3D acceleration using Direct3D, which will\nallow them to do a myriad of things including support 32 bit color.&quot;\n\n\n\n  Luego en una tercera versi�n creo que sacaron todo lo relacionado a voxels\ny crearon un motor 3d mas tradicional.\n\n\n\n  Saludos,\n\n\n\n  Diego G. Ruiz\n\n\n\n  On Sun, 19 Oct 2003 02:36:05 -0300, Juan Linietsky wrote:\n  &gt; On Sunday 19 October 2003 01:05, Leonardo M. Falaschini wrote:\n  &gt;\n  &gt;&gt; Un poco de castellano para los analfabetos de la programaci�n,\n  &gt;&gt; por favor... Por que yo veo unos tipitos con pistolitas colgados\n  &gt;&gt; de unas sogas... no veo lo reolucionario (el que no sabe es como\n  &gt;&gt; el que no v�, dicen) ...\n  &gt;&gt;\n  &gt;&gt; Shal�,\n  &gt;&gt; Leo.\n  &gt;&gt;\n  &gt;\n  &gt; Ah, bajate el demo (ejecutable si podes).\n  &gt; Ok, paso a explicar (nota, intercambie un par de mails con Ken\n  &gt; Silverman, el autor, que fue muy gentil en explicarme varias dudas\n  &gt; que tenia sobre como esta implementado)\n  &gt;\n  &gt; Por suerte o desgracia de ustedes me operaron de un pie la semana\n  &gt; pasada y apenas puedo caminar, asi que voy a dedicar un buen rato\n  &gt; de esta noche de sabado que paso frente a la computadora a explicar\n  &gt; que es exactamente esto y porque es importante. Como quienes me\n  &gt; conocen saben que NO soy partidario de hacerme el facho usando\n  &gt; terminos muy tecnicos a menos que no quede otra.. Voy a tratar de\n  &gt; explicar esto de manera que me entiendan tanto programadores como\n  &gt; no programadores.\n  &gt;\n  &gt; Probablemente entienden la diferencia entre graficos vectoriales y\n  &gt; graficos pixelados.  Los vectoriales son aquellos graficos\n  &gt; independientes de resolucion, y que se pueden mostrar en cualquier\n  &gt; tamanio sin que pierdan detalle (Ejemplo, FLASH, o Painter). Los\n  &gt; graficos pixelados son aquellos compuestos por una cantidad finita\n  &gt; de elementos o pixeles, onda el photoshop, y los formatos de imagen\n  &gt; mas comunes. (gif, png, jpg, tga,etc) (Obviamente que una vez\n  &gt; procesados todos se transforman en pixeles, pero estamos halando de\n  &gt; como es la &quot;materia prima&quot;). Las placas aceleradoras 3D, y por lo\n  &gt; tanto los juegos funcionan todos con primtiivas vectoriales\n  &gt; llamadas &quot;poligonos&quot; donde todo es representado por figuras\n  &gt; geometricas ubicadas arbitrariamente en el espacio.\n  &gt;\n  &gt; Lo que esta nueva tecnologia que acabo de postear ahi arriba\n  &gt; representa es una tecnica para lograr crear mundos pixelados en 3D,\n  &gt; donde los pixeles pasan a ser &quot;cubos&quot;. Esto evidentemente no se\n  &gt; puede hacer tan facilmente como 2D por la simple razon de que no\n  &gt; dan los recursos. Imaginense si una imagen de 1024x1024, donde un\n  &gt; pixel son 2 bytes (16bits) ocupa: 1024^2*2=1MB lo mismo en 3D ocupa\n  &gt; 1024^3*2=1GB. Llejos de lo que puede procesar una maquina de hoy en\n  &gt; dia.\n  &gt;\n  &gt; Obviamente cabe tambien destacar las ventajas de esta tecnica,\n  &gt; porque sino no se estaria investigando. Ya que no existe el &quot;reuso&quot;\n  &gt; de texturas, y un voxel es de hecho una &quot;molecula&quot;, podemos decir\n  &gt; que el realismo de una escena es directamente proporcional al\n  &gt; tamanio de un voxel. Con esto se pueden lograr escenas (al menos\n  &gt; estaticas/pregeneradas por ahora) que simulen con mucho realismo a\n  &gt; sus contrapartes reales, y ademas facilitando tenicas como\n  &gt; caustics/shadows/photon mapping, etc.\n  &gt;\n  &gt; Evidentemente existen limitaciones de CPU. El renderizado de los\n  &gt; &quot;voxels&quot; se realiza de la siguiente manera. Se define una distancia\n  &gt; arbitraria desde el ojo del observador hasta la pantalla (esto se\n  &gt; llama &quot;znear&quot;). Ahora, recorriendo cada pixel de la pantalla,\n  &gt; trazamos una linea desde el ojo del observador pasando por ese\n  &gt; pixel, suiguendo en esa direccion recorremos el &quot;bitmap en 3D&quot;\n  &gt; HASTA que nos topamos con un voxel. Si nos topamos con uno, ponemos\n  &gt; el color del respectivo en el pixel correspondiente y seguimos con\n  &gt; el proximo.\n  &gt; Bueno, obviamente como se dan cuenta, esto implica muchisimo CPU\n  &gt; tambien.\n  &gt;\n  &gt;\n  &gt; Pero Ken Silverman le encontro la vuelta, y paso a explicar como:\n  &gt; (reitero, no me estoy mandando cualquiera, parte de este proceso me\n  &gt; lo explico el).\n  &gt;\n  &gt; -Podemos decir que es imposible ver a traves de los materiales\n  &gt; solidos, por lo tanto, aun si fueran huecos con un milimetro de\n  &gt; espesor, no notariamos la diferencia. Entonces, si dijeramos que\n  &gt; nuestras escenas y objetos son asi, habria muchisimo espacio libre.\n  &gt; Este espacio libre se puede comprimir usando una tecnica que se\n  &gt; llama &quot;RLE&quot; (run length encoding o algo asi), que dice &quot;ok, aca hay\n  &gt; 20 voxels libres, 1 ocupado con estos datos, y otros 20 libres&quot;.\n  &gt; Esto es mucho mas corto que decir &quot;libre, libre, libre, libre,\n  &gt; libre, libre (..) libre, ocupado, libre, libre, libre, etc&quot;. De\n  &gt; esta manera se ahorra memoria! Al parecer ken desarrollo una\n  &gt; tecnica que permite  leer los datos en este formato en tiempo real,\n  &gt; lo que le ahorra muchisima memoria. (obviamente no me explico como\n  &gt; es, asi que ya tienen un buen topic para research ;)\n  &gt;\n  &gt; -Aun asi, hacer raytracing en una matriz en 3 dimensiones es\n  &gt; horriblemente lento, imaginense que si cada voxel mide 5\n  &gt; centimetros, y queremos ver tan solo cien metros.. vamos a terminar\n  &gt; procesando 10mil voxels por cada pixel de la pantalla. Obviamente\n  &gt; esto es una brutalidad. Uno podria hablar de tecnicas de oclusion y\n  &gt; demas, pero hay una alternativa mas facil: Se puede tener el mundo\n  &gt; replicado varias veces, cada vez con la mitad de resolucion. Para\n  &gt; quienes estudiaron algoritmos y esas cosas, ya saben que esto\n  &gt; significa SOLO casi duplicar la memoria. Los mipmaps de una textura\n  &gt; en una placa 3D estan guardados de la misma forma.\n  &gt; Entonces, al ir recorriendo el mundo el rayo se va pasando de\n  &gt; &quot;resolucion&#39; a medida que se aleja del observador, ahorrando mucho\n  &gt; pero mucho cpu :)\n  &gt;\n  &gt; Bueno, esas vienen a ser las optimizaciones principales, pero aun\n  &gt; asi queda una mas..\n  &gt;\n  &gt; -En tecnicas de raytracing, compresion de imaganes y video (el\n  &gt; jpg/mpg creo que usaba algo como esta tecnica? corrijanme si me\n  &gt; equivoco) hay algo conocido como &quot;adaptative subsampling&quot;. Como\n  &gt; cada pixel se procesa de manera independiente y no necesita saber\n  &gt; lo que pasa con los vecinos, primero se procesa una imagen en menos\n  &gt; resolucion. Es decir, imaginense que la resolucion de la pantalla\n  &gt; es 640x480. Primero vamos a procesar los pixeles cual su ubicacion\n  &gt; es multiplo de 4 tanto en eje X como Y, la imagen se veria como\n  &gt; algo asi: .  .  .  .  .  .  .  .  .  . .  .  .  .  .  .  .  .  .  .\n  &gt; .  .  .  .  .  .  .  .  .  . .  .  .  .  .  .  .  .  .  .\n  &gt;\n  &gt; Fijense que queda como una grilla con celdas de 4x4 pixeles. Ahora,\n  &gt; en cada cuadradito de la grilla nos fijamos si en las esquinas el\n  &gt; color es muy pero muy parecido, si es asi, simplemente usamos un\n  &gt; &quot;gradiente/rampa de color&quot; para conectar a los cuatro y marcamos\n  &gt; ese cuadradito como que no se toca. Ok, ahora volvemos al paso uno,\n  &gt; y procesamos los pixeles que son multiplos de 2 tanto en eje X como\n  &gt; en Y y repetimos el proceso. ( Obviamente que si el pixel ya lo\n  &gt; procesamos antes o esta dentro de un cuadradito que &quot;no se toca&quot; no\n  &gt; lo volvemos a revisar).\n  &gt; Como se imaginaran hay mejoras a esta tecnica que incluyen tambien\n  &gt; renderizar el pixel en el medio de cada cuadradito, pero por ahora\n  &gt; no la quiero complicar.\n  &gt; De esta menra se obtienen imagenes de mucha nitidez con un ahorro\n  &gt; muy considerable de CPU.\n  &gt;\n  &gt; -Como habran visto el en demo, don Silverman pareciera que todavia\n  &gt; no empezo a trabajar en tecnicas para interpolar los voxels cuando\n  &gt; estan muy cerca de la camara, asi que se van a encontrar con\n  &gt; tamanios cuadradotes, pero definitivamente este es otro aspecto\n  &gt; interesante del area.\n  &gt;\n  &gt; -Tambien quiero aclarar que si esta tecnica es bien usada, se puede\n  &gt; llevar lo mas bien con la geometria actual, y mezclar esto con\n  &gt; poligonos es solo cuestion de compartir un Zbuffer.\n  &gt;\n  &gt; Bueno, fue un gusto poder compartir esto con ustedes, y espero que\n  &gt; les sea de alguna utilidad. En mi opinion esto puede llegar a ser\n  &gt; una verdadera revolucion si se logra llegar a correr en el hardware\n  &gt; 3D. Saludos a todos!\n  &gt;\n  &gt; Juan Linietsky - reduz / CODENIX.\n  &gt; --=-=\n  &gt; http://www.codenix.com\n  &gt;\n  &gt;\n  &gt; ADVA - Asociaci�n de Desarrolladores de Videojuegos Argentina.\n  &gt;\n  &gt;\n  &gt; www.adva.com.ar\n  &gt; -------------------------------------------------------.\n  &gt;\n  &gt;\n  &gt; Tu uso de Yahoo! Grupos est� sujeto a las Condiciones del servicio\n  &gt; de Yahoo!.\n\n\n\n\n\n  ADVA - Asociaci�n de Desarrolladores de Videojuegos Argentina.\n\n  www.adva.com.ar\n  -------------------------------------------------------.\n\n\n\n  Tu uso de Yahoo! Grupos est� sujeto a las Condiciones del servicio de\nYahoo!.\n\r\n------=_NextPart_000_0000_01C39836.F7981120\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 6.00.2800.1106&quot; name=3DGENERATOR&gt;\n&lt;STYLE type=3D=\r\ntext/css&gt;P {\n\tDISPLAY: block; FONT-SIZE: 10pt; MARGIN: 0in; COLOR: navy; FO=\r\nNT-FAMILY: &quot;Tahoma&quot;; TEXT-ALIGN: left\n}\nLI {\n\tMARGIN-TOP: 0in; DISPLAY: lis=\r\nt-item; FONT-SIZE: 0pt; MARGIN-BOTTOM: 0in; COLOR: black; FONT-FAMILY: &quot;Tah=\r\noma&quot;; TEXT-ALIGN: left\n}\nTD {\n\tDISPLAY: block; FONT-SIZE: 0pt; MARGIN-LEFT:=\r\n 0in; COLOR: black; MARGIN-RIGHT: 0in; FONT-FAMILY: &quot;Tahoma&quot;; TEXT-ALIGN: l=\r\neft\n}\nBODY {\n\t\n}\nP.WPT_N3 {\n\tDISPLAY: block; FONT-STYLE: italic\n}\n&lt;/STYLE&gt;\n=\r\n&lt;/HEAD&gt;\n&lt;BODY bgColor=3D#f0f0f0&gt;\n&lt;DIV&gt;&lt;SPAN class=3D560134403-22102003&gt;&lt;FON=\r\nT face=3DArial size=3D2&gt;Outcast usa voxels y \npolys para los personajes, y =\r\nalgo de sprites. Es uno de los juegos mas \ndivertidos y apasionantes que co=\r\nnozco aunque ya es bastante \nviejo.&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/DIV&gt;\n&lt;BLOCKQUOTE&gt;\n  &lt;DIV=\r\n class=3DOutlookMessageHeader dir=3Dltr align=3Dleft&gt;&lt;FONT face=3DTahoma \n =\r\n size=3D2&gt;-----Mensaje original-----&lt;BR&gt;&lt;B&gt;De:&lt;/B&gt; Diego G. Ruiz \n  [mailto=\r\n:diego@...]&lt;BR&gt;&lt;B&gt;Enviado el:&lt;/B&gt; Domingo, 19 de \n  Oct=\r\nubre de 2003 10:41 a.m.&lt;BR&gt;&lt;B&gt;Para:&lt;/B&gt; \n  JuegosAR@...&lt;BR&gt;&lt;=\r\nB&gt;Asunto:&lt;/B&gt; Re: [ADVA] Ok, explicacion de \n  como funciona.&lt;BR&gt;&lt;BR&gt;&lt;/FONT=\r\n&gt;&lt;/DIV&gt;\n  &lt;P&gt;&nbsp;&lt;/P&gt;\n  &lt;P&gt;&lt;SPAN style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;Existier=\r\non algunos juegos que \n  utilizaron esta t=E9cnica, entre ellos &quot;Delta Forc=\r\ne&quot; y &quot;Delta Force 2&quot;. En este \n  =FAltimo se mezclaron voxels con objetos h=\r\nechos de pol=EDgonos aprovechando la \n  aceleraci=F3n 3d del hardware (que =\r\nno exist=EDa en la primer versi=F3n).&lt;/SPAN&gt;&lt;/P&gt;\n  &lt;P&gt;&nbsp;&lt;/P&gt;\n  &lt;P class=\r\n=3DWPT_N3&gt;&lt;SPAN style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&quot;According to NovaLogic, \n =\r\n the ability to accelerate the game is due to their Voxel Space 32 engine; =\r\nLike \n  the original Delta Force, Delta Force 2 uses NovaLogic&#39;s Voxel Spac=\r\ne \n  technology for detailed terrain and extreme viewing distances - but it=\r\n will be \n  the first Voxel Space game to support 3D hardware. Novalogic&#39;s =\r\nVoxel Space \n  games have incorporated polygon-based objects - buildings, v=\r\nehicles, trees, \n  since the release of Comanche 3 in 1997, according to th=\r\ne company. But until \n  now, the company hasn&#39;t utilized 3D acceleration wi=\r\nthin a game. In Delta Force \n  2, players will be able to utilize 3D graphi=\r\ncs and keep the benefits of Voxel \n  technology. According to NovaLogic the=\r\n game will support 3D acceleration using \n  Direct3D, which will allow them=\r\n to do a myriad of things including support 32 \n  bit color.&quot;&lt;/SPAN&gt;&lt;/P&gt;\n  =\r\n&lt;P&gt;&nbsp;&lt;/P&gt;\n  &lt;P&gt;&lt;SPAN style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;Luego en una terce=\r\nra versi=F3n creo que \n  sacaron todo lo relacionado a voxels y crearon un =\r\nmotor 3d mas \n  tradicional.&lt;/SPAN&gt;&lt;/P&gt;\n  &lt;P&gt;&nbsp;&lt;/P&gt;\n  &lt;P&gt;&lt;SPAN style=3D=\r\n&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;Saludos,&lt;/SPAN&gt;&lt;/P&gt;\n  &lt;P&gt;&nbsp;&lt;/P&gt;\n  &lt;P&gt;&lt;SPAN styl=\r\ne=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;Diego G. Ruiz&lt;/SPAN&gt;&lt;/P&gt;\n  &lt;P&gt;&nbsp;&lt;/P&gt;\n  &lt;P&gt;&lt;=\r\nSPAN style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;On Sun, 19 Oct 2003 02:36:05 -0300, \n =\r\n Juan Linietsky wrote:&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&=\r\ngt;&nbsp;On Sunday 19 October 2003 01:05, \n  Leonardo M. Falaschini wrote:&lt;=\r\n/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D=\r\n&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;=\r\n&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;COLOR: maroon; FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&gt=\r\n;&nbsp;Un poco de \n  castellano para los analfabetos de la programaci=F3n,&lt;=\r\n/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D=\r\n&quot;COLOR: maroon; FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&gt;&nbsp;por favor... Por \n  qu=\r\ne yo veo unos tipitos con pistolitas colgados&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-=\r\nFAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;COLOR: maroon; FONT-FAMILY: =\r\n&#39;Tahoma&#39;&quot;&gt;&gt;&gt;&nbsp;de unas sogas... no \n  veo lo reolucionario (el que=\r\n no sabe es como&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;=\r\n&lt;SPAN \n  style=3D&quot;COLOR: maroon; FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&gt;&nbsp;el qu=\r\ne no v=E9, \n  dicen) ...&lt;/SPAN&gt;&lt;SPAN style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/=\r\nSPAN&gt;&lt;SPAN \n  style=3D&quot;COLOR: maroon; FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&gt;&lt;/SPAN=\r\n&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;COLO=\r\nR: maroon; FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&gt;&nbsp;Shal=FA,&lt;/SPAN&gt;&lt;SPAN \n  sty=\r\nle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;COLOR: maroon; FO=\r\nNT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&gt;&nbsp;Leo.&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY=\r\n: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;COLOR: maroon; FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPA=\r\nN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMI=\r\nLY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp=\r\n;Ah, bajate el demo (ejecutable si \n  podes).&lt;/SPAN&gt;&lt;SPAN style=3D&quot;FONT-FAM=\r\nILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbs=\r\np;Ok, paso a explicar (nota, intercambie \n  un par de mails con Ken&lt;/SPAN&gt;&lt;=\r\nSPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-F=\r\nAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Silverman, el autor, que fue muy \n  gentil en ex=\r\nplicarme varias dudas&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/=\r\nSPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;que tenia sobre com=\r\no esta \n  implementado)&lt;/SPAN&gt;&lt;SPAN style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/S=\r\nPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;F=\r\nONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&=\r\ngt;&nbsp;Por suerte o desgracia de ustedes me \n  operaron de un pie la sema=\r\nna&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;pasada y apenas puedo caminar, asi que=\r\n \n  voy a dedicar un buen rato&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma=\r\n&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;de esta no=\r\nche de sabado que paso \n  frente a la computadora a explicar&lt;/SPAN&gt;&lt;SPAN \n =\r\n style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: =\r\n&#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;que es exactamente esto y porque es \n  importante. Como=\r\n quienes me&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN=\r\n \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;conocen saben que NO soy part=\r\nidario de \n  hacerme el facho usando&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;=\r\nTahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;term=\r\ninos muy tecnicos a menos que no \n  quede otra.. Voy a tratar de&lt;/SPAN&gt;&lt;SPA=\r\nN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMI=\r\nLY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;explicar esto de manera que me \n  entiendan tanto p=\r\nrogramadores como&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN=\r\n&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;no programadores.&lt;/SPAN=\r\n&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT=\r\n-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;=\r\n&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Probablemente ent=\r\nienden la diferencia \n  entre graficos vectoriales y&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&gt;&nbsp;graficos pixelados.&nbsp;&nbsp;Los \n  vectoriales son aquello=\r\ns graficos&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN =\r\n\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;independientes de resolucion, =\r\ny que se \n  pueden mostrar en cualquier&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY=\r\n: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;t=\r\namanio sin que pierdan detalle \n  (Ejemplo, FLASH, o Painter). Los&lt;/SPAN&gt;&lt;S=\r\nPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FA=\r\nMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;graficos pixelados son aquellos \n  compuestos por=\r\n una cantidad finita&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/S=\r\nPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;de elementos o pixel=\r\nes, onda el \n  photoshop, y los formatos de imagen&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;=\r\nFONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;=\r\n&gt;&nbsp;mas comunes. (gif, png, jpg, tga,etc) \n  (Obviamente que una vez&lt;=\r\n/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D=\r\n&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;procesados todos se transforman en \n  pix=\r\neles, pero estamos halando de&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;=\r\n&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;como es la =\r\n&quot;materia prima&quot;). Las \n  placas aceleradoras 3D, y por lo&lt;/SPAN&gt;&lt;SPAN \n  st=\r\nyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Ta=\r\nhoma&#39;&quot;&gt;&gt;&nbsp;tanto los juegos funcionan todos con \n  primtiivas vectori=\r\nales&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  sty=\r\nle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;llamadas &quot;poligonos&quot; donde todo es \n=\r\n  representado por figuras&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;=\r\nBR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;geometricas ub=\r\nicadas arbitrariamente \n  en el espacio.&lt;/SPAN&gt;&lt;SPAN style=3D&quot;FONT-FAMILY: =\r\n&#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;S=\r\nPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FA=\r\nMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Lo que esta nueva tecnologia que acabo \n  de post=\r\near ahi arriba&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;S=\r\nPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;representa es una tecnica =\r\npara lograr \n  crear mundos pixelados en 3D,&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-F=\r\nAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&n=\r\nbsp;donde los pixeles pasan a ser &quot;cubos&quot;. \n  Esto evidentemente no se&lt;/SPA=\r\nN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FON=\r\nT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;puede hacer tan facilmente como 2D por \n  la =\r\nsimple razon de que no&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;=\r\n/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;dan los recursos. =\r\nImaginense si una \n  imagen de 1024x1024, donde un&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;=\r\nFONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;=\r\n&gt;&nbsp;pixel son 2 bytes (16bits) ocupa: \n  1024^2*2=3D1MB lo mismo en 3=\r\nD ocupa&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  =\r\nstyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;1024^3*2=3D1GB. Llejos de lo que =\r\npuede \n  procesar una maquina de hoy en&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY=\r\n: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;d=\r\nia.&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  styl=\r\ne=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Taho=\r\nma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Obviamen=\r\nte cabe tambien destacar las \n  ventajas de esta tecnica,&lt;/SPAN&gt;&lt;SPAN \n  st=\r\nyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Ta=\r\nhoma&#39;&quot;&gt;&gt;&nbsp;porque sino no se estaria \n  investigando. Ya que no exist=\r\ne el &quot;reuso&quot;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPA=\r\nN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;de texturas, y un voxel es d=\r\ne hecho \n  una &quot;molecula&quot;, podemos decir&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMIL=\r\nY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;=\r\nque el realismo de una escena es \n  directamente proporcional al&lt;/SPAN&gt;&lt;SPA=\r\nN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMI=\r\nLY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;tamanio de un voxel. Con esto se \n  pueden lograr e=\r\nscenas (al menos&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;=\r\n&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;estaticas/pregeneradas p=\r\nor ahora) que \n  simulen con mucho realismo a&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-=\r\nFAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&=\r\nnbsp;sus contrapartes reales, y ademas \n  facilitando tenicas como&lt;/SPAN&gt;&lt;S=\r\nPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FA=\r\nMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;caustics/shadows/photon mapping, \n  etc.&lt;/SPAN&gt;&lt;S=\r\nPAN style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMIL=\r\nY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN=\r\n&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Evidentemente existen l=\r\nimitaciones de \n  CPU. El renderizado de los&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-F=\r\nAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&n=\r\nbsp;&quot;voxels&quot; se realiza de la siguiente \n  manera. Se define una distancia&lt;=\r\n/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D=\r\n&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;arbitraria desde el ojo del observador \n =\r\n hasta la pantalla (esto se&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;=\r\n&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;llama &quot;znear&quot;=\r\n). Ahora, recorriendo \n  cada pixel de la pantalla,&lt;/SPAN&gt;&lt;SPAN \n  style=3D=\r\n&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;=\r\n&gt;&gt;&nbsp;trazamos una linea desde el ojo del \n  observador pasando por es=\r\ne&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;pixel, suiguendo en esa direccion \n  r=\r\necorremos el &quot;bitmap en 3D&quot;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;=\r\n&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;HASTA que nos=\r\n topamos con un voxel. Si \n  nos topamos con uno, ponemos&lt;/SPAN&gt;&lt;SPAN \n  st=\r\nyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Ta=\r\nhoma&#39;&quot;&gt;&gt;&nbsp;el color del respectivo en el pixel \n  correspondiente y s=\r\neguimos con&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN=\r\n \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;el proximo.&lt;/SPAN&gt;&lt;SPAN \n  st=\r\nyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Ta=\r\nhoma&#39;&quot;&gt;&gt;&nbsp;Bueno, obviamente como se dan cuenta, \n  esto implica much=\r\nisimo CPU&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n=\r\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;tambien.&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n =\r\n style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: =\r\n&#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Per=\r\no Ken Silverman le encontro la \n  vuelta, y paso a explicar como:&lt;/SPAN&gt;&lt;SP=\r\nAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAM=\r\nILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;(reitero, no me estoy mandando \n  cualquiera, part=\r\ne de este proceso me&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/S=\r\nPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;lo explico el).&lt;/SPA=\r\nN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FON=\r\nT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR=\r\n&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;-Podemos decir q=\r\nue es imposible ver a \n  traves de los materiales&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;F=\r\nONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&=\r\ngt;&nbsp;solidos, por lo tanto, aun si fueran \n  huecos con un milimetro de=\r\n&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;espesor, no notariamos la diferencia. =\r\n\n  Entonces, si dijeramos que&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;=\r\n&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;nuestras es=\r\ncenas y objetos son asi, \n  habria muchisimo espacio libre.&lt;/SPAN&gt;&lt;SPAN \n  =\r\nstyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;=\r\nTahoma&#39;&quot;&gt;&gt;&nbsp;Este espacio libre se puede comprimir \n  usando una tecn=\r\nica que se&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN =\r\n\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;llama &quot;RLE&quot; (run length encodi=\r\nng o \n  algo asi), que dice &quot;ok, aca hay&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMIL=\r\nY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;=\r\n20 voxels libres, 1 ocupado con estos \n  datos, y otros 20 libres&quot;.&lt;/SPAN&gt;&lt;=\r\nSPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-F=\r\nAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Esto es mucho mas corto que decir \n  &quot;libre, lib=\r\nre, libre, libre,&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN=\r\n&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;libre, libre (..) libre=\r\n, ocupado, \n  libre, libre, libre, etc&quot;. De&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FA=\r\nMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nb=\r\nsp;esta manera se ahorra memoria! Al \n  parecer ken desarrollo una&lt;/SPAN&gt;&lt;S=\r\nPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FA=\r\nMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;tecnica que permite&nbsp;&nbsp;leer \n  los datos =\r\nen este formato en tiempo real,&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;lo que le=\r\n ahorra muchisima memoria. \n  (obviamente no me explico como&lt;/SPAN&gt;&lt;SPAN \n =\r\n style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: =\r\n&#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;es, asi que ya tienen un buen topic \n  para research ;)=\r\n&lt;/SPAN&gt;&lt;SPAN style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;F=\r\nONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;=\r\nBR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;-Aun asi, hace=\r\nr raytracing en una \n  matriz en 3 dimensiones es&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;F=\r\nONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&=\r\ngt;&nbsp;horriblemente lento, imaginense que si \n  cada voxel mide 5&lt;/SPAN&gt;=\r\n&lt;SPAN style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAM=\r\nILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;centimetros, y queremos ver tan solo \n  cien metro=\r\ns.. vamos a terminar&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/S=\r\nPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;procesando 10mil vox=\r\nels por cada pixel \n  de la pantalla. Obviamente&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FO=\r\nNT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&g=\r\nt;&nbsp;esto es una brutalidad. Uno podria \n  hablar de tecnicas de oclusio=\r\nn y&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  styl=\r\ne=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;demas, pero hay una alternativa mas \n=\r\n  facil: Se puede tener el mundo&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Taho=\r\nma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;replicad=\r\no varias veces, cada vez con \n  la mitad de resolucion. Para&lt;/SPAN&gt;&lt;SPAN \n =\r\n style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: =\r\n&#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;quienes estudiaron algoritmos y esas \n  cosas, ya saben=\r\n que esto&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n=\r\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;significa SOLO casi duplicar la=\r\n \n  memoria. Los mipmaps de una textura&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY=\r\n: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;e=\r\nn una placa 3D estan guardados de la \n  misma forma.&lt;/SPAN&gt;&lt;SPAN style=3D&quot;F=\r\nONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&=\r\ngt;&nbsp;Entonces, al ir recorriendo el mundo \n  el rayo se va pasando de&lt;/=\r\nSPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;=\r\nFONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;&quot;resolucion&#39; a medida que se aleja del \n  =\r\nobservador, ahorrando mucho&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;=\r\n&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;pero mucho cp=\r\nu :)&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  sty=\r\nle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tah=\r\noma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Bueno, =\r\nesas vienen a ser las \n  optimizaciones principales, pero aun&lt;/SPAN&gt;&lt;SPAN \n=\r\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY:=\r\n &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;asi queda una mas..&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMIL=\r\nY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN=\r\n&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT=\r\n-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;-En tecnicas de raytracing, compresion \n  de i=\r\nmaganes y video (el&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SP=\r\nAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;jpg/mpg creo que usab=\r\na algo como esta \n  tecnica? corrijanme si me&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-=\r\nFAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&=\r\nnbsp;equivoco) hay algo conocido como \n  &quot;adaptative subsampling&quot;. Como&lt;/SP=\r\nAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FO=\r\nNT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;cada pixel se procesa de manera \n  independi=\r\nente y no necesita saber&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR=\r\n&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;lo que pasa con =\r\nlos vecinos, primero \n  se procesa una imagen en menos&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&gt;&nbsp;resolucion. Es decir, imaginense que \n  la resolucion de la p=\r\nantalla&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  =\r\nstyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;es 640x480. Primero vamos a proce=\r\nsar \n  los pixeles cual su ubicacion&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;=\r\nTahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;es m=\r\nultiplo de 4 tanto en eje X como \n  Y, la imagen se veria como&lt;/SPAN&gt;&lt;SPAN =\r\n\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY=\r\n: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;algo asi: \n  .&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.=\r\n&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbs=\r\np;. \n  .&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&n=\r\nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;=\r\nFONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;=\r\n&gt;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;=\r\n.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;. \n  .&nbsp;&nbsp;.&nbs=\r\np;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&nbsp;&nbsp;.&=\r\nnbsp;&nbsp;.&nbsp;&nbsp;.&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;B=\r\nR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&gt;&nbsp;Fijense que queda como una grilla con \n  celdas de 4x4 pixele=\r\ns. Ahora,&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n=\r\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;en cada cuadradito de la grilla=\r\n nos \n  fijamos si en las esquinas el&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: =\r\n&#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;col=\r\nor es muy pero muy parecido, si es \n  asi, simplemente usamos un&lt;/SPAN&gt;&lt;SPA=\r\nN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMI=\r\nLY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;&quot;gradiente/rampa de color&quot; para \n  conectar a los c=\r\nuatro y marcamos&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;=\r\n&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;ese cuadradito como que =\r\nno se toca. \n  Ok, ahora volvemos al paso uno,&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT=\r\n-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;=\r\n&nbsp;y procesamos los pixeles que son \n  multiplos de 2 tanto en eje X com=\r\no&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;en Y y repetimos el proceso. ( \n  Obvi=\r\namente que si el pixel ya lo&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;=\r\n&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;procesamos a=\r\nntes o esta dentro de un \n  cuadradito que &quot;no se toca&quot; no&lt;/SPAN&gt;&lt;SPAN \n  s=\r\ntyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;T=\r\nahoma&#39;&quot;&gt;&gt;&nbsp;lo volvemos a revisar).&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMI=\r\nLY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp=\r\n;Como se imaginaran hay mejoras a esta \n  tecnica que incluyen tambien&lt;/SPA=\r\nN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FON=\r\nT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;renderizar el pixel en el medio de \n  cada cu=\r\nadradito, pero por ahora&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR=\r\n&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;no la quiero com=\r\nplicar.&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  =\r\nstyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;De esta menra se obtienen imagene=\r\ns de \n  mucha nitidez con un ahorro&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;T=\r\nahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;muy c=\r\nonsiderable de CPU.&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SP=\r\nAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FO=\r\nNT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&g=\r\nt;&nbsp;-Como habran visto el en demo, don \n  Silverman pareciera que todav=\r\nia&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;no empezo a trabajar en tecnicas para =\r\n\n  interpolar los voxels cuando&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;estan muy=\r\n cerca de la camara, asi que \n  se van a encontrar con&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&gt;&nbsp;tamanios cuadradotes, pero \n  definitivamente este es otro as=\r\npecto&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  st=\r\nyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;interesante del area.&lt;/SPAN&gt;&lt;SPAN \n=\r\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY:=\r\n &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;=\r\nSPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;-Tambien quiero aclarar q=\r\nue si esta \n  tecnica es bien usada, se puede&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-=\r\nFAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&=\r\nnbsp;llevar lo mas bien con la geometria \n  actual, y mezclar esto con&lt;/SPA=\r\nN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FON=\r\nT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;poligonos es solo cuestion de \n  compartir un=\r\n Zbuffer.&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n=\r\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY:=\r\n &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Bu=\r\neno, fue un gusto poder compartir \n  esto con ustedes, y espero que&lt;/SPAN&gt;&lt;=\r\nSPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-F=\r\nAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;les sea de alguna utilidad. En mi \n  opinion est=\r\no puede llegar a ser&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/S=\r\nPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;una verdadera revolu=\r\ncion si se logra \n  llegar a correr en el hardware&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;=\r\nFONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;=\r\n&gt;&nbsp;3D. Saludos a todos!&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma=\r\n&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  =\r\nstyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;=\r\nTahoma&#39;&quot;&gt;&gt;&nbsp;Juan Linietsky - reduz / \n  CODENIX.&lt;/SPAN&gt;&lt;SPAN style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&gt;&nbsp;--=3D-=3D&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;=\r\n&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;&lt;A \n  href=3D&quot;htt=\r\np://www.codenix.com&quot;&gt;http://www.codenix.com&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FON=\r\nT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt=\r\n;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=\r\n=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahom=\r\na&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;ADVA - As=\r\nociaci=F3n de Desarrolladores \n  de Videojuegos Argentina.&lt;/SPAN&gt;&lt;SPAN \n  s=\r\ntyle=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;T=\r\nahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPA=\r\nN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMI=\r\nLY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp=\r\n;www.adva.com.ar&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;=\r\n&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;------------------------=\r\n-------------------------------.&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Taho=\r\nma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n=\r\n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY:=\r\n &#39;Tahoma&#39;&quot;&gt;&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;=\r\nSPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&gt;&nbsp;Tu uso de Yahoo! Grupos \n=\r\n  est=E1&nbsp;sujeto a las Condiciones del servicio&lt;/SPAN&gt;&lt;SPAN \n  style=3D=\r\n&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;=\r\n&gt;&gt;&nbsp;de Yahoo!.&lt;/SPAN&gt;&lt;SPAN \n  style=3D&quot;FONT-FAMILY: &#39;Tahoma&#39;&quot;&gt;&lt;BR&gt;&lt;B=\r\nR&gt;&lt;BR&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;BR&gt;&lt;TT&gt;ADVA - Asociaci=F3n \n  de Desarrolladores de Video=\r\njuegos \n  Argentina.&lt;BR&gt;&lt;BR&gt;www.adva.com.ar&lt;BR&gt;----------------------------=\r\n---------------------------.&lt;BR&gt;&lt;BR&gt;&lt;/TT&gt;&lt;BR&gt;&lt;BR&gt;&lt;TT&gt;Tu \n  uso de Yahoo! Gr=\r\nupos est=E1 sujeto a las &lt;A \n  href=3D&quot;http://ar.docs.yahoo.com/info/utos.h=\r\ntml&quot;&gt;Condiciones del servicio de \n  Yahoo!&lt;/A&gt;.&lt;/TT&gt; &lt;BR&gt;&lt;/BLOCKQUOTE&gt;&lt;/BOD=\r\nY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_0000_01C39836.F7981120--\r\n\n"}}