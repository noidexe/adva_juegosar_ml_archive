{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"WELCOME_MSG"}]},{"resourceType":"PHOTO","capabilities":[{"name":"READ"},{"name":"UPLOAD"},{"name":"UPLOADTEMP"}]},{"resourceType":"FILE","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"MEMBER","capabilities":[{"name":"READ"}]},{"resourceType":"LINK","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[{"name":"READ"},{"name":"READ_DATA"},{"name":"CREATE"}]},{"resourceType":"POLL","capabilities":[{"name":"READ"},{"name":"VOTE"},{"name":"CREATE"}]},{"resourceType":"MESSAGE","capabilities":[{"name":"CREATE"},{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[{"name":"READ"},{"name":"UPLOAD"}]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[{"name":"READ"}]},{"resourceType":"POST","capabilities":[{"name":"READ"},{"name":"CREATE"}]},{"resourceType":"PIN","capabilities":[{"name":"READ"},{"name":"CREATE"},{"name":"DELETE"},{"name":"UPDATE"}]}],"subStatus":"NORMAL","groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Santiago Germino","from":"&quot;Santiago Germino&quot; &lt;focaclota@...&gt;","replyTo":"LIST","senderId":"f9NbaSdmVGSKNmQJUpuj_2vEYfwzD10038dmezivOhvNStZuagLaxAy7q4qe8mzckmFRHfi5plV-UIgbQoLQAS35PaNQvI6UPlZSPPMs7w","spamInfo":{"isSpam":false,"reason":"0"},"subject":"RE: [JuegosAR] drivers nvidia","postDate":"986430363","msgId":941,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PEJFRUdMR1BBTkNPTkJIQU5KUEtLSUVJR0NBQUEuZm9jYWNsb3RhQHlhaG9vLmNvbT4=","inReplyToHeader":"PDAwMmQwMWMwYmQxMiQ4M2QyMWM2MCQ3NDAwYThjMEB3ZWJtYXJrZXRzLmNvbS5hcj4="},"prevInTopic":933,"nextInTopic":946,"prevInTime":940,"nextInTime":942,"topicId":919,"numMessagesInTopic":6,"msgSnippet":"Gracias. Respecto al bumpmapping, ni la menor idea. Tal vez en los docs del opengl sdk de nvidia encuentres algo de ayuda. Una pregunta, a tu engine le pensás","rawEmail":"Return-Path: &lt;focaclota@...&gt;\r\nX-Sender: focaclota@...\r\nX-Apparently-To: juegosar@yahoogroups.com\r\nReceived: (EGP: mail-7_1_1); 5 Apr 2001 00:22:48 -0000\r\nReceived: (qmail 80101 invoked from network); 5 Apr 2001 00:22:48 -0000\r\nReceived: from unknown (10.1.10.26) by l7.egroups.com with QMQP; 5 Apr 2001 00:22:48 -0000\r\nReceived: from unknown (HELO smtp017.mail.yahoo.com) (216.136.174.114) by mta1 with SMTP; 5 Apr 2001 00:22:48 -0000\r\nReceived: from unknown (HELO rcw2k) (200.43.28.201) by smtp.mail.vip.sc5.yahoo.com with SMTP; 5 Apr 2001 00:22:46 -0000\r\nX-Apparently-From: &lt;focaclota@...&gt;\r\nTo: &lt;JuegosAR@yahoogroups.com&gt;\r\nSubject: RE: [JuegosAR] drivers nvidia\r\nDate: Wed, 4 Apr 2001 21:26:03 -0300\r\nMessage-ID: &lt;BEEGLGPANCONBHANJPKKIEIGCAAA.focaclota@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative; boundary=&quot;----=_NextPart_000_0018_01C0BD4D.DA075920&quot;\r\nX-Priority: 3 (Normal)\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)\r\nX-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400\r\nImportance: Normal\r\nIn-Reply-To: &lt;002d01c0bd12$83d21c60$7400a8c0@...&gt;\r\nFrom: &quot;Santiago Germino&quot; &lt;focaclota@...&gt;\r\n\r\n\r\n------=_NextPart_000_0018_01C0BD4D.DA075920\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: 8bit\r\n\r\n  Gracias.\n  Respecto al bumpmapping, ni la menor idea. Tal vez en los docs del opengl\nsdk de nvidia encuentres algo de ayuda. Una pregunta, a tu engine le pens�s\nponer shaders o algo as�?\n\n  Si, a todos los objetos se les asigna un shader (en el editor), lo que\nhago es organizarlos de esta forma: primero por shader (&#39;forma&#39; en que se\ndibuja, por ej. bumpmapping+envmap, solo perpixel lighting, etc) despues\ndentro del shader, los organizo por textura usada en cada texture unit..\npara no tener que setear el shader/textura 1 vez por cada objeto..\n  quedaria algo asi:\n\n  [todos los objetos] --&gt;\n  1                               (1*)  --&gt; [shader1] --&gt; (2*) [textura1,\nt.u. 1]\n  2\n[textura1, t.u. 2]\n  3\n  4                                       --&gt; [shader2] --&gt;\n[textura1]..\n  5                                                    ...\n  6                                       --&gt; [shader(x)]\n  ...\n\n  1* El objeto se &#39;acomoda&#39; en el shader correspondiente para ser dibujado..\naca se configuran los glEnables, los\n      glTexGens, los nv_register_combiners y todo eso que es lento de\nsetear, y si el shader anterior ya tenia alguno\n      configurado, lo deja tal cual...\n  2* Se organizan los objetos de este shader de modo que el cambio de\ntextura se\n      realiza 1vez por cada textura usada en el shader, no por cada objeto\ndibujado.\n      (para no cambiar todo el tiempo de textura), todo esto para cada\ntexture unit.\n\n  Todo esto se renderiza en el orden que aparece a la izquierda.\n\n  Ok.. no se si esto es lo optimo, pero es lo que se me ocurre ahora, seguro\ndespues lo voy a opimizar\n  un poco mas.\n\n\n  _&gt; Santiago.\n\r\n------=_NextPart_000_0018_01C0BD4D.DA075920\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META content=3D&quot;text/html; charset=3Diso-8859-1&quot; http-equiv=3DContent-Typ=\r\ne&gt;\n&lt;META content=3D&quot;MSHTML 5.00.3103.1000&quot; name=3DGENERATOR&gt;\n&lt;STYLE&gt;&lt;/STYLE=\r\n&gt;\n&lt;/HEAD&gt;\n&lt;BODY bgColor=3D#ffffff&gt;\n&lt;BLOCKQUOTE&gt;\n  &lt;DIV align=3Dleft class=\r\n=3DOutlookMessageHeader dir=3Dltr&gt;&lt;FONT face=3DArial \n  size=3D2&gt;Gracias.&lt;/=\r\nFONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Respecto al bumpmapping, ni =\r\nla menor idea. Tal \n  vez en los docs del opengl sdk de nvidia encuentres a=\r\nlgo de ayuda. Una \n  pregunta, a tu engine le pens=E1s poner shaders o algo=\r\n as=ED?&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT face=\r\n=3DArial&gt;&lt;FONT color=3D#0000ff&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;&lt;FONT fa=\r\nce=3DVerdana&gt;Si,&nbsp;a todos los \n  objetos&nbsp;se les asigna un shader (=\r\nen el editor),&nbsp;lo que&nbsp;hago es \n  organizarlos&nbsp;de esta forma:=\r\n primero por shader (&#39;forma&#39; en que se dibuja, \n  por ej. bumpmapping+envma=\r\np, solo perpixel lighting, etc) despues&nbsp;dentro \n  del shader, los orga=\r\nnizo por textura usada en cada texture unit.. para no \n  tener que setear e=\r\nl shader/textura 1 vez por cada \n  objeto..&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FO=\r\nNT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT face=3DArial&gt;&lt;FONT color=3D#0000ff&gt;&lt;S=\r\nPAN \n  class=3D730154323-04042001&gt;&lt;FONT face=3DVerdana&gt;quedaria algo \n  asi=\r\n:&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT face=\r\n=3DArial&gt;&lt;FONT color=3D#0000ff&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;&lt;/SPAN&gt;&lt;=\r\n/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000f=\r\nf face=3DSystem&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;[todos los \n  objetos]&=\r\nnbsp;--&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  &lt;/S=\r\nPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff face=\r\n=3DSystem&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;1&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=\r\nnbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np;&nbsp;(1*)&nbsp; \n  --&gt; [shader1]&nbsp;--&gt; (2*) [textura1, t.u. \n1]=\r\n&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff fac=\r\ne=3DSystem&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;2&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;[textura1, \n  t.u. 2]&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  =\r\n&lt;DIV&gt;&lt;FONT color=3D#0000ff face=3DSystem size=3D2&gt;&lt;SPAN \n  class=3D73015432=\r\n3-04042001&gt;3&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000f=\r\nf face=3DSystem&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;4&nbsp;&nbsp;&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=\r\nnbsp;&nbsp;&nbsp;&nbsp; \n  &nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=3D2&gt;&lt;FONT =\r\ncolor=3D#0000ff face=3DSystem&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=\r\n&nbsp;&nbsp; \n  --&gt; [shader2] --&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  [t=\r\nextura1]..&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#=\r\n0000ff face=3DSystem&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;5&nbsp;&nbsp; \n  &=\r\nnbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=\r\nnbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  ...&lt;/SPAN=\r\n&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff face=3DSy=\r\nstem&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  &n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=\r\n;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  --&gt; [shader(x)]&lt;/SPAN&gt;&lt;/F=\r\nONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff face=3DArial&gt;=\r\n&lt;SPAN \n  class=3D730154323-04042001&gt;...&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;=\r\nFONT size=3D2&gt;&lt;FONT color=3D#0000ff face=3DArial&gt;&lt;SPAN \n  class=3D730154323=\r\n-04042001&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT col=\r\nor=3D#0000ff face=3DArial&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;1* El objeto =\r\nse &#39;acomoda&#39; en el shader \n  correspondiente para ser dibujado.. aca se&nbs=\r\np;configuran los glEnables, \n  los&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT =\r\nsize=3D2&gt;&lt;FONT color=3D#0000ff face=3DArial&gt;&lt;SPAN \n  class=3D730154323-0404=\r\n2001&gt;&nbsp;&nbsp;&nbsp; glTexGens,&nbsp;los \n  nv_register_combiners y todo=\r\n eso que es lento de setear, \n  y&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;FONT size=3D2&gt;&lt;FONT =\r\ncolor=3D#0000ff face=3DArial&gt;&lt;SPAN \n  class=3D730154323-04042001&gt; si el sha=\r\nder anterior ya tenia \n  alguno&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT siz=\r\ne=3D2&gt;&lt;FONT color=3D#0000ff face=3DArial&gt;&lt;SPAN \n  class=3D730154323-0404200=\r\n1&gt;&nbsp;&nbsp;&nbsp; configurado, lo deja tal \n  cual...&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FON=\r\nT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff face=3DArial&gt;&lt;SPAN \n  =\r\nclass=3D730154323-04042001&gt;2* Se organizan los objetos de este shader de mo=\r\ndo \n  que el cambio de textura se&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT s=\r\nize=3D2&gt;&lt;FONT color=3D#0000ff face=3DArial&gt;&lt;SPAN \n  class=3D730154323-04042=\r\n001&gt;&nbsp;&nbsp;&nbsp; realiza 1vez por cada textura \n  usada en el shader,=\r\n no por cada objeto dibujado.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=\r\n=3D2&gt;&lt;FONT color=3D#0000ff face=3DArial&gt;&lt;SPAN \n  class=3D730154323-04042001=\r\n&gt;&nbsp;&nbsp;&nbsp; (para no cambiar todo el tiempo de \n  textura), todo es=\r\nto para cada texture unit.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2=\r\n&gt;&lt;FONT color=3D#0000ff face=3DArial&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;&lt;/S=\r\nPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff =\r\nface=3DArial&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;Todo esto se renderiza en =\r\nel orden que aparece a la \n  izquierda.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&=\r\nnbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff face=3DVerdana&gt;&lt;SPA=\r\nN \n  class=3D730154323-04042001&gt;Ok.. no se si esto es lo optimo, pero es lo=\r\n que se me \n  ocurre ahora, seguro despues lo voy a opimizar&lt;/SPAN&gt;&lt;/FONT&gt;&lt;=\r\n/FONT&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#0000ff face=3DVerdana&gt;&lt;SP=\r\nAN \n  class=3D730154323-04042001&gt;un poco mas.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;\n  =\r\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT size=3D2&gt;&lt;FONT color=3D#=\r\n0000ff face=3DVerdana&gt;&lt;SPAN \n  class=3D730154323-04042001&gt;_&gt; \nSantiago.&lt;=\r\n/SPAN&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_0018_01C0BD4D.DA075920--\r\n\n"}}