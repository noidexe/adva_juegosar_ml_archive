{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":273812857,"authorName":"Juan Linietsky","from":"&quot;Juan Linietsky&quot; &lt;reduzio@...&gt;","profile":"reduzio","replyTo":"LIST","senderId":"oVX79cHsYkHhJyYjtVhnv-r-PyFmb_6CC-mMDwLqPhCPUknZm9xAzE6KoqpSLvM-zGbIfzInmRjEEjoAnoDcnjnrqxP3U4hunJDr","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Hacer un Motor 3D (rant)","postDate":"1171266635","msgId":1769,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDU4ZjIyOThkMDcwMjExMjM1MHExNzA5MzUxYWo5MWMzMmIyZGZhOGEyYzcxQG1haWwuZ21haWwuY29tPg=="},"prevInTopic":0,"nextInTopic":1770,"prevInTime":1768,"nextInTime":1770,"topicId":1769,"numMessagesInTopic":14,"msgSnippet":"Hace mucho que no mando un mail-rant a la lista... asi que voy a mandar uno :) Esta discusion la tuve con bastantes personas ya, asi que voy a hacer un especie","rawEmail":"Return-Path: &lt;reduzio@...&gt;\r\nX-Sender: reduzio@...\r\nX-Apparently-To: adva@...\r\nReceived: (qmail 51790 invoked from network); 12 Feb 2007 07:50:38 -0000\r\nReceived: from unknown (66.218.66.72)\n  by m27.grp.scd.yahoo.com with QMQP; 12 Feb 2007 07:50:38 -0000\r\nReceived: from unknown (HELO ug-out-1314.google.com) (66.249.92.172)\n  by mta14.grp.scd.yahoo.com with SMTP; 12 Feb 2007 07:50:38 -0000\r\nReceived: by ug-out-1314.google.com with SMTP id 71so418050ugh\n        for &lt;adva@...&gt;; Sun, 11 Feb 2007 23:50:36 -0800 (PST)\r\nReceived: by 10.78.192.20 with SMTP id p20mr2075355huf.1171266635905;\n        Sun, 11 Feb 2007 23:50:35 -0800 (PST)\r\nReceived: by 10.78.191.3 with HTTP; Sun, 11 Feb 2007 23:50:35 -0800 (PST)\r\nMessage-ID: &lt;58f2298d0702112350q1709351aj91c32b2dfa8a2c71@...&gt;\r\nDate: Mon, 12 Feb 2007 04:50:35 -0300\r\nTo: adva@...\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: &quot;Juan Linietsky&quot; &lt;reduzio@...&gt;\r\nSubject: Hacer un Motor 3D (rant)\r\nX-Yahoo-Group-Post: member; u=273812857; y=MLbPB5VcPFQOLZVAAl4pjoIDNBr7LPH-kPgtuygFhZRbrg\r\nX-Yahoo-Profile: reduzio\r\n\r\nHace mucho que no mando un mail-rant a la lista...\nasi que voy a mandar uno :)\nEsta discusion la tuve con bastantes personas ya, asi\nque voy a hacer un especie de resumen....\n\nComo introduccion, hace 10 anios que programo cosas\nen 3D, primero por hobby y luego un par de motores\n(cada uno un poco mas complejo que el anterior).\n\nLa discusion si licenciar un motor o hacerlo uno mismo\nla escuchamos todos un monton de veces...\n\nVoy a dar mi punto de vista respecto a ambos casos.\n\nPrimero a todo, hacer un &quot;motor 3D&quot; parece muy facil...\nPixel/Vertex shaders, tecnicas de iluminacion, stencil...\nesta todo muy bien documentado, lleno de ejemplos\n y con un poquito de conocimiento de algebra y\nprogramacion se puede implementar todo sin problemas.\n\nEl problema es que hacer un &quot;motor 3D&quot; y usar todas\nesas tecnicas nuevas que usan el motor unreal 3 y doom 3\nes que son solo el 2% de hacer un juego. Mas aun, la discusion\nsi Direct3D o OpenGL  me la froto por las nalgas, porque la parte\nde la implementacion de la api de rendering es un 10% de ese 2%,\ny se puede hacer en menos de una semana.\n\nEntonces, donde esta el problema? Voy a dar una lista\nde lo que encontre como problematico haciendo no solo motores 3D,\nsino motores 3D para juegos..\nde mas jodido a menos jodido!\n\n1-Armado y administracion de la escena\n\nEsto es lo mas dificil de hacer un motor para hacer juegos. lejos.\nCrear un sistema que pemita con facilidad crear personajes, lugares,\nenemigos, hacer que los recursos se reutilicen bien, como administrar\ny guardar esos recursos en disco.. como editarlos (hay que hacer\nherramientas) y como lograr que todo este sistema sea lo suficientemente\nflexible para poder hacer un game design interesante y poder ir plasmando\nlas ideas de gameplay que se ocurran durante el desarrollo.\nEsto ademas es lo que asesina a la mayoria de los proyectos, que cuando\nllegan a esta etapa, y pensaban que ya podian empezar a hacer el juego,\nse dan cuenta que les falta el 90% de todo.\n\n2-Scripting\n\nEl scripting hace mas facil la vida para programar el juego...\nEn teoria uno quiere hacer que el motor de juego sea robusto,\nelegante y flexible......\nPara despues hacer todo el harcodeo, chanchadas, y demas\ncosas inevitables en el lenguaje de scripting... en el cual\nes mas facil por su naturaleza.\nLa gran, gran pregunta es... donde termina el motor y donde\nempieza el scripting?\n\nAlgunos juegos, como el neverwinter nights, o los zeldas 3D\nestan todos hechos en scripting... mientras otros, como el\nno one lives forever, o el half life 2, son un tremendo chancherio de C++,\nsin scripting. (si, es increible no?)\n\nLenguajes interpretados como Lua o Python son muy rapidos\ny flexibles, y pueden hacerse cargo de todo lo no-critico del motor,\ny faclitar el desarrollo... por eso, decidir donde poner limite a C/C++\ny seguir con scripting es muy dificil.\n\n3-Fisica y Colision\n\nEsto es una mierda, y una mierda enserio. No hay papers, no hay info,\nno hay implementaciones de referencia. Cuando me puse a investigar\nesto, encontre que habia dos tipos de teoria, tutoriales, etc...\na) Tutoriales sencillos, colision esfera-esfera, esfera-convexo, caja caja..\nb) Tutoriales sobre fisica realista (onda havoc, ODE, etc)\n\nLo primero a) no sirve para mucho y b) es overkill.. ningun juego hace\nsu fisica 100% de esta forma.\n\nQuise hacer una colision contra BSP, generado de objetos exportados\nde un editor 3D me costo muchisimo. Si bien el Quake 3 tiene el codigo abierto,\nel BSP que usa el quake es muchisimo mas complejo que uno generico (usa brushes)\ny yo no queria llegar a tanto. Nadie en devmaster o gamedev me supo ayudar..\nya que todos abren niveles de quake y colisionan contra ellos... (lo\ncual es muy facil\nde hacer... lo dificil es generar el BSP) en vez de hacer todo el\nproceso (generar\nel bsp, optimizarlo y corregirlo para colision, y hacer los algoritmos\nde colision..\nde esto no hay info ni implementaciones de referencia para un BSP generico)\n\nY despues de la colision, todo el tema de correccion de trayectoria...\nbueno, un quilombo :)\n\n4-Pipeline grafico flexible\n\nSin siquiera llegar al render pipeline, me refiero a como administrar lo que vas\na mostrar y lo que no. Necesitas encontrar formas de ordenar\ntus objetos de forma que puedas hacerlo de forma optima. El problema aca\nno es la teoria, hay muchisimas tecnicas (octree/quadtree, potential\nvisibility sets,\nhierarchal Z buffer, BSPs con brushes, portales, etc) la verdadera dificultad\nes encontrar algo que funcione de forma balanceada, y funcione lo\nsuficientemente bien en todos los casos.. lo mas probable sea que haya\nque combinar varias de las tecnicas antes mencionadas. Aun eligiendo\nlas tecnicas mas adecuadas para el tipo de juego, hay que diseniar\nbien como representar todos los datos de la escena acorde a los algoritmos\nutilizados... (ejemplo... si se usa un arbol de escena.... pensar como meter\nportales o PVS en el arbol de escena... no es obvio :P )\n\n\n5-Formatos de Archivo\n\nEncontrar el tipo de formato de archivo que mas se adecue aun juego,\no que mas generico sea para el motor, pero a la vez flexible puede\nser muy dificil. En muchos casos hay que expandir el formato a medida\nque se desarrolla y tratar de no invalidar todo lo que se hizo antes.\nSi bien existen formatos extensibles como XML, son contraproducentes\npara guardar cosas como geometria, audio, imagenes, etc.\n\n6-Api de Rendering\n\nCreo que dentro de todo, hacer la api de rendering no es tan dificil..\nuna abstraccion para dibujar poligonos, habilitar los shaders, etc.\nNo hay muchas formas de hacerlo, asi que es bastante facil...\nsin embargo, la mayoria de los programadores que empiezan a\nprogramar soniando hacer su 3D engine, se enfocan demasiado\nen esto, y quieren hacer shaders que se vean lindos, efectos locos\ncon el stencil....  cuando realmente no hay mucha magia detras\nde esto, y esta muy bien documentado... para aquellos\nde ustedes que estan haciendo esto, tomen cosciencia! lean\ntodo lo de arriba, estan perdiendo el tiempo!!\n\n\nConclusiones\n-=-=-=-===-==\n\nHacer un motor 3D es mucho mas dificil de lo que parece, y las partes\nmas dificiles no se las suele pensar de antemano ni se conoce\nporque son tan dificiles. Esto hace que hacer un motor de\ncero, sin experiencia, sea muy peligroso.\n\nContras:\n\n-Hacer un motor 3D es un parto\n-Licenciar middleware es facil y no tan costoso\n-Lleva mucho tiempo\n\nPros:\n\n-Se aprende muchisimo haciendo un motor 3D, demasiado\n-Cuando uno usa middleware, corre el riesgo de terminar\nadaptando el disenio del  juego al middleware..\n-No todos los middlewares son muy completos, la mayoria de hecho\nestan bastante limitados a un tipo de juego.\n-Se puede experimentar, y descubrir nuevas maneras de hacer juegos\n\n\nSaludos!\n\njuan\n\n"}}