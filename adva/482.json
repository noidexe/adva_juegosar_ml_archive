{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":73871954,"authorName":"Nicolás Vinacur","from":"=?iso-8859-1?Q?Nicol=E1s_Vinacur?= &lt;nvinacur@...&gt;","profile":"gring0ar","replyTo":"LIST","senderId":"zmXzQsZG2kAHA-qi9fCSciMHyRdZ3SyggXC2qUWU_R8E9mnXa-CQkk7jGf2Q2wmRRaKEL-C-xLIX9vMD9Gjmzm3W4XAsFnAt2WPZHZhEw0UQntF33xPh-L0OY1UoaIxuoSle6w","spamInfo":{"isSpam":false,"reason":"12"},"subject":"diseño y arquitectura de frameworks","postDate":"1117696775","msgId":482,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMmUwMWM1Njc0MyQ2ZTNjNDMwMCQxNDAwYThjMEBkZWVwYmx1ZT4="},"prevInTopic":0,"nextInTopic":484,"prevInTime":481,"nextInTime":483,"topicId":482,"numMessagesInTopic":3,"msgSnippet":"Buen.. les tiro una cosa que estaba pensando, a ver que les parece.. Estuve viendo en la casa de un game developer muy conocido por todos nosotros, un libro","rawEmail":"Return-Path: &lt;nvinacur@...&gt;\r\nX-Sender: nvinacur@...\r\nX-Apparently-To: adva@...\r\nReceived: (qmail 10598 invoked from network); 2 Jun 2005 07:44:06 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m28.grp.scd.yahoo.com with QMQP; 2 Jun 2005 07:44:06 -0000\r\nReceived: from unknown (HELO avas-mr10.fibertel.com.ar) (24.232.0.223)\n  by mta2.grp.scd.yahoo.com with SMTP; 2 Jun 2005 07:44:05 -0000\r\nReceived: from 71-228-126-200.fibertel.com.ar ([200.126.228.71]:49159 &quot;EHLO\n\tdeepblue&quot; smtp-auth: &quot;nvinacur&quot;) by avas-mr10.fibertel.com.ar\n\twith ESMTP id S147512AbVFBHT3; Thu, 2 Jun 2005 04:19:29 -0300\r\nX-Comment: RFC 2476 MSA function at avas-mr10.fibertel.com.ar logged sender identity as: nvinacur\r\nMessage-ID: &lt;002e01c56743$6e3c4300$1400a8c0@deepblue&gt;\r\nTo: &lt;adva@...&gt;\r\nDate:\tThu, 2 Jun 2005 04:19:35 -0300\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_002B_01C5672A.48C8E560&quot;\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2900.2180\r\nX-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2900.2180\r\nX-Fib-Al-Info: Al\r\nX-Fib-Al-MRId: 034bad644a95bdce218ced75cff56532\r\nX-Fib-Al-From: nvinacur@...\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: =?iso-8859-1?Q?Nicol=E1s_Vinacur?= &lt;nvinacur@...&gt;\r\nSubject: =?iso-8859-1?Q?dise=F1o_y_arquitectura_de_frameworks?=\r\nX-Yahoo-Group-Post: member; u=73871954; y=RyX8mq7hieeUKvTSMnLm-95lsuU1bp8QJdlpqc44guyb3T4\r\nX-Yahoo-Profile: gring0ar\r\n\r\n\r\n------=_NextPart_000_002B_01C5672A.48C8E560\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nBuen.. les tiro una cosa que estaba pensando, a ver que les parece.. Estuve=\r\n viendo en la casa de un game developer muy conocido por todos nosotros, un=\r\n libro sobre Div 2. Resulta que el div 2 tiene un paradigma completamente d=\r\nistinto. En general, cualquier engine 3d tiene, para cada objeto, un funcio=\r\nn Update(). Dentro del gameloop, aparte de otras cosas se hace algo como &#39;p=\r\nara cada objeto: Update() &#39;. Ademas, despues de eso, se hara el DrawScreen(=\r\n). \n\n    Entonces, la cuestion es, para los que no conocen el Div2, que cad=\r\na objeto tiene su funcion &#39;update&#39; o algo por el estilo (no indague mucho p=\r\nero era algo asi), la cuestion es que no se corta cuando se corta la funcio=\r\nn, sino que cuando se tiene que mostrar el frame de ese objeto, se llama a =\r\nuna funcion frame, que lo que hace es cortar la ejecucion, y asi con todos =\r\nlos objetos y despues sigue corriendo DESDE DONDE HABIA CORTADO, y no desde=\r\n el principio de la funcion.\n\n    El resultado de este &quot;paradigma&quot; es que p=\r\nara hacer los distintos movimientos de los objetos, no se tiene que hacer g=\r\nigantescas maquinas de estados para poder dibujar lo que se necesite y deja=\r\nr las variables listas para cuando la rutina o el objeto que dibuje dibujen=\r\n, sino que se llama desde ahi nomas, y se sigue ejecutando. Entonces, facil=\r\nita muchisimo la programacion de juegos.\n\n    Entonces, empece a pensar.. m=\r\nierda si esto hace que todo este tan bueno, no se puede meter asi en C++? E=\r\nntonces la cuestion es que si pones por ejemplo los objetos tengan una func=\r\nion frame() y funcione como en div, entonces se meteria frame sobre la pila=\r\n, y despues volveria, y en todo caso despues bajaria y deberia finalizar la=\r\n ejecucion de la funcion entera y despues actualizar el siguiente. La bola =\r\nviene de que lo que pense es que se podria hacer algo asi como que frame() =\r\nsea un puntero al update del siguiente objeto en la lista, y el ultimo fram=\r\ne() dibuje la pantalla entonces despues se seguiria ejecutando todo... es h=\r\norrible en forma paradigmatica estructural, pero puede andar.. y ademas pue=\r\nde hacer que se pueda programar juegos completamente mas facil, aunque sea =\r\nhorrible teoricamente.. parece re util,. que opinan?\r\n------=_NextPart_000_002B_01C5672A.48C8E560\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 6.00.2900.2627&quot; name=3DGENERATOR&gt;\n&lt;STYLE&gt;&lt;/STYLE=\r\n&gt;\n&lt;/HEAD&gt;\n&lt;BODY bgColor=3D#ffffff&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Buen.. =\r\nles tiro una cosa que estaba pensando, a ver \nque les parece.. Estuve viend=\r\no en la casa&nbsp;de un game developer muy conocido \npor todos nosotros, un=\r\n libro sobre Div 2. Resulta que el div 2 tiene un \nparadigma completamente =\r\ndistinto. En general, cualquier engine 3d tiene, para \ncada objeto, un func=\r\nion Update(). Dentro del gameloop, aparte de otras cosas se \nhace algo como=\r\n &#39;para cada objeto: Update() &#39;. Ademas, despues de eso, se hara el \nDrawScr=\r\neen(). &lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;=\r\nDIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; Entonces, la cuestion es=\r\n, para \nlos que no conocen el Div2, que cada objeto tiene su funcion &#39;updat=\r\ne&#39; o algo por \nel estilo (no indague mucho pero era algo asi), la cuestion =\r\nes que no se corta \ncuando se corta la funcion, sino que cuando se tiene qu=\r\ne mostrar el frame de ese \nobjeto, se llama a una funcion frame, que lo que=\r\n hace es cortar la ejecucion, y \nasi con todos los objetos y despues sigue =\r\ncorriendo DESDE DONDE HABIA CORTADO, y \nno desde el principio de la funcion=\r\n.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;F=\r\nONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; El resultado de este &quot;paradigm=\r\na&quot; \nes que para hacer los distintos movimientos de los objetos, no se tiene=\r\n que \nhacer gigantescas maquinas de estados para poder dibujar lo que se ne=\r\ncesite y \ndejar las variables listas para cuando la rutina o el objeto que =\r\ndibuje dibujen, \nsino que se llama desde ahi nomas, y se sigue ejecutando. =\r\nEntonces, facilita \nmuchisimo la programacion de juegos.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;=\r\n&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial siz=\r\ne=3D2&gt;&nbsp;&nbsp;&nbsp; Entonces, empece a pensar.. \nmierda si esto hace q=\r\nue todo este tan bueno, no se puede meter asi en C++? \nEntonces la cuestion=\r\n es que si pones por ejemplo los objetos tengan una \nfuncion&nbsp;frame() y=\r\n funcione como en div, entonces se meteria frame sobre la \npila, y despues =\r\nvolveria, y en todo caso despues bajaria y deberia finalizar la \nejecucion =\r\nde la funcion entera y despues actualizar el siguiente. La bola viene \nde q=\r\nue lo que pense es que se podria hacer algo asi como que frame() sea un \npu=\r\nntero al update del siguiente objeto en la lista, y el ultimo frame() dibuj=\r\ne \nla pantalla entonces despues se seguiria ejecutando todo... es horrible =\r\nen forma \nparadigmatica estructural, pero puede andar.. y ademas puede hace=\r\nr que se pueda \nprogramar juegos completamente mas facil, aunque sea horrib=\r\nle teoricamente.. \nparece re util,. que opinan?&lt;/FONT&gt;&lt;/DIV&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_002B_01C5672A.48C8E560--\r\n\n"}}