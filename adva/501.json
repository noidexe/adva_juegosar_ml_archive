{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":73871954,"authorName":"Nicolás Vinacur","from":"=?iso-8859-1?Q?Nicol=E1s_Vinacur?= &lt;nvinacur@...&gt;","profile":"gring0ar","replyTo":"LIST","senderId":"QdgvsjTPGFeGO7GAQn_EJC9BNsRipLIv-aQth5BthG6MjdoloiUAXT1LzrZiIvFaxQTy65X2wTdnmIdTALISL18Ex8uKoXsD6hA27Dz8pLfOi2NJEh_tlPrRXVUMuzqG7wqjfQ","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [adva] diseño y arquitectura de frameworks","postDate":"1117825832","msgId":501,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAwMzkwMWM1Njg2ZiRlYTIwOTZiMCQxNDAwYThjMEBkZWVwYmx1ZT4=","referencesHeader":"PDIwMDUwNjAyMTIyMDM5LjI3Nzg2LnFtYWlsQHdlYjU0MDA0Lm1haWwueWFob28uY29tPg=="},"prevInTopic":483,"nextInTopic":511,"prevInTime":500,"nextInTime":502,"topicId":483,"numMessagesInTopic":16,"msgSnippet":"No estoy seguro de haber entendido bien, voy a responder por casos. 1. No se bien si se llama automaticamente o no, ademas de llamarse por medio de frame ,","rawEmail":"Return-Path: &lt;nvinacur@...&gt;\r\nX-Sender: nvinacur@...\r\nX-Apparently-To: adva@...\r\nReceived: (qmail 83904 invoked from network); 3 Jun 2005 19:12:13 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m24.grp.scd.yahoo.com with QMQP; 3 Jun 2005 19:12:13 -0000\r\nReceived: from unknown (HELO avas-mr02.fibertel.com.ar) (24.232.0.215)\n  by mta2.grp.scd.yahoo.com with SMTP; 3 Jun 2005 19:12:12 -0000\r\nReceived: from 71-228-126-200.fibertel.com.ar ([200.126.228.71]:28165 &quot;EHLO\n\tdeepblue&quot; smtp-auth: &quot;nvinacur&quot;) by avas-mr02.fibertel.com.ar\n\twith ESMTP id S1245231AbVFCTKe; Fri, 3 Jun 2005 16:10:34 -0300\r\nX-Comment: RFC 2476 MSA function at avas-mr02.fibertel.com.ar logged sender identity as: nvinacur\r\nMessage-ID: &lt;003901c5686f$ea2096b0$1400a8c0@deepblue&gt;\r\nTo: &lt;adva@...&gt;\r\nReferences: &lt;20050602122039.27786.qmail@...&gt;\r\nDate:\tFri, 3 Jun 2005 16:10:32 -0300\r\nMIME-Version: 1.0\r\nContent-Type: multipart/alternative;\n\tboundary=&quot;----=_NextPart_000_0036_01C56856.C4A60D20&quot;\r\nX-Priority: 3\r\nX-MSMail-Priority: Normal\r\nX-Mailer: Microsoft Outlook Express 6.00.2900.2180\r\nX-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2900.2180\r\nX-Fib-Al-Info: Al\r\nX-Fib-Al-MRId: faee36d11cc967674e5944bb49f951cc\r\nX-Fib-Al-From: nvinacur@...\r\nX-eGroups-Msg-Info: 1:12:0\r\nFrom: =?iso-8859-1?Q?Nicol=E1s_Vinacur?= &lt;nvinacur@...&gt;\r\nSubject: =?iso-8859-1?Q?Re:_=5Badva=5D_dise=F1o_y_arquitectura_de_frameworks?=\r\nX-Yahoo-Group-Post: member; u=73871954; y=bzRQnCQWN1fblJg2Jxd9MMMg95piCdnYwa_DNuPDtanL7Lc\r\nX-Yahoo-Profile: gring0ar\r\n\r\n\r\n------=_NextPart_000_0036_01C56856.C4A60D20\r\nContent-Type: text/plain;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\nNo estoy seguro de haber entendido bien, voy a responder por casos.\n\n1. No =\r\nse bien si se llama automaticamente o no, ademas de llamarse por medio de &#39;=\r\nframe&#39;, supongamos que no, para facilitar las cosas. Y ademas, yo lo que pi=\r\nenso es un unico thread, da la impresion de que sea asi porque cada funcion=\r\n se llama process si mal no recuerdo, pero no tienen por que ser distinto p=\r\nroyecto, mientras todos hagan su update una vez por cada frame, el orden en=\r\n que lo hagan no &#39;deberia&#39; importar.\n\n2. Si, este es el chiste, a ver que p=\r\nasa aca.\n2.1. Esto es lo que no termino de entender bien lo que queres deci=\r\nr, la idea es que se actualice hasta frame una vez por ciclo de dibujo.\n\n2.=\r\n2 Aca esta la joda, si vos lo mandas a una cola de &#39;listo para dibujar&#39; cua=\r\nndo se termine de encolar, sigue ejecutando esa misma funcion. Entonces lle=\r\ngara otro momento que vuelve a a pasar por &#39;listo para dibujar&#39; y sin que s=\r\ne haya dibujado el anterior... La idea que yo decia es completamente distin=\r\nta.\n\nPor ejemplo, pensa en lo siguiente:\n\nSupongamos que quiero hacer un ti=\r\npo que camine, que tiene 3 frames para caminar, y que en cada frame se desp=\r\nlaza 50 pixels, ademas, dependiendo del estado, este tipo puede estar hacie=\r\nndo otra cosa... pero hay que actualizar el frame... logicamente, esto seri=\r\na lago asi\n\n\nTipito::Update()\n{\n    switch (m_state)\n    {\n        case CAM=\r\nINANDO:\n            m_x +=3D 50;\n            m_frame++;\n            if (m_f=\r\nrame &gt; 3)\n                m_frame =3D 0;\n            break;\n         case S=\r\nALTANDO:\n            ...\n       }\n}\n\nAhora, pensemoslo asi\n\nTipito::Update(=\r\n)\n{\n    switch (m_state) /// esto me quedo d antes... pero no me acuerdo co=\r\nmo, habia algo loco que hacia que no tengas que poner un switch por cada es=\r\ntado,m pero me olvide :)\n        case CAMINANDO:\n            m_frame =3D 0;=\r\n\n            m_x +=3D 50;\n           frame();\n            m_frame++;\n      =\r\n      m_x +=3D 50;\n            frame();\n            m_frame++;\n            =\r\nm_x +=3D 50;\n            frame();\n}\n\nBueno, lo estoy mirando esto y no tien=\r\ne mucho sentido por si el usuario interrumpe la animacion de caminar antes =\r\nque se muestren los frames.. aparte el switch, la verdad nunca programe nad=\r\na en div... habria que fijarse, pero la idea creo que era que dea alguna fo=\r\nrma no tenia el switch y directamente uno trabajaba como si fuera todo un m=\r\nismo caso... Ademas pensa que el frame() seria algo asi tipo el doevents de=\r\n visual basic, entonces actualizaria ahi mismo los inputs.\n\nLa joda aca es =\r\nque cuando uno llama a frame() se corta la ejecucion y se dibuja, y recien =\r\nse reanuda, desde ese mismo punto donde corto, en el siguiente ciclo de dib=\r\nujo.\n\nEsto es a lo que me refiero, algun iluminado de div que diga si lo qu=\r\ne digo yo es cualquiera que no hace falta poner switch por estados o algo a=\r\nsi, o como es que div facilita las cosas para programar.. basicamente mi id=\r\nea es proveer la interfaz de div sobre C++.\n\n  ----- Original Message -----=\r\n \n  From: Maverick Thunder \n  To: adva@... \n  Sent: Thursday=\r\n, June 02, 2005 9:20 AM\n  Subject: Re: [adva] dise=F1o y arquitectura de fr=\r\nameworks\n\n\n  Nicol=E1s:\n\n  Hay ciertas cosas que no entiendo, bas=E1ndome e=\r\nn tu explicaci=F3n, y tambi=E9n se me empiezan a crear ramificaciones:\n\n  C=\r\naso 1: El DIV llama a la funci=F3n &quot;frame&quot; si existe en el objeto en forma =\r\nautom=E1tica. Esto me hace suponer que usa un thread aparte para dibujar lo=\r\ns objetos, pero eso implicar=EDa usar rutinas de sincronismo entre threads =\r\nlo cual le har=EDa perder velocidad al c=F3digo.\n\n  Caso 2: El programador =\r\nllama a la funci=F3n &quot;frame&quot; en cualquier parte del c=F3digo. Entonces podr=\r\n=EDa tener:\n\n  Caso 2.1: Se dibuja el frame cuando se llama a la funci=F3n.=\r\n Aqui no le veo mucho la diferencia entre hacerlo en cualquier parte del c=\r\n=F3digo. Lo =FAnico es que si cada vez llamo a una funci=F3n que por ej. me=\r\n actualice la posici=F3n del sprite y luego llamo al frame me podr=EDa lleg=\r\nar a tirar los FPS abajo (dependiendo la velocidad de la m=E1quina y los ob=\r\njetos que dibujo). Tambi=E9n si el refresco vertical es de 60Hz, como que n=\r\no tiene mucho sentido andar perdiendo el tiempo dibujando 120 cuadros.\n\n  C=\r\naso 2.2: Al llamar a la funci=F3n frame, el objeto se coloca en una lista d=\r\ne &quot;objetos a dibujar&quot;, guardando la informaci=F3n de posici=F3n actual, tam=\r\na=F1o y bla bla. Esto \n  implicar=EDa la creaci=F3n de una lista din=E1mica=\r\n, con la consiguiente perdida de tiempo de ejecuci=F3n y memoria. Una vez h=\r\nice algo as=ED para mostrar los objetos en pantalla y sinceramente no gan=\r\n=E9 nada.\n\n  Lo que puse son casos que me salieron a la luz cuando vi tu ma=\r\nil. Obvio que pueden haber m=E1s casos favorables o que no lo sean.\n\n  Yo p=\r\nor ej. uso, llam=E9mosle el paradigma del D.O.S., programaci=F3n recontra l=\r\nineal bajo Windows y si ej. hago un malloc y no hay memoria, directamente l=\r\nlamo al exit() sin andar perdiendo el tiempo de devolver un c=F3digo de err=\r\nor que la funci=F3n padre chequea entonces devuelve el c=F3digo de error as=\r\ni hasta llegar al main para que te muestre un cartel &quot;no hay memoria sufici=\r\nente&quot;. Me ahorro un mont=F3n de c=F3digo al cohete y el programa es mas leg=\r\nible. Obvio que tomo los recaudos necesarios para que cuando llamo al exit(=\r\n), los objetos de DirectX entre otros se destruyan en forma adecuada y no m=\r\ne quede un leak en memoria.\n\n  Y por =FAltimo, cada uno deber=EDa programar=\r\n a como m=E1s se le antoja y dejarse de joder con el extremismo de la progr=\r\namaci=F3n estructurada, orientada a objetos o asi o as=E1\n\n  Saludos, Mauro=\r\n,\n  Caim=E1n Co.\n\n  Nicol=E1s Vinacur &lt;nvinacur@...&gt; escribi=F3=\r\n:\n    Buen.. les tiro una cosa que estaba pensando, a ver que les parece.. =\r\nEstuve viendo en la casa de un game developer muy conocido por todos nosotr=\r\nos, un libro sobre Div 2. Resulta que el div 2 tiene un paradigma completam=\r\nente distinto. En general, cualquier engine 3d tiene, para cada objeto, un =\r\nfuncion Update(). Dentro del gameloop, aparte de otras cosas se hace algo c=\r\nomo &#39;para cada objeto: Update() &#39;. Ademas, despues de eso, se hara el DrawS=\r\ncreen(). \n\n        Entonces, la cuestion es, para los que no conocen el Div=\r\n2, que cada objeto tiene su funcion &#39;update&#39; o algo por el estilo (no indag=\r\nue mucho pero era algo asi), la cuestion es que no se corta cuando se corta=\r\n la funcion, sino que cuando se tiene que mostrar el frame de ese objeto, s=\r\ne llama a una funcion frame, que lo que hace es cortar la ejecucion, y asi =\r\ncon todos los objetos y despues sigue corriendo DESDE DONDE HABIA CORTADO, =\r\ny no desde el principio de la funcion.\n\n        El resultado de este &quot;parad=\r\nigma&quot; es que para hacer los distintos movimientos de los objetos, no se tie=\r\nne que hacer gigantescas maquinas de estados para poder dibujar lo que se n=\r\necesite y dejar las variables listas para cuando la rutina o el objeto que =\r\ndibuje dibujen, sino que se llama desde ahi nomas, y se sigue ejecutando. E=\r\nntonces, facilita muchisimo la programacion de juegos.\n\n        Entonces, e=\r\nmpece a pensar.. mierda si esto hace que todo este tan bueno, no se puede m=\r\neter asi en C++? Entonces la cuestion es que si pones por ejemplo los objet=\r\nos tengan una funcion frame() y funcione como en div, entonces se meteria f=\r\nrame sobre la pila, y despues volveria, y en todo caso despues bajaria y de=\r\nberia finalizar la ejecucion de la funcion entera y despues actualizar el s=\r\niguiente. La bola viene de que lo que pense es que se podria hacer algo asi=\r\n como que frame() sea un puntero al update del siguiente objeto en la lista=\r\n, y el ultimo frame() dibuje la pantalla entonces despues se seguiria ejecu=\r\ntando todo... es horrible en forma paradigmatica estructural, pero puede an=\r\ndar.. y ademas puede hacer que se pueda programar juegos completamente mas =\r\nfacil, aunque sea horrible teoricamente.. parece re util,. que opinan?\n\n\n--=\r\n---------------------------------------------------------------------------=\r\n-\n  A tu celular =BFno le falta algo?\n  Us=E1 Yahoo! Messenger y Correo Yah=\r\noo! en tu tel=E9fono celular.\n  M=E1s informaci=F3n aqu=ED. \n\n-------------=\r\n-----------------------------------------------------------------\n  Enlaces=\r\n de Yahoo! Grupos\n\n    a.. Para visitar el sitio web del grupo, and=E1 a:\n =\r\n   http://ar.groups.yahoo.com/group/adva/\n      \n    b.. Para cancelar tu s=\r\nuscripci=F3n a este grupo, envi=E1 un mensaje a:\n    adva-unsubscribe@grupo=\r\nsyahoo.com.ar\n      \n    c.. El uso de Yahoo! Grupos est=E1 sujeto a las Co=\r\nndiciones del servicio de Yahoo!. \n\n\r\n------=_NextPart_000_0036_01C56856.C4A60D20\r\nContent-Type: text/html;\n\tcharset=&quot;iso-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\n\r\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;\n&lt;HTML&gt;&lt;HEAD&gt;=\r\n\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=3Diso-8859-1=\r\n&quot;&gt;\n&lt;META content=3D&quot;MSHTML 6.00.2900.2627&quot; name=3DGENERATOR&gt;&lt;/HEAD&gt;\n&lt;BODY b=\r\ngColor=3D#ffffff&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;No estoy seguro de haber=\r\n entendido bien, voy a \nresponder por casos.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;1. N=\r\no se bien si se llama automaticamente o no, \nademas de llamarse por medio d=\r\ne &#39;frame&#39;, supongamos que no, para facilitar las \ncosas. Y ademas, yo lo qu=\r\ne pienso es un unico thread, da la impresion de que sea \nasi porque cada fu=\r\nncion se llama process si mal no recuerdo, pero no tienen por \nque ser dist=\r\ninto proyecto, mientras todos hagan su update una vez por cada \nframe, el o=\r\nrden en que lo hagan no &#39;deberia&#39; importar.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3D=\r\nArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;2. Si, =\r\neste es el chiste, a ver que pasa \naca.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DAria=\r\nl size=3D2&gt;2.1. Esto es lo que no termino de entender bien lo \nque queres d=\r\necir, la idea es que se actualice hasta frame una vez por ciclo de \ndibujo.=\r\n&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FO=\r\nNT face=3DArial size=3D2&gt;2.2 Aca esta la joda, si vos lo mandas a una cola =\r\n\nde &#39;listo para dibujar&#39; cuando se termine de encolar, sigue ejecutando esa=\r\n misma \nfuncion. Entonces llegara otro momento que vuelve a a pasar por &#39;li=\r\nsto para \ndibujar&#39; y sin que se haya dibujado el anterior... La idea que yo=\r\n decia es \ncompletamente distinta.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial siz=\r\ne=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Por ejemplo, pen=\r\nsa en lo siguiente:&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&n=\r\nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Supongamos que quiero hacer un =\r\ntipo que camine, que \ntiene 3 frames para caminar, y que en cada frame se d=\r\nesplaza 50 pixels, ademas, \ndependiendo del estado, este tipo puede estar h=\r\naciendo otra cosa... pero hay que \nactualizar el frame... logicamente, esto=\r\n seria lago asi&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;=\r\n&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;Tipito::Update()&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial siz=\r\ne=3D2&gt;{&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; sw=\r\nitch (m_state)&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&n=\r\nbsp; {&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nb=\r\nsp;&nbsp;&nbsp; case \nCAMINANDO:&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial \nsize=\r\n=3D2&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=\r\np;m_&lt;/FONT&gt;&lt;FONT \nface=3DArial size=3D2&gt;x +=3D 50;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT =\r\nface=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n&nbsp;&nbsp;&n=\r\nbsp; m_frame++;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&=\r\nnbsp; &nbsp;&nbsp;&nbsp; \n&nbsp;&nbsp;&nbsp; if (m_frame &gt; 3)&lt;/FONT&gt;&lt;/DI=\r\nV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial \nsize=3D2&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \nm_frame =3D 0;&lt;/FONT&gt;=\r\n&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbs=\r\np; \n&nbsp;&nbsp;&nbsp; break;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial \nsize=3D=\r\n2&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case \nSALTANDO:&lt;/FO=\r\nNT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; \n&nbsp;&nbsp;=\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial \nsi=\r\nze=3D2&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&lt;BR&gt;}&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;=\r\nFONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;Ahora, pensemoslo asi&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/=\r\nFONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Tipito::Update()&lt;/FONT&gt;&lt;=\r\n/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;{&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DAri=\r\nal size=3D2&gt;&nbsp;&nbsp;&nbsp; switch (m_state) /// esto me \nquedo d antes.=\r\n.. pero no me acuerdo como, habia algo loco que hacia que no \ntengas que po=\r\nner un switch por cada estado,m pero me olvide :)&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT f=\r\nace=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; case \nCAMINANDO:=\r\n&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nb=\r\nsp;&nbsp; \n&nbsp;&nbsp;&nbsp; m_frame =3D 0;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n&nbsp;&nbsp;&nbsp;=\r\n m_x +=3D 50;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial \nsize=3D2&gt;&nbsp;&nbsp;&n=\r\nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \nframe();&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;=\r\n\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n&n=\r\nbsp;&nbsp;&nbsp; m_frame++;&lt;/FONT&gt;&lt;/DIV&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n&nbsp;&nbsp;&nbsp; m_x +=3D 50;=\r\n&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nb=\r\nsp;&nbsp; \n&nbsp;&nbsp;&nbsp; frame();&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;\n&lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n&nbsp;&nbsp;&nbsp;=\r\n m_frame++;&lt;/FONT&gt;&lt;/DIV&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp=\r\n;&nbsp; &nbsp;&nbsp;&nbsp; \n&nbsp;&nbsp;&nbsp; m_x +=3D 50;&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;D=\r\nIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n&nbsp=\r\n;&nbsp;&nbsp; frame();&lt;BR&gt;}&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;=\r\n/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Bueno, lo estoy mirando=\r\n esto y no tiene mucho \nsentido por si el usuario interrumpe la animacion d=\r\ne caminar antes que se \nmuestren los frames.. aparte el switch, la verdad n=\r\nunca programe nada en div... \nhabria que fijarse, pero la idea creo que era=\r\n que dea alguna forma no tenia el \nswitch y directamente uno trabajaba como=\r\n si fuera todo un mismo caso... Ademas \npensa que el frame() seria algo asi=\r\n tipo el doevents de visual basic, entonces \nactualizaria ahi mismo los inp=\r\nuts.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV=\r\n&gt;&lt;FONT face=3DArial size=3D2&gt;La joda aca es que cuando uno llama a frame() =\r\nse \ncorta la ejecucion y se dibuja, y recien se reanuda, desde ese mismo pu=\r\nnto donde \ncorto, en el siguiente ciclo de dibujo.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT =\r\nface=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;=\r\nEsto es a lo que me refiero, algun iluminado de div \nque diga si lo que dig=\r\no yo es cualquiera que no hace falta poner switch por \nestados o algo asi, =\r\no como es que div facilita las cosas para programar.. \nbasicamente mi idea =\r\nes proveer la interfaz de div sobre C++.&lt;/FONT&gt;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;FONT face=3DAri=\r\nal size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n&lt;BLOCKQUOTE \nstyle=3D&quot;PADDING-RIGHT: 0px; P=\r\nADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #000000 2px solid; MARGIN-=\r\nRIGHT: 0px&quot;&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;----- Original Message -----=\r\n &lt;/DIV&gt;\n  &lt;DIV \n  style=3D&quot;BACKGROUND: #e4e4e4; FONT: 10pt arial; font-colo=\r\nr: black&quot;&gt;&lt;B&gt;From:&lt;/B&gt; \n  &lt;A title=3Dmaverickthunder@... \n  href=\r\n=3D&quot;mailto:maverickthunder@...&quot;&gt;Maverick Thunder&lt;/A&gt; &lt;/DIV&gt;\n  &lt;DIV=\r\n style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;To:&lt;/B&gt; &lt;A title=3Dadva@... \n=\r\n  href=3D&quot;mailto:adva@...&quot;&gt;adva@...&lt;/A&gt; &lt;/DIV=\r\n&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Sent:&lt;/B&gt; Thursday, June 02, 2005 9:=\r\n20 \n  AM&lt;/DIV&gt;\n  &lt;DIV style=3D&quot;FONT: 10pt arial&quot;&gt;&lt;B&gt;Subject:&lt;/B&gt; Re: [adva]=\r\n dise=F1o y arquitectura \n  de frameworks&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial s=\r\nize=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT \n  face=3DArial siz=\r\ne=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial \n  size=\r\n=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial \n  size=\r\n=3D2&gt;&lt;/FONT&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&lt;BR&gt;&lt;/DIV&gt;\n  &lt;DIV&gt;Nicol=E1s:=\r\n&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;Hay ci=\r\nertas cosas que no entiendo, bas=E1ndome en tu \n  explicaci=F3n,&nbsp;y&nbs=\r\np;tambi=E9n se me empiezan a crear ramificaciones:&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;Caso 1:&nbsp;El DIV llama a la=\r\n funci=F3n &quot;frame&quot; si existe en el objeto en \n  forma autom=E1tica. Esto me=\r\n hace suponer que usa un thread aparte para dibujar \n  los objetos, pero es=\r\no implicar=EDa usar rutinas de sincronismo entre threads lo \n  cual&nbsp;le=\r\n har=EDa perder velocidad al c=F3digo.&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;Caso 2: El programador llama a la funci=F3n=\r\n &quot;frame&quot; en cualquier parte del \n  c=F3digo. Entonces podr=EDa tener:&lt;/DIV&gt;=\r\n\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;Caso 2.1: Se=\r\n dibuja el frame cuando se llama a la funci=F3n. Aqui no le veo \n  mucho la=\r\n diferencia entre hacerlo en cualquier parte del c=F3digo. Lo =FAnico es \n =\r\n que si cada vez llamo a una funci=F3n que por ej. me actualice la posici=\r\n=F3n del \n  sprite y luego llamo al frame me podr=EDa llegar a tirar los FP=\r\nS abajo \n  (dependiendo la velocidad de la m=E1quina y los objetos que dibu=\r\njo). Tambi=E9n si \n  el refresco vertical es de 60Hz, como que no tiene muc=\r\nho sentido andar \n  perdiendo el tiempo dibujando 120 cuadros.&lt;/DIV&gt;\n  &lt;DIV=\r\n&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;Caso 2.2: Al llamar=\r\n a la funci=F3n frame, el objeto se coloca en una lista \n  de &quot;objetos a di=\r\nbujar&quot;, guardando la informaci=F3n de posici=F3n actual, tama=F1o y \n  bla =\r\nbla. Esto &lt;/DIV&gt;\n  &lt;DIV&gt;implicar=EDa la creaci=F3n de una lista din=E1mica,=\r\n con la consiguiente perdida \n  de tiempo de ejecuci=F3n y memoria. Una vez=\r\n hice algo as=ED para mostrar los \n  objetos en pantalla y sinceramente no =\r\ngan=E9 nada.&lt;/DIV&gt;\n  &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n =\r\n &lt;DIV&gt;Lo que puse son casos que me salieron a la luz cuando vi tu mail. Obv=\r\nio \n  que pueden haber m=E1s casos favorables o que no lo sean.&lt;/DIV&gt;\n  &lt;DI=\r\nV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;Yo por ej. uso, ll=\r\nam=E9mosle el paradigma del D.O.S., programaci=F3n recontra \n  lineal bajo =\r\nWindows y si ej. hago un malloc y no hay memoria, directamente \n  llamo al =\r\nexit() sin andar perdiendo el tiempo de devolver un c=F3digo de error \n  qu=\r\ne la funci=F3n padre chequea entonces devuelve el c=F3digo de error asi has=\r\nta \n  llegar al main para que te muestre un cartel &quot;no hay memoria suficien=\r\nte&quot;. Me \n  ahorro un mont=F3n de c=F3digo al cohete y el programa es mas le=\r\ngible. Obvio que \n  tomo los recaudos necesarios para que cuando llamo al e=\r\nxit(), los objetos de \n  DirectX entre otros se destruyan en forma adecuada=\r\n y no me quede un leak en \n  memoria.&lt;/DIV&gt;\n  &lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;Y po=\r\nr =FAltimo, cada uno deber=EDa programar a como m=E1s se le antoja y \n  dej=\r\narse de joder con el extremismo de la programaci=F3n estructurada, orientad=\r\na \n  a objetos o asi o as=E1&lt;/DIV&gt;\n  &lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n  &lt;DIV&gt;Saludos, Maur=\r\no,&lt;/DIV&gt;\n  &lt;DIV&gt;Caim=E1n Co.&lt;BR&gt;&lt;BR&gt;&lt;B&gt;&lt;I&gt;Nicol=E1s Vinacur \n  &lt;nvinacur=\r\n@...&gt;&lt;/I&gt;&lt;/B&gt; escribi=F3:&lt;/DIV&gt;\n  &lt;BLOCKQUOTE class=3Dreplbq=\r\n \n  style=3D&quot;PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #1010ff 2px =\r\nsolid&quot;&gt;\n    &lt;META content=3D&quot;MSHTML 6.00.2900.2627&quot; name=3DGENERATOR&gt;\n    &lt;=\r\nSTYLE&gt;&lt;/STYLE&gt;\n\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;Buen.. les tiro una co=\r\nsa que estaba pensando, a \n    ver que les parece.. Estuve viendo en la cas=\r\na&nbsp;de un game developer muy \n    conocido por todos nosotros, un libro =\r\nsobre Div 2. Resulta que el div 2 \n    tiene un paradigma completamente dis=\r\ntinto. En general, cualquier engine 3d \n    tiene, para cada objeto, un fun=\r\ncion Update(). Dentro del gameloop, aparte de \n    otras cosas se hace algo=\r\n como &#39;para cada objeto: Update() &#39;. Ademas, despues \n    de eso, se hara e=\r\nl DrawScreen(). &lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&=\r\nnbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; Entonce=\r\ns, la cuestion es, \n    para los que no conocen el Div2, que cada objeto ti=\r\nene su funcion &#39;update&#39; o \n    algo por el estilo (no indague mucho pero er=\r\na algo asi), la cuestion es que \n    no se corta cuando se corta la funcion=\r\n, sino que cuando se tiene que mostrar \n    el frame de ese objeto, se llam=\r\na a una funcion frame, que lo que hace es \n    cortar la ejecucion, y asi c=\r\non todos los objetos y despues sigue corriendo \n    DESDE DONDE HABIA CORTA=\r\nDO, y no desde el principio de la \n    funcion.&lt;/FONT&gt;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT=\r\n face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=3DArial size=\r\n=3D2&gt;&nbsp;&nbsp;&nbsp; El resultado de este \n    &quot;paradigma&quot; es que para h=\r\nacer los distintos movimientos de los objetos, no \n    se tiene que hacer g=\r\nigantescas maquinas de estados para poder dibujar lo que \n    se necesite y=\r\n dejar las variables listas para cuando la rutina o el objeto \n    que dibu=\r\nje dibujen, sino que se llama desde ahi nomas, y se sigue \n    ejecutando. =\r\nEntonces, facilita muchisimo la programacion de \n    juegos.&lt;/FONT&gt;&lt;/DIV&gt;\n =\r\n   &lt;DIV&gt;&lt;FONT face=3DArial size=3D2&gt;&lt;/FONT&gt;&nbsp;&lt;/DIV&gt;\n    &lt;DIV&gt;&lt;FONT face=\r\n=3DArial size=3D2&gt;&nbsp;&nbsp;&nbsp; Entonces, empece a pensar.. \n    mierd=\r\na si esto hace que todo este tan bueno, no se puede meter asi en C++? \n    =\r\nEntonces la cuestion es que si pones por ejemplo los objetos tengan una \n  =\r\n  funcion&nbsp;frame() y funcione como en div, entonces se meteria frame so=\r\nbre \n    la pila, y despues volveria, y en todo caso despues bajaria y debe=\r\nria \n    finalizar la ejecucion de la funcion entera y despues actualizar e=\r\nl \n    siguiente. La bola viene de que lo que pense es que se podria hacer =\r\nalgo asi \n    como que frame() sea un puntero al update del siguiente objet=\r\no en la lista, \n    y el ultimo frame() dibuje la pantalla entonces despues=\r\n se seguiria \n    ejecutando todo... es horrible en forma paradigmatica est=\r\nructural, pero \n    puede andar.. y ademas puede hacer que se pueda program=\r\nar juegos \n    completamente mas facil, aunque sea horrible teoricamente.. =\r\nparece re util,. \n    que opinan?&lt;/FONT&gt;&lt;/DIV&gt;&lt;/BLOCKQUOTE&gt;\n  &lt;P&gt;\n  &lt;HR SIZ=\r\nE=3D1&gt;\n  A tu celular =BFno le falta algo?&lt;BR&gt;Us=E1 &lt;A \n  href=3D&quot;http://br=\r\n.yahoo.com/info/mobile/ar/messenger/&quot;&gt;Yahoo! Messenger&lt;/A&gt; y &lt;A \n  href=3D&quot;=\r\nhttp://br.yahoo.com/info/mobile/ar/correo/&quot;&gt;Correo Yahoo!&lt;/A&gt; en tu \n  tel=\r\n=E9fono celular.&lt;BR&gt;M=E1s informaci=F3n &lt;A \n  href=3D&quot;http://ar.movil.yahoo=\r\n.com/&quot;&gt;aqu=ED&lt;/A&gt;. &lt;/BODY&gt;&lt;/HTML&gt;\n\r\n------=_NextPart_000_0036_01C56856.C4A60D20--\r\n\n"}}