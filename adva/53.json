{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[{"name":"READ"}]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"ar.groups.yahoo.com","intlCode":"ar"},"comscore":"pageview_candidate","ygData":{"userId":144529474,"authorName":"Sebastian Uribe","from":"Sebastian Uribe &lt;suribe@...&gt;","profile":"ifseu","replyTo":"LIST","senderId":"INmZZwyvlbxQlUb_1_eTqVUjdR8yQ4oieLPErNbyzGJycV3WIZaS4XT55G9kzLoA_dEhw4yh8Q0mjYND2uIZee6hYpGel92YLV6bvds","spamInfo":{"isSpam":false,"reason":"0"},"subject":"profiling, optimización, subreprogramacion,  etc.","postDate":"1098318508","msgId":53,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDQxNzcwMkFDLjEwOTA3MDRAaW5tdW5lLmNvbS5hcj4="},"prevInTopic":0,"nextInTopic":57,"prevInTime":52,"nextInTime":54,"topicId":53,"numMessagesInTopic":4,"msgSnippet":"Habitualmente escucho a programadores decir cosas como no uso STL porque es lento , o el lenguaje X es lento , o no uso el motor ZZZ porque no soporta XXX","rawEmail":"Return-Path: &lt;suribe@...&gt;\r\nX-Sender: suribe@...\r\nX-Apparently-To: adva@...\r\nReceived: (qmail 25241 invoked from network); 21 Oct 2004 00:28:25 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m21.grp.scd.yahoo.com with QMQP; 21 Oct 2004 00:28:25 -0000\r\nReceived: from unknown (HELO smtp208.mail.sc5.yahoo.com) (216.136.130.116)\n  by mta3.grp.scd.yahoo.com with SMTP; 21 Oct 2004 00:28:25 -0000\r\nReceived: from unknown (HELO ?192.168.1.11?) (ifseu@200.55.74.101 with plain)\n  by smtp208.mail.sc5.yahoo.com with SMTP; 21 Oct 2004 00:28:23 -0000\r\nMessage-ID: &lt;417702AC.1090704@...&gt;\r\nDate: Wed, 20 Oct 2004 21:28:28 -0300\r\nOrganization: Inmune Games\r\nUser-Agent: Mozilla Thunderbird 0.8 (Windows/20040913)\r\nX-Accept-Language: en-us, en\r\nMIME-Version: 1.0\r\nTo: adva@...\r\nContent-Type: text/plain; charset=ISO-8859-1; format=flowed\r\nContent-Transfer-Encoding: 8bit\r\nX-eGroups-Remote-IP: 216.136.130.116\r\nFrom: Sebastian Uribe &lt;suribe@...&gt;\r\nSubject: profiling, =?ISO-8859-1?Q?optimizaci=F3n=2C_subreprogramacion=2C?=\n =?ISO-8859-1?Q?_etc=2E?=\r\nX-Yahoo-Group-Post: member; u=144529474\r\nX-Yahoo-Profile: ifseu\r\n\r\n\n    Habitualmente escucho a programadores decir cosas como &quot;no uso STL \nporque es lento&quot;, o &quot;el lenguaje X es lento&quot;, o &quot;no uso el motor ZZZ \nporque no soporta XXX pol�gonos a YYfps&quot; o cosas similares. Pero en \ngeneral, cuando pregunto si hacen profiling del c�digo para encontrar \nlas razones de la lentitud, me encuentro con respuestas negativas, desde \n&quot;qu� es profiling?&quot;, hasta simples &quot;no&quot;.\n\n    Mi impresi�n es que generalmente se habla mucho sobre optimizaci�n, \nporque parecer�a que uno es m�s macho si su c�digo es m�s eficiente, \npero se analiza poco. Me parece importante en nuestra industria de \nvideojuegos hacer un an�lisis de esto, porque:\n\n* La mayor�a de los proyectos de juegos locales amateur no llegan a un \nestado de madurez jugable, y no es solo por falta de assets \nprofesionales (arte, m�sica, sonido, etc.), sino que normalmente faltan \nimplementar features para que sea jugable. La mayor�a de los proyectos \n&quot;no amateur&quot; se retrasan tambi�n en la implementaci�n.\n\n* Implementar uno mismo estructuras de datos y algoritmos obviamente \nlleva m�s tiempo que usar unas hechas: tiempo de programar, probar y \noptimizar, vs. tiempo de aprender un API (en muchos casos ya conocida).\n\n* En las aplicaciones &quot;de negocios&quot;, la mayor�a del tiempo se lo come la \nbase de datos. En los videojuegos, hoy d�a, la mayor�a se lo come el \ndriver de video. �Tan importante es en qu� funciona la l�gica del juego \ny c�mo se almacenan los datos? Quiz�s si... pero es dif�cil de responder \nsin analizar antes la performance del c�digo haciendo alg�n tipo de \nprofiling. :)\n\n    Entonces, si los proyectos no se terminan porque falta laburo de \nprogramaci�n, y a la vez se pierde mucho tiempo reimplementado cosas que \nya existen (porque se cree - quiz�s err�neamente - que es m�s lento \nusarlas) y que probablemente no afecten realmente la performace, hay \nalgo que no cierra...\n\n    Lo que yo veo normalmente es que se invierte demasiada energ�a en \nimplementar soluciones �ptimas a problemas ya resueltos de forma \naceptable. Y en general, no hace falta lo mejor de lo mejor, sino lo \n&quot;suficientemente bueno&quot; como para completar los objetivos que uno tiene. \nM�s adelante, si est�n los problemas resueltos, pueden revisarse para \nresolverlos de la forma m�s �ptima (si es que hace falta!).\n    Despu�s de todo, si la intenci�n de un proyecto es llegar a un \nproducto, una demo o lo que sea, es mejor un producto completo aunque \nm�s lento, que ning�n producto. �O no?\n\n    Dos frases para pensar:\n\n&quot;La optimizaci�n prematura es la ra�z de todos los males&quot; (Hoare)\n&quot;Lo mejor es enemigo de lo bueno&quot; (Voltaire)\n\n\n-- \n///\nSebasti�n Uribe\nInmune Games\nsuribe@...\nwww.inmune.com.ar\n\n\n"}}